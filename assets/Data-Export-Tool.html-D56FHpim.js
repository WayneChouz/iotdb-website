import{_ as e,c as s,b as a,o as l}from"./app-D6Q6yxgZ.js";const n={};function i(d,t){return l(),s("div",null,t[0]||(t[0]=[a(`<h1 id="数据导出" tabindex="-1"><a class="header-anchor" href="#数据导出"><span>数据导出</span></a></h1><h2 id="_1-导出工具介绍" tabindex="-1"><a class="header-anchor" href="#_1-导出工具介绍"><span>1. 导出工具介绍</span></a></h2><p>导出工具可以将 SQL 查询的数据导出为指定的格式，包含用于导出 TsFile 文件的 <code>export-tsfile.sh/bat</code> 脚本和支持 CSV 和 SQL 格式的导出的 <code>export-data.sh/bat</code> 脚本。</p><h2 id="_2-支持的数据类型" tabindex="-1"><a class="header-anchor" href="#_2-支持的数据类型"><span>2. 支持的数据类型</span></a></h2><ul><li><p>CSV：纯文本格式，存储格式化数据，需按照下文指定 CSV 格式进行构造</p></li><li><p>SQL：包含自定义 SQL 语句的文件</p></li><li><p>TsFile： IoTDB 中使用的时间序列的文件格式</p></li></ul><h2 id="_3-export-tsfile-脚本" tabindex="-1"><a class="header-anchor" href="#_3-export-tsfile-脚本"><span>3. export-tsfile 脚本</span></a></h2><p>支持 TsFile： IoTDB 中使用的时间序列的文件格式</p><h4 id="_3-1-运行命令" tabindex="-1"><a class="header-anchor" href="#_3-1-运行命令"><span>3.1 运行命令</span></a></h4><div class="language-Bash line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre><code><span class="line"># Unix/OS X</span>
<span class="line">tools/export-tsfile.sh  -h &lt;ip&gt; -p &lt;port&gt; -u &lt;username&gt; -pw &lt;password&gt; -td &lt;directory&gt; [-f &lt;export filename&gt; -q &lt;query command&gt; -s &lt;sql file&gt;]</span>
<span class="line"></span>
<span class="line"># Windows</span>
<span class="line">tools\\export-tsfile.bat -h &lt;ip&gt; -p &lt;port&gt; -u &lt;username&gt; -pw &lt;password&gt; -td &lt;directory&gt; [-f &lt;export filename&gt; -q &lt;query command&gt; -s &lt;sql file&gt;]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-参数介绍" tabindex="-1"><a class="header-anchor" href="#_3-2-参数介绍"><span>3.2 参数介绍</span></a></h4><table><thead><tr><th><strong>参数</strong></th><th><strong>定义</strong></th><th><strong>是否必填</strong></th><th><strong>默认</strong></th></tr></thead><tbody><tr><td>-h</td><td>主机名</td><td>否</td><td>127.0.0.1</td></tr><tr><td>-p</td><td>端口号</td><td>否</td><td>6667</td></tr><tr><td>-u</td><td>用户名</td><td>否</td><td>root</td></tr><tr><td>-pw</td><td>密码</td><td>否</td><td>root</td></tr><tr><td>-t</td><td>目标文件目录，用于指定输出文件应该保存到的目录</td><td>是</td><td>-</td></tr><tr><td>-tfn</td><td>导出文件的名称</td><td>否</td><td>-</td></tr><tr><td>-q</td><td>想要执行的查询命令的数量，可能用于批量执行查询</td><td>否</td><td>-</td></tr><tr><td>-s</td><td>SQL 文件路径，用于指定包含要执行的 SQL 语句的文件位置</td><td>否</td><td>-</td></tr><tr><td>-timeout</td><td>会话查询的超时时间，用于指定查询操作在自动终止前允许的最长时间</td><td>否</td><td>-</td></tr></tbody></table><p>除此之外，如果没有使用<code>-s</code>和<code>-q</code>参数，在导出脚本被启动之后你需要按照程序提示输入查询语句，不同的查询结果会被保存到不同的TsFile文件中。</p><h4 id="_3-3-运行示例" tabindex="-1"><a class="header-anchor" href="#_3-3-运行示例"><span>3.3 运行示例</span></a></h4><div class="language-Bash line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre><code><span class="line"># Unix/OS X</span>
<span class="line">tools/export-tsfile.sh -h 127.0.0.1 -p 6667 -u root -pw root -td ./</span>
<span class="line"># or</span>
<span class="line">tools/export-tsfile.sh -h 127.0.0.1 -p 6667 -u root -pw root -td ./ -q &quot;select * from root.**&quot;</span>
<span class="line"># Or</span>
<span class="line">tools/export-tsfile.sh -h 127.0.0.1 -p 6667 -u root -pw root -td ./ -s ./sql.txt</span>
<span class="line"># Or</span>
<span class="line">tools/export-tsfile.sh -h 127.0.0.1 -p 6667 -u root -pw root -td ./ -s ./sql.txt -f myTsFile</span>
<span class="line"># Or</span>
<span class="line">tools/export-tsfile.sh -h 127.0.0.1 -p 6667 -u root -pw root -td ./ -s ./sql.txt -f myTsFile -t 10000</span>
<span class="line"></span>
<span class="line"># Windows</span>
<span class="line">tools/export-tsfile.bat -h 127.0.0.1 -p 6667 -u root -pw root -td ./</span>
<span class="line"># Or</span>
<span class="line">tools/export-tsfile.bat -h 127.0.0.1 -p 6667 -u root -pw root -td ./ -q &quot;select * from root.**&quot;</span>
<span class="line"># Or</span>
<span class="line">tools/export-tsfile.bat -h 127.0.0.1 -p 6667 -u root -pw root -td ./ -s ./sql.txt</span>
<span class="line"># Or</span>
<span class="line">tools/export-tsfile.bat -h 127.0.0.1 -p 6667 -u root -pw root -td ./ -s ./sql.txt -f myTsFile</span>
<span class="line"># Or</span>
<span class="line">tools/export-tsfile.sh -h 127.0.0.1 -p 6667 -u root -pw root -td ./ -s ./sql.txt -f myTsFile -t 10000</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-export-data-脚本" tabindex="-1"><a class="header-anchor" href="#_4-export-data-脚本"><span>4. export-data 脚本</span></a></h2><p>支持 CSV：纯文本格式，存储格式化数据，需按照下文指定 CSV 格式进行构造</p><p>支持 SQL：包含自定义 SQL 语句的文件</p><h4 id="_4-1-运行命令" tabindex="-1"><a class="header-anchor" href="#_4-1-运行命令"><span>4.1 运行命令</span></a></h4><div class="language-Bash line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre><code><span class="line"># Unix/OS X</span>
<span class="line">&gt;tools/export-data.sh  -h &lt;ip&gt; -p &lt;port&gt; -u &lt;username&gt; -pw &lt;password&gt; -t &lt;directory&gt; [-tf &lt;time-format&gt; -datatype &lt;true/false&gt; -q &lt;query command&gt; -s &lt;source sql file&gt; -tfn &lt;target file name&gt; -lpf &lt;int&gt; -type &lt;export type&gt; -aligned &lt;true/false&gt;]</span>
<span class="line"></span>
<span class="line"># Windows</span>
<span class="line">&gt;tools\\export-data.bat -h &lt;ip&gt; -p &lt;port&gt; -u &lt;username&gt; -pw &lt;password&gt; -t &lt;directory&gt; [-tf &lt;time-format&gt; -datatype &lt;true/false&gt; -q &lt;query command&gt; -s &lt;source sql file&gt; -tfn &lt;target file name&gt; -lpf &lt;int&gt; -type &lt;export type&gt; -aligned &lt;true/false&gt;]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-参数介绍" tabindex="-1"><a class="header-anchor" href="#_4-2-参数介绍"><span>4.2 参数介绍</span></a></h4><table><thead><tr><th><strong>参数</strong></th><th><strong>定义</strong></th><th><strong>是否必填</strong></th><th><strong>默认</strong></th></tr></thead><tbody><tr><td>-h</td><td>主机名</td><td>否</td><td>127.0.0.1</td></tr><tr><td>-p</td><td>端口号</td><td>否</td><td>6667</td></tr><tr><td>-u</td><td>用户名</td><td>否</td><td>root</td></tr><tr><td>-pw</td><td>密码</td><td>否</td><td>root</td></tr><tr><td>-t</td><td>导出的 CSV 或 SQL 文件的输出路径(V1.3.2版本参数是<code>-td</code>)</td><td>是</td><td></td></tr><tr><td>-datatype</td><td>是否在 CSV 文件的 header 中时间序列的后面打印出对应的数据类型，选项为 true 或者 false</td><td>否</td><td>true</td></tr><tr><td>-q</td><td>在命令中直接指定想要执行的查询语句（目前仅支持部分语句，详细明细见下表）说明：-q 与 -s 参数必填其一，同时填写则 -q 生效。详细支持的 SQL 语句示例，请参考下方“SQL语句支持明细”</td><td>否</td><td></td></tr><tr><td>-s</td><td>指定 SQL 文件，该文件可包含一条或多条 SQL 语句。如果包含多条 SQL 语句，语句之间应该用换行(回车)进行分割。每一条 SQL 语句对应一个或多个输出的CSV或 SQL 文件说明：-q 与 -s 参数必填其一，同时填写则-q生效。详细支持的 SQL 语句示例，请参考下方“SQL语句支持规则”</td><td>否</td><td></td></tr><tr><td>-type</td><td>指定导出的文件类型，选项为 csv 或者 sql</td><td>否</td><td>csv</td></tr><tr><td>-tf</td><td>指定时间格式。时间格式必须遵守<a href="https://calendars.wikia.org/wiki/ISO_8601" target="_blank" rel="noopener noreferrer">ISO 8601</a>标准，或时间戳（<code>timestamp</code>） 说明：只在 -type 为 csv 时生效</td><td>否</td><td>yyyy-MM-dd HH:mm:ss.SSSz</td></tr><tr><td>-lpf</td><td>指定导出的 dump 文件最大行数(V1.3.2版本参数是<code>-linesPerFile</code>)</td><td>否</td><td>10000</td></tr><tr><td>-timeout</td><td>指定 session 查询时的超时时间，单位为ms</td><td>否</td><td>-1</td></tr></tbody></table><h4 id="_4-3-sql-语句支持规则" tabindex="-1"><a class="header-anchor" href="#_4-3-sql-语句支持规则"><span>4.3 SQL 语句支持规则</span></a></h4><ol><li>只支持查询语句，非查询语句（如：元数据管理、系统管理等语句）不支持。对于不支持的 SQL ，程序会自动跳过，同时输出错误信息。</li><li>查询语句中目前版本仅支持原始数据的导出，如果有使用 group by、聚合函数、udf、操作运算符等则不支持导出为 SQL。原始数据导出时请注意，若导出多个设备数据，请使用 align by device 语句。详细示例如下：</li></ol><table><thead><tr><th></th><th><strong>支持导出</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td>原始数据单设备查询</td><td>支持</td><td>select * from root.s_0.d_0</td></tr><tr><td>原始数据多设备查询（aligin by device）</td><td>支持</td><td>select * from root.** align by device</td></tr><tr><td>原始数据多设备查询（无 aligin by device）</td><td>不支持</td><td>select * from root.*<em>select * from root.s_0.</em></td></tr></tbody></table><h4 id="_4-4-运行示例" tabindex="-1"><a class="header-anchor" href="#_4-4-运行示例"><span>4.4 运行示例</span></a></h4><ul><li>导出某 SQL 执行范围下的所有数据至 CSV 文件。</li></ul><div class="language-Bash line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre><code><span class="line"># Unix/OS X</span>
<span class="line">&gt;tools/export-data.sh  -h &lt;ip&gt; -p &lt;port&gt; -u &lt;username&gt; -pw &lt;password&gt; -t &lt;directory&gt; [-tf &lt;time-format&gt; -datatype &lt;true/false&gt; -q &lt;query command&gt; -s &lt;source sql file&gt; -tfn &lt;target file name&gt; -lpf &lt;int&gt; -type &lt;export type&gt; -aligned &lt;true/false&gt;]</span>
<span class="line"></span>
<span class="line"># Windows</span>
<span class="line">&gt;tools\\export-data.bat -h &lt;ip&gt; -p &lt;port&gt; -u &lt;username&gt; -pw &lt;password&gt; -t &lt;directory&gt; [-tf &lt;time-format&gt; -datatype &lt;true/false&gt; -q &lt;query command&gt; -s &lt;source sql file&gt; -tfn &lt;target file name&gt; -lpf &lt;int&gt; -type &lt;export type&gt; -aligned &lt;true/false&gt;]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>导出结果</li></ul><div class="language-Bash line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre><code><span class="line">Time,root.stock.Legacy.0700HK.L1_BidPrice,root.stock.Legacy.0700HK.Type,root.stock.Legacy.0700HK.L1_BidSize,root.stock.Legacy.0700HK.Domain,root.stock.Legacy.0700HK.L1_BuyNo,root.stock.Legacy.0700HK.L1_AskPrice</span>
<span class="line">2024-07-29T18:37:18.700+08:00,0.9666617,3.0,0.021367407654674264,-6.0,false,0.8926191</span>
<span class="line">2024-07-29T18:37:19.701+08:00,0.3057328,3.0,0.9965377284981661,-5.0,false,0.15167356</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>导出 SQL 文件内所有 SQL 执行范围下的所有数据至 CSV 文件。</li></ul><div class="language-Bash line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre><code><span class="line"># Unix/OS X</span>
<span class="line">&gt;tools/export-data.sh -t ./data/ -s export.sql</span>
<span class="line"># Windows</span>
<span class="line">&gt;tools/export-data.bat -t ./data/ -s export.sql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>export.sql 文件内容（-s 参数指向的文件）</li></ul><div class="language-Bash line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre><code><span class="line">select * from root.stock.** limit 100</span>
<span class="line">select * from root.db.** limit 100</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>导出结果文件1</li></ul><div class="language-Bash line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre><code><span class="line">Time,root.stock.Legacy.0700HK.L1_BidPrice,root.stock.Legacy.0700HK.Type,root.stock.Legacy.0700HK.L1_BidSize,root.stock.Legacy.0700HK.Domain,root.stock.Legacy.0700HK.L1_BuyNo,root.stock.Legacy.0700HK.L1_AskPrice</span>
<span class="line">2024-07-29T18:37:18.700+08:00,0.9666617,3.0,0.021367407654674264,-6.0,false,0.8926191</span>
<span class="line">2024-07-29T18:37:19.701+08:00,0.3057328,3.0,0.9965377284981661,-5.0,false,0.15167356</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>导出结果文件2</li></ul><div class="language-Bash line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre><code><span class="line">Time,root.db.Random.RandomBoolean</span>
<span class="line">2024-07-22T17:16:05.820+08:00,true</span>
<span class="line">2024-07-22T17:16:02.597+08:00,false</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>将 IoTDB 数据库中在 SQL 文件内定义的数据，以对齐的格式将其导出为 SQL 语句。</li></ul><div class="language-Bash line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre><code><span class="line"># Unix/OS X</span>
<span class="line">&gt;tools/export-data.sh -h 127.0.0.1 -p 6667 -u root -p root -t ./data/ -s export.sql -type sql -aligned true</span>
<span class="line"># Windows</span>
<span class="line">&gt;tools/export-data.bat -h 127.0.0.1 -p 6667 -u root -p root -t ./data/ -s export.sql -type sql -aligned true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>导出结果</li></ul><div class="language-Bash line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre><code><span class="line">INSERT INTO root.stock.Legacy.0700HK(TIMESTAMP,L1_BidPrice,Type,L1_BidSize,Domain,L1_BuyNo,L1_AskPrice) ALIGNED VALUES (1722249629831,0.62308747,2.0,0.012206747854849653,-6.0,false,0.14164352);</span>
<span class="line">INSERT INTO root.stock.Legacy.0700HK(TIMESTAMP,L1_BidPrice,Type,L1_BidSize,Domain,L1_BuyNo,L1_AskPrice) ALIGNED VALUES (1722249630834,0.7520042,3.0,0.22760657101910464,-5.0,true,0.089064896);</span>
<span class="line">INSERT INTO root.stock.Legacy.0700HK(TIMESTAMP,L1_BidPrice,Type,L1_BidSize,Domain,L1_BuyNo,L1_AskPrice) ALIGNED VALUES (1722249631835,0.3981064,3.0,0.6254559288663467,-6.0,false,0.9767922);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>将某 SQL 执行范围下的所有数据导出至 CSV 文件，指定导出的时间格式为<code>yyyy-MM-dd HH:mm:ss</code>，且表头时间序列的后面打印出对应的数据类型。</li></ul><div class="language-Bash line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre><code><span class="line"># Unix/OS X</span>
<span class="line">&gt;tools/export-data.sh -h 127.0.0.1 -p 6667 -u root -p root -t ./data/ -s export.sql -type sql -aligned true</span>
<span class="line"># Windows</span>
<span class="line">&gt;tools/export-data.bat -h 127.0.0.1 -p 6667 -u root -p root -t ./data/ -s export.sql -type sql -aligned true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>导出结果</li></ul><div class="language-Bash line-numbers-mode" data-highlighter="prismjs" data-ext="Bash" data-title="Bash"><pre><code><span class="line">Time,root.stock.Legacy.0700HK.L1_BidPrice(DOUBLE),root.stock.Legacy.0700HK.Type(DOUBLE),root.stock.Legacy.0700HK.L1_BidSize(DOUBLE),root.stock.Legacy.0700HK.Domain(DOUBLE),root.stock.Legacy.0700HK.L1_BuyNo(BOOLEAN),root.stock.Legacy.0700HK.L1_AskPrice(DOUBLE)</span>
<span class="line">2024-07-30 10:33:55,0.44574088,3.0,0.21476832811611501,-4.0,true,0.5951748</span>
<span class="line">2024-07-30 10:33:56,0.6880933,3.0,0.6289119476165305,-5.0,false,0.114634395</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45)]))}const o=e(n,[["render",i],["__file","Data-Export-Tool.html.vue"]]),p=JSON.parse('{"path":"/zh/UserGuide/latest/Tools-System/Data-Export-Tool.html","title":"数据导出","lang":"zh-CN","frontmatter":{"description":"数据导出 1. 导出工具介绍 导出工具可以将 SQL 查询的数据导出为指定的格式，包含用于导出 TsFile 文件的 export-tsfile.sh/bat 脚本和支持 CSV 和 SQL 格式的导出的 export-data.sh/bat 脚本。 2. 支持的数据类型 CSV：纯文本格式，存储格式化数据，需按照下文指定 CSV 格式进行构造 SQL...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/latest/Tools-System/Data-Export-Tool.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/latest/Tools-System/Data-Export-Tool.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"数据导出"}],["meta",{"property":"og:description","content":"数据导出 1. 导出工具介绍 导出工具可以将 SQL 查询的数据导出为指定的格式，包含用于导出 TsFile 文件的 export-tsfile.sh/bat 脚本和支持 CSV 和 SQL 格式的导出的 export-data.sh/bat 脚本。 2. 支持的数据类型 CSV：纯文本格式，存储格式化数据，需按照下文指定 CSV 格式进行构造 SQL..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-02T08:33:11.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-02T08:33:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据导出\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-02T08:33:11.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. 导出工具介绍","slug":"_1-导出工具介绍","link":"#_1-导出工具介绍","children":[]},{"level":2,"title":"2. 支持的数据类型","slug":"_2-支持的数据类型","link":"#_2-支持的数据类型","children":[]},{"level":2,"title":"3. export-tsfile 脚本","slug":"_3-export-tsfile-脚本","link":"#_3-export-tsfile-脚本","children":[]},{"level":2,"title":"4. export-data 脚本","slug":"_4-export-data-脚本","link":"#_4-export-data-脚本","children":[]}],"git":{"createdTime":1731934472000,"updatedTime":1733128391000,"contributors":[{"name":"W1y1r","email":"150988475+W1y1r@users.noreply.github.com","commits":3}]},"readingTime":{"minutes":6.07,"words":1822},"filePathRelative":"zh/UserGuide/latest/Tools-System/Data-Export-Tool.md","localizedDate":"2024年11月18日","autoDesc":true}');export{o as comp,p as data};
