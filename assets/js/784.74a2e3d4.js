(window.webpackJsonp=window.webpackJsonp||[]).push([[784],{1416:function(s,a,n){"use strict";n.r(a);var t=n(83),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"udf-函数库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#udf-函数库"}},[s._v("#")]),s._v(" UDF 函数库")]),s._v(" "),n("h3",{attrs:{id:"什么是-udf-函数库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是-udf-函数库"}},[s._v("#")]),s._v(" 什么是 UDF 函数库")]),s._v(" "),n("p",[s._v("对基于时序数据的应用而言，数据质量至关重要。"),n("strong",[s._v("UDF 函数库")]),s._v(" 基于 IoTDB 用户自定义函数 (UDF)，实现了一系列关于数据质量的函数，包括数据画像、数据质量评估与修复等，有效满足了工业领域对数据质量的需求。")]),s._v(" "),n("h3",{attrs:{id:"快速开始"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速开始"}},[s._v("#")]),s._v(" 快速开始")]),s._v(" "),n("ol",[n("li",[s._v("下载包含全部依赖的 jar 包和注册脚本；")]),s._v(" "),n("li",[s._v("将 jar 包复制到 IoTDB 程序目录的"),n("code",[s._v("ext\\udf")]),s._v("目录下；")]),s._v(" "),n("li",[s._v("运行"),n("code",[s._v("sbin\\start-server.bat")]),s._v("（在 Windows 下）或"),n("code",[s._v("sbin\\start-server.sh")]),s._v("（在 Linux 或 MacOS 下）以启动 IoTDB 服务器；")]),s._v(" "),n("li",[s._v("将注册脚本复制到 IoTDB 的程序目录下（与"),n("code",[s._v("sbin")]),s._v("目录同级的根目录下），修改脚本中的参数（如果需要）并运行注册脚本以注册 UDF。")])]),s._v(" "),n("h3",{attrs:{id:"联系我们"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#联系我们"}},[s._v("#")]),s._v(" 联系我们")]),s._v(" "),n("ul",[n("li",[s._v("Email: iotdb-quality@protonmail.com")])]),s._v(" "),n("h3",{attrs:{id:"下载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[s._v("#")]),s._v(" 下载")]),s._v(" "),n("p",[s._v("您可以下载下列文件：")]),s._v(" "),n("table",[n("tr",[n("th",{attrs:{align:"center"}},[s._v("版本")]),s._v(" "),n("th",{attrs:{align:"center"}},[s._v("包含全部依赖的 Jar 包")]),s._v(" "),n("th",{attrs:{align:"center",colspan:"2"}},[s._v("注册脚本")]),s._v(" "),n("th",{attrs:{align:"center",colspan:"2"}},[s._v("用户手册")]),s._v(" "),n("th",{attrs:{align:"center"}},[s._v("支持的IoTDB版本")])]),s._v(" "),n("tr",[n("td",{attrs:{align:"center"}},[s._v("In progress")]),s._v(" "),n("td",{attrs:{align:"center"}},[n("a",{attrs:{href:"https://thulab.github.io/iotdb-quality/download/iotdb-quality-2.0.0-SNAPSHOT-jar-with-dependencies.jar"}},[s._v("包含全部依赖的 Jar 包")])]),s._v(" "),n("td",{attrs:{align:"center"}},[n("a",{attrs:{href:"https://thulab.github.io/iotdb-quality/download/register-UDF.bat"}},[s._v("Windows")])]),s._v(" "),n("td",{attrs:{align:"center"}},[n("a",{attrs:{href:"https://thulab.github.io/iotdb-quality/download/register-UDF.sh"}},[s._v("Linux/MacOS")])]),s._v(" "),n("td",{attrs:{align:"center"}},[n("a",{attrs:{href:"https://thulab.github.io/iotdb-quality/download/UserManual_en.pdf"}},[s._v("英文版")])]),s._v(" "),n("td",{attrs:{align:"center"}},[n("a",{attrs:{href:"https://thulab.github.io/iotdb-quality/download/UserManual_zh.pdf"}},[s._v("中文版")])]),s._v(" "),n("td",{attrs:{align:"center"}},[s._v(">= 0.12.0")])])]),s._v(" "),n("h2",{attrs:{id:"数据画像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据画像"}},[s._v("#")]),s._v(" 数据画像")]),s._v(" "),n("h3",{attrs:{id:"acf"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#acf"}},[s._v("#")]),s._v(" ACF")]),s._v(" "),n("h4",{attrs:{id:"函数简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算时间序列的自相关函数值，即序列与自身之间的互相关函数，详情参见"),n("code",[s._v("XCorr")]),s._v("函数文档。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" ACF")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE。序列中共包含$2N-1$个数据点，每个值的具体含义参见"),n("code",[s._v("XCorr")]),s._v("函数文档。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[s._v("序列中的"),n("code",[s._v("NaN")]),s._v("值会被忽略，在计算中表现为0。")])]),s._v(" "),n("h4",{attrs:{id:"使用示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:01.000+08:00|              1|\n|2020-01-01T00:00:02.000+08:00|            NaN|\n|2020-01-01T00:00:03.000+08:00|              3|\n|2020-01-01T00:00:04.000+08:00|            NaN|\n|2020-01-01T00:00:05.000+08:00|              5|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" acf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("05")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+--------------------+\n|                         Time|acf(root.test.d1.s1)|\n+-----------------------------+--------------------+\n|1970-01-01T08:00:00.001+08:00|                 1.0|\n|1970-01-01T08:00:00.002+08:00|                 0.0|\n|1970-01-01T08:00:00.003+08:00|                 3.6|\n|1970-01-01T08:00:00.004+08:00|                 0.0|\n|1970-01-01T08:00:00.005+08:00|                 7.0|\n|1970-01-01T08:00:00.006+08:00|                 0.0|\n|1970-01-01T08:00:00.007+08:00|                 3.6|\n|1970-01-01T08:00:00.008+08:00|                 0.0|\n|1970-01-01T08:00:00.009+08:00|                 1.0|\n+-----------------------------+--------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h3",{attrs:{id:"distinct"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#distinct"}},[s._v("#")]),s._v(" Distinct")]),s._v(" "),n("h4",{attrs:{id:"函数简介-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-2"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数可以返回输入序列中出现的所有不同的元素。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" DISTINCT")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型可以是任意的")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型与输入相同。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[s._v("输出序列的时间戳是无意义的。输出顺序是任意的。")]),s._v(" "),n("li",[s._v("缺失值和空值将被忽略，但"),n("code",[s._v("NaN")]),s._v("不会被忽略。")]),s._v(" "),n("li",[s._v("字符串区分大小写")])]),s._v(" "),n("h4",{attrs:{id:"使用示例-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-2"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d2.s2|\n+-----------------------------+---------------+\n|2020-01-01T08:00:00.001+08:00|          Hello|\n|2020-01-01T08:00:00.002+08:00|          hello|\n|2020-01-01T08:00:00.003+08:00|          Hello|\n|2020-01-01T08:00:00.004+08:00|          World|\n|2020-01-01T08:00:00.005+08:00|          World|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-------------------------+\n|                         Time|distinct(root.test.d2.s2)|\n+-----------------------------+-------------------------+\n|1970-01-01T08:00:00.001+08:00|                    Hello|\n|1970-01-01T08:00:00.002+08:00|                    hello|\n|1970-01-01T08:00:00.003+08:00|                    World|\n+-----------------------------+-------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"histogram"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#histogram"}},[s._v("#")]),s._v(" Histogram")]),s._v(" "),n("h4",{attrs:{id:"函数简介-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-3"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算单列数值型数据的分布直方图。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" HISTOGRAM")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("min")]),s._v("：表示所求数据范围的下限，默认值为 -Double.MAX_VALUE。")]),s._v(" "),n("li",[n("code",[s._v("max")]),s._v("：表示所求数据范围的上限，默认值为 Double.MAX_VALUE，"),n("code",[s._v("start")]),s._v("的值必须小于或等于"),n("code",[s._v("end")]),s._v("。")]),s._v(" "),n("li",[n("code",[s._v("count")]),s._v(": 表示直方图分桶的数量，默认值为 1，其值必须为正整数。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 直方图分桶的值，其中第 i 个桶（从 1 开始计数）表示的数据范围下界为$min+ (i-1)\\cdot\\frac{max-min}{count}$，数据范围上界为$min+ i \\cdot \\frac{max-min}{count}$。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[s._v("如果某个数据点的数值小于"),n("code",[s._v("min")]),s._v("，它会被放入第 1 个桶；如果某个数据点的数值大于"),n("code",[s._v("max")]),s._v("，它会被放入最后 1 个桶。")]),s._v(" "),n("li",[s._v("数据中的空值、缺失值和"),n("code",[s._v("NaN")]),s._v("将会被忽略。")])]),s._v(" "),n("h4",{attrs:{id:"使用示例-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-3"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:00.000+08:00|            1.0|\n|2020-01-01T00:00:01.000+08:00|            2.0|\n|2020-01-01T00:00:02.000+08:00|            3.0|\n|2020-01-01T00:00:03.000+08:00|            4.0|\n|2020-01-01T00:00:04.000+08:00|            5.0|\n|2020-01-01T00:00:05.000+08:00|            6.0|\n|2020-01-01T00:00:06.000+08:00|            7.0|\n|2020-01-01T00:00:07.000+08:00|            8.0|\n|2020-01-01T00:00:08.000+08:00|            9.0|\n|2020-01-01T00:00:09.000+08:00|           10.0|\n|2020-01-01T00:00:10.000+08:00|           11.0|\n|2020-01-01T00:00:11.000+08:00|           12.0|\n|2020-01-01T00:00:12.000+08:00|           13.0|\n|2020-01-01T00:00:13.000+08:00|           14.0|\n|2020-01-01T00:00:14.000+08:00|           15.0|\n|2020-01-01T00:00:15.000+08:00|           16.0|\n|2020-01-01T00:00:16.000+08:00|           17.0|\n|2020-01-01T00:00:17.000+08:00|           18.0|\n|2020-01-01T00:00:18.000+08:00|           19.0|\n|2020-01-01T00:00:19.000+08:00|           20.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" histogram"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"min"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"max"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"20"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"count"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+---------------------------------------------------------------+\n|                         Time|histogram(root.test.d1.s1, "min"="1", "max"="20", "count"="10")|\n+-----------------------------+---------------------------------------------------------------+\n|1970-01-01T08:00:00.000+08:00|                                                              2|\n|1970-01-01T08:00:00.001+08:00|                                                              2|\n|1970-01-01T08:00:00.002+08:00|                                                              2|\n|1970-01-01T08:00:00.003+08:00|                                                              2|\n|1970-01-01T08:00:00.004+08:00|                                                              2|\n|1970-01-01T08:00:00.005+08:00|                                                              2|\n|1970-01-01T08:00:00.006+08:00|                                                              2|\n|1970-01-01T08:00:00.007+08:00|                                                              2|\n|1970-01-01T08:00:00.008+08:00|                                                              2|\n|1970-01-01T08:00:00.009+08:00|                                                              2|\n+-----------------------------+---------------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h3",{attrs:{id:"integral"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#integral"}},[s._v("#")]),s._v(" Integral")]),s._v(" "),n("h4",{attrs:{id:"函数简介-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-4"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算时间序列的数值积分，即以时间为横坐标、数值为纵坐标绘制的折线图中折线以下的面积。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" INTEGRAL")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("unit")]),s._v('：积分求解所用的时间轴单位，取值为 "1S", "1s", "1m", "1H", "1d"（区分大小写），分别表示以毫秒、秒、分钟、小时、天为单位计算积分。\n缺省情况下取 "1s"，以秒为单位。')])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE，序列仅包含一个时间戳为 0、值为积分结果的数据点。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("积分值等于折线图中每相邻两个数据点和时间轴形成的直角梯形的面积之和，不同时间单位下相当于横轴进行不同倍数放缩，得到的积分值可直接按放缩倍数转换。")])]),s._v(" "),n("li",[n("p",[s._v("数据中"),n("code",[s._v("NaN")]),s._v("将会被忽略。折线将以临近两个有值数据点为准。")])])]),s._v(" "),n("h4",{attrs:{id:"使用示例-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-4"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"参数缺省"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参数缺省"}},[s._v("#")]),s._v(" 参数缺省")]),s._v(" "),n("p",[s._v("缺省情况下积分以1s为时间单位。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:01.000+08:00|              1|\n|2020-01-01T00:00:02.000+08:00|              2|\n|2020-01-01T00:00:03.000+08:00|              5|\n|2020-01-01T00:00:04.000+08:00|              6|\n|2020-01-01T00:00:05.000+08:00|              7|\n|2020-01-01T00:00:08.000+08:00|              8|\n|2020-01-01T00:00:09.000+08:00|            NaN|\n|2020-01-01T00:00:10.000+08:00|             10|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" integral"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-------------------------+\n|                         Time|integral(root.test.d1.s1)|\n+-----------------------------+-------------------------+\n|1970-01-01T08:00:00.000+08:00|                     57.5|\n+-----------------------------+-------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("其计算公式为：\n$$\\frac{1}{2}[(1+2)\\times 1 + (2+5) \\times 1 + (5+6) \\times 1 + (6+7) \\times 1 + (7+8) \\times 3 + (8+10) \\times 2] = 57.5$$")]),s._v(" "),n("h4",{attrs:{id:"指定时间单位"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定时间单位"}},[s._v("#")]),s._v(" 指定时间单位")]),s._v(" "),n("p",[s._v("指定以分钟为时间单位。")]),s._v(" "),n("p",[s._v("输入序列同上，用于查询的 SQL 语句如下：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" integral"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"unit"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1m"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-------------------------+\n|                         Time|integral(root.test.d1.s1)|\n+-----------------------------+-------------------------+\n|1970-01-01T08:00:00.000+08:00|                    0.958|\n+-----------------------------+-------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("其计算公式为：\n$$\\frac{1}{2\\times 60}[(1+2) \\times 1 + (2+3) \\times 1 + (5+6) \\times 1 + (6+7) \\times 1 + (7+8) \\times 3 + (8+10) \\times 2] = 0.958$$")]),s._v(" "),n("h3",{attrs:{id:"integralavg"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#integralavg"}},[s._v("#")]),s._v(" IntegralAvg")]),s._v(" "),n("h4",{attrs:{id:"函数简介-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-5"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算时间序列的函数均值，即在相同时间单位下的数值积分除以序列总的时间跨度。更多关于数值积分计算的信息请参考"),n("code",[s._v("Integral")]),s._v("函数。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" INTEGRALAVG")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE，序列仅包含一个时间戳为 0、值为时间加权平均结果的数据点。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("时间加权的平均值等于在任意时间单位"),n("code",[s._v("unit")]),s._v("下计算的数值积分（即折线图中每相邻两个数据点和时间轴形成的直角梯形的面积之和），\n除以相同时间单位下输入序列的时间跨度，其值与具体采用的时间单位无关，默认与 IoTDB 时间单位一致。")])]),s._v(" "),n("li",[n("p",[s._v("数据中的"),n("code",[s._v("NaN")]),s._v("将会被忽略。折线将以临近两个有值数据点为准。")])]),s._v(" "),n("li",[n("p",[s._v("输入序列为空时，函数输出结果为 0；仅有一个数据点时，输出结果为该点数值。")])])]),s._v(" "),n("h4",{attrs:{id:"使用示例-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-5"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:01.000+08:00|              1|\n|2020-01-01T00:00:02.000+08:00|              2|\n|2020-01-01T00:00:03.000+08:00|              5|\n|2020-01-01T00:00:04.000+08:00|              6|\n|2020-01-01T00:00:05.000+08:00|              7|\n|2020-01-01T00:00:08.000+08:00|              8|\n|2020-01-01T00:00:09.000+08:00|            NaN|\n|2020-01-01T00:00:10.000+08:00|             10|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" integralavg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+----------------------------+\n|                         Time|integralavg(root.test.d1.s1)|\n+-----------------------------+----------------------------+\n|1970-01-01T08:00:00.000+08:00|                        5.75|\n+-----------------------------+----------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("其计算公式为：\n$$\\frac{1}{2}[(1+2)\\times 1 + (2+5) \\times 1 + (5+6) \\times 1 + (6+7) \\times 1 + (7+8) \\times 3 + (8+10) \\times 2] / 10 = 5.75$$")]),s._v(" "),n("h3",{attrs:{id:"mad"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mad"}},[s._v("#")]),s._v(" Mad")]),s._v(" "),n("h4",{attrs:{id:"函数简介-6"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-6"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算单列数值型数据的精确或近似绝对中位差，绝对中位差为所有数值与其中位数绝对偏移量的中位数。")]),s._v(" "),n("p",[s._v("如有数据集${1,3,3,5,5,6,7,8,9}$，其中位数为5，所有数值与中位数的偏移量的绝对值为${0,0,1,2,2,2,3,4,4}$，其中位数为2，故而原数据集的绝对中位差为2。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" MAD")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("error")]),s._v("：近似绝对中位差的基于数值的误差百分比，取值范围为 [0,1)，默认值为 0。如当"),n("code",[s._v("error")]),s._v("=0.01 时，记精确绝对中位差为a，近似绝对中位差为b，不等式 $0.99a \\le b \\le 1.01a$ 成立。当"),n("code",[s._v("error")]),s._v("=0 时，计算结果为精确绝对中位差。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为DOUBLE，序列仅包含一个时间戳为 0、值为绝对中位差的数据点。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 数据中的空值、缺失值和"),n("code",[s._v("NaN")]),s._v("将会被忽略。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-6"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-6"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"精确查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#精确查询"}},[s._v("#")]),s._v(" 精确查询")]),s._v(" "),n("p",[s._v("当"),n("code",[s._v("error")]),s._v("参数缺省或为0时，本函数计算精确绝对中位差。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------+\n|                         Time|root.test.s0|\n+-----------------------------+------------+\n|2021-03-17T10:32:17.054+08:00|   0.5319929|\n|2021-03-17T10:32:18.054+08:00|   0.9304316|\n|2021-03-17T10:32:19.054+08:00|  -1.4800133|\n|2021-03-17T10:32:20.054+08:00|   0.6114087|\n|2021-03-17T10:32:21.054+08:00|   2.5163336|\n|2021-03-17T10:32:22.054+08:00|  -1.0845392|\n|2021-03-17T10:32:23.054+08:00|   1.0562582|\n|2021-03-17T10:32:24.054+08:00|   1.3867859|\n|2021-03-17T10:32:25.054+08:00| -0.45429882|\n|2021-03-17T10:32:26.054+08:00|   1.0353678|\n|2021-03-17T10:32:27.054+08:00|   0.7307929|\n|2021-03-17T10:32:28.054+08:00|   2.3167255|\n|2021-03-17T10:32:29.054+08:00|    2.342443|\n|2021-03-17T10:32:30.054+08:00|   1.5809103|\n|2021-03-17T10:32:31.054+08:00|   1.4829416|\n|2021-03-17T10:32:32.054+08:00|   1.5800357|\n|2021-03-17T10:32:33.054+08:00|   0.7124368|\n|2021-03-17T10:32:34.054+08:00| -0.78597564|\n|2021-03-17T10:32:35.054+08:00|   1.2058644|\n|2021-03-17T10:32:36.054+08:00|   1.4215064|\n|2021-03-17T10:32:37.054+08:00|   1.2808295|\n|2021-03-17T10:32:38.054+08:00|  -0.6173715|\n|2021-03-17T10:32:39.054+08:00|  0.06644377|\n|2021-03-17T10:32:40.054+08:00|    2.349338|\n|2021-03-17T10:32:41.054+08:00|   1.7335888|\n|2021-03-17T10:32:42.054+08:00|   1.5872132|\n............\nTotal line number = 10000\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" mad"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------------+\n|                         Time| mad(root.test.s0)|\n+-----------------------------+------------------+\n|1970-01-01T08:00:00.000+08:00|0.6806197166442871|\n+-----------------------------+------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h5",{attrs:{id:"近似查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#近似查询"}},[s._v("#")]),s._v(" 近似查询")]),s._v(" "),n("p",[s._v("当"),n("code",[s._v("error")]),s._v("参数取值不为 0 时，本函数计算近似绝对中位差。")]),s._v(" "),n("p",[s._v("输入序列同上，用于查询的 SQL 语句如下：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" mad"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"error"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.01"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+---------------------------------+\n|                         Time|mad(root.test.s0, "error"="0.01")|\n+-----------------------------+---------------------------------+\n|1970-01-01T08:00:00.000+08:00|               0.6806616245859518|\n+-----------------------------+---------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"median"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#median"}},[s._v("#")]),s._v(" Median")]),s._v(" "),n("h4",{attrs:{id:"函数简介-7"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-7"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算单列数值型数据的精确或近似中位数。中位数是顺序排列的一组数据中居于中间位置的数；当序列有偶数个时，中位数为中间二者的平均数。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" MEDIAN")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("error")]),s._v("：近似中位数的基于排名的误差百分比，取值范围 [0,1)，默认值为 0。如当"),n("code",[s._v("error")]),s._v("=0.01 时，计算出的中位数的真实排名百分比在 0.49~0.51 之间。当"),n("code",[s._v("error")]),s._v("=0 时，计算结果为精确中位数。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE，序列仅包含一个时间戳为 0、值为中位数的数据点。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-7"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-7"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------+\n|                         Time|root.test.s0|\n+-----------------------------+------------+\n|2021-03-17T10:32:17.054+08:00|   0.5319929|\n|2021-03-17T10:32:18.054+08:00|   0.9304316|\n|2021-03-17T10:32:19.054+08:00|  -1.4800133|\n|2021-03-17T10:32:20.054+08:00|   0.6114087|\n|2021-03-17T10:32:21.054+08:00|   2.5163336|\n|2021-03-17T10:32:22.054+08:00|  -1.0845392|\n|2021-03-17T10:32:23.054+08:00|   1.0562582|\n|2021-03-17T10:32:24.054+08:00|   1.3867859|\n|2021-03-17T10:32:25.054+08:00| -0.45429882|\n|2021-03-17T10:32:26.054+08:00|   1.0353678|\n|2021-03-17T10:32:27.054+08:00|   0.7307929|\n|2021-03-17T10:32:28.054+08:00|   2.3167255|\n|2021-03-17T10:32:29.054+08:00|    2.342443|\n|2021-03-17T10:32:30.054+08:00|   1.5809103|\n|2021-03-17T10:32:31.054+08:00|   1.4829416|\n|2021-03-17T10:32:32.054+08:00|   1.5800357|\n|2021-03-17T10:32:33.054+08:00|   0.7124368|\n|2021-03-17T10:32:34.054+08:00| -0.78597564|\n|2021-03-17T10:32:35.054+08:00|   1.2058644|\n|2021-03-17T10:32:36.054+08:00|   1.4215064|\n|2021-03-17T10:32:37.054+08:00|   1.2808295|\n|2021-03-17T10:32:38.054+08:00|  -0.6173715|\n|2021-03-17T10:32:39.054+08:00|  0.06644377|\n|2021-03-17T10:32:40.054+08:00|    2.349338|\n|2021-03-17T10:32:41.054+08:00|   1.7335888|\n|2021-03-17T10:32:42.054+08:00|   1.5872132|\n............\nTotal line number = 10000\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" median"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"error"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.01"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+------------------------------------+\n|                         Time|median(root.test.s0, "error"="0.01")|\n+-----------------------------+------------------------------------+\n|1970-01-01T08:00:00.000+08:00|                   1.021884560585022|\n+-----------------------------+------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"minmax"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#minmax"}},[s._v("#")]),s._v(" MinMax")]),s._v(" "),n("h4",{attrs:{id:"函数简介-8"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-8"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数将输入序列使用 min-max 方法进行标准化。最小值归一至 0，最大值归一至 1.")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" MINMAX")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("compute")]),s._v('：若设置为"batch"，则将数据全部读入后转换；若设置为 "stream"，则需用户提供最大值及最小值进行流式计算转换。默认为 "batch"。')]),s._v(" "),n("li",[n("code",[s._v("min")]),s._v("：使用流式计算时的最小值。")]),s._v(" "),n("li",[n("code",[s._v("max")]),s._v("：使用流式计算时的最大值。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列")]),s._v("：输出单个序列，类型为 DOUBLE。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-8"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-8"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"全数据计算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全数据计算"}},[s._v("#")]),s._v(" 全数据计算")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------+\n|                         Time|root.test.s1|\n+-----------------------------+------------+\n|1970-01-01T08:00:00.100+08:00|         0.0|\n|1970-01-01T08:00:00.200+08:00|         0.0|\n|1970-01-01T08:00:00.300+08:00|         1.0|\n|1970-01-01T08:00:00.400+08:00|        -1.0|\n|1970-01-01T08:00:00.500+08:00|         0.0|\n|1970-01-01T08:00:00.600+08:00|         0.0|\n|1970-01-01T08:00:00.700+08:00|        -2.0|\n|1970-01-01T08:00:00.800+08:00|         2.0|\n|1970-01-01T08:00:00.900+08:00|         0.0|\n|1970-01-01T08:00:01.000+08:00|         0.0|\n|1970-01-01T08:00:01.100+08:00|         1.0|\n|1970-01-01T08:00:01.200+08:00|        -1.0|\n|1970-01-01T08:00:01.300+08:00|        -1.0|\n|1970-01-01T08:00:01.400+08:00|         1.0|\n|1970-01-01T08:00:01.500+08:00|         0.0|\n|1970-01-01T08:00:01.600+08:00|         0.0|\n|1970-01-01T08:00:01.700+08:00|        10.0|\n|1970-01-01T08:00:01.800+08:00|         2.0|\n|1970-01-01T08:00:01.900+08:00|        -2.0|\n|1970-01-01T08:00:02.000+08:00|         0.0|\n+-----------------------------+------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" minmax"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+--------------------+\n|                         Time|minmax(root.test.s1)|\n+-----------------------------+--------------------+\n|1970-01-01T08:00:00.100+08:00| 0.16666666666666666|\n|1970-01-01T08:00:00.200+08:00| 0.16666666666666666|\n|1970-01-01T08:00:00.300+08:00|                0.25|\n|1970-01-01T08:00:00.400+08:00| 0.08333333333333333|\n|1970-01-01T08:00:00.500+08:00| 0.16666666666666666|\n|1970-01-01T08:00:00.600+08:00| 0.16666666666666666|\n|1970-01-01T08:00:00.700+08:00|                 0.0|\n|1970-01-01T08:00:00.800+08:00|  0.3333333333333333|\n|1970-01-01T08:00:00.900+08:00| 0.16666666666666666|\n|1970-01-01T08:00:01.000+08:00| 0.16666666666666666|\n|1970-01-01T08:00:01.100+08:00|                0.25|\n|1970-01-01T08:00:01.200+08:00| 0.08333333333333333|\n|1970-01-01T08:00:01.300+08:00| 0.08333333333333333|\n|1970-01-01T08:00:01.400+08:00|                0.25|\n|1970-01-01T08:00:01.500+08:00| 0.16666666666666666|\n|1970-01-01T08:00:01.600+08:00| 0.16666666666666666|\n|1970-01-01T08:00:01.700+08:00|                 1.0|\n|1970-01-01T08:00:01.800+08:00|  0.3333333333333333|\n|1970-01-01T08:00:01.900+08:00|                 0.0|\n|1970-01-01T08:00:02.000+08:00| 0.16666666666666666|\n+-----------------------------+--------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h3",{attrs:{id:"mode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mode"}},[s._v("#")]),s._v(" Mode")]),s._v(" "),n("h4",{attrs:{id:"函数简介-9"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-9"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算时间序列的众数，即出现次数最多的元素。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" MODE")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型可以是任意的。")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型与输入相同，序列仅包含一个时间戳为众数第一次出现的时间戳、值为众数的数据点。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[s._v("如果有多个出现次数最多的元素，将会输出任意一个。")]),s._v(" "),n("li",[s._v("数据中的空值和缺失值将会被忽略，但"),n("code",[s._v("NaN")]),s._v("不会被忽略。")])]),s._v(" "),n("h4",{attrs:{id:"使用示例-9"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-9"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d2.s2|\n+-----------------------------+---------------+\n|1970-01-01T08:00:00.001+08:00|          Hello|\n|1970-01-01T08:00:00.002+08:00|          hello|\n|1970-01-01T08:00:00.003+08:00|          Hello|\n|1970-01-01T08:00:00.004+08:00|          World|\n|1970-01-01T08:00:00.005+08:00|          World|\n|1970-01-01T08:00:01.600+08:00|          World|\n|1970-01-15T09:37:34.451+08:00|          Hello|\n|1970-01-15T09:37:34.452+08:00|          hello|\n|1970-01-15T09:37:34.453+08:00|          Hello|\n|1970-01-15T09:37:34.454+08:00|          World|\n|1970-01-15T09:37:34.455+08:00|          World|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------------+\n|                         Time|mode(root.test.d2.s2)|\n+-----------------------------+---------------------+\n|1970-01-01T08:00:00.004+08:00|                World|\n+-----------------------------+---------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"mvavg"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mvavg"}},[s._v("#")]),s._v(" MvAvg")]),s._v(" "),n("h4",{attrs:{id:"函数简介-10"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-10"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数计算序列的移动平均。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" MVAVG")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("window")]),s._v("：移动窗口的长度。默认值为 10.")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列")]),s._v("：输出单个序列，类型为 DOUBLE。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-10"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-10"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"指定窗口长度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定窗口长度"}},[s._v("#")]),s._v(" 指定窗口长度")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------+\n|                         Time|root.test.s1|\n+-----------------------------+------------+\n|1970-01-01T08:00:00.100+08:00|         0.0|\n|1970-01-01T08:00:00.200+08:00|         0.0|\n|1970-01-01T08:00:00.300+08:00|         1.0|\n|1970-01-01T08:00:00.400+08:00|        -1.0|\n|1970-01-01T08:00:00.500+08:00|         0.0|\n|1970-01-01T08:00:00.600+08:00|         0.0|\n|1970-01-01T08:00:00.700+08:00|        -2.0|\n|1970-01-01T08:00:00.800+08:00|         2.0|\n|1970-01-01T08:00:00.900+08:00|         0.0|\n|1970-01-01T08:00:01.000+08:00|         0.0|\n|1970-01-01T08:00:01.100+08:00|         1.0|\n|1970-01-01T08:00:01.200+08:00|        -1.0|\n|1970-01-01T08:00:01.300+08:00|        -1.0|\n|1970-01-01T08:00:01.400+08:00|         1.0|\n|1970-01-01T08:00:01.500+08:00|         0.0|\n|1970-01-01T08:00:01.600+08:00|         0.0|\n|1970-01-01T08:00:01.700+08:00|        10.0|\n|1970-01-01T08:00:01.800+08:00|         2.0|\n|1970-01-01T08:00:01.900+08:00|        -2.0|\n|1970-01-01T08:00:02.000+08:00|         0.0|\n+-----------------------------+------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" mvavg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"window"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+---------------------------------+\n|                         Time|mvavg(root.test.s1, "window"="3")|\n+-----------------------------+---------------------------------+\n|1970-01-01T08:00:00.300+08:00|               0.3333333333333333|\n|1970-01-01T08:00:00.400+08:00|                              0.0|\n|1970-01-01T08:00:00.500+08:00|              -0.3333333333333333|\n|1970-01-01T08:00:00.600+08:00|                              0.0|\n|1970-01-01T08:00:00.700+08:00|              -0.6666666666666666|\n|1970-01-01T08:00:00.800+08:00|                              0.0|\n|1970-01-01T08:00:00.900+08:00|               0.6666666666666666|\n|1970-01-01T08:00:01.000+08:00|                              0.0|\n|1970-01-01T08:00:01.100+08:00|               0.3333333333333333|\n|1970-01-01T08:00:01.200+08:00|                              0.0|\n|1970-01-01T08:00:01.300+08:00|              -0.6666666666666666|\n|1970-01-01T08:00:01.400+08:00|                              0.0|\n|1970-01-01T08:00:01.500+08:00|               0.3333333333333333|\n|1970-01-01T08:00:01.600+08:00|                              0.0|\n|1970-01-01T08:00:01.700+08:00|               3.3333333333333335|\n|1970-01-01T08:00:01.800+08:00|                              4.0|\n|1970-01-01T08:00:01.900+08:00|                              0.0|\n|1970-01-01T08:00:02.000+08:00|              -0.6666666666666666|\n+-----------------------------+---------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h3",{attrs:{id:"pacf"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pacf"}},[s._v("#")]),s._v(" PACF")]),s._v(" "),n("h4",{attrs:{id:"函数简介-11"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-11"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数通过求解 Yule-Walker 方程，计算序列的偏自相关系数。对于特殊的输入序列，方程可能没有解，此时输出"),n("code",[s._v("NaN")]),s._v("。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" PACF")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("lag")]),s._v("：最大滞后阶数。默认值为$\\min(10\\log_{10}n,n-1)$，$n$表示数据点个数。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列")]),s._v("：输出单个序列，类型为 DOUBLE。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-11"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-11"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"指定滞后阶数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定滞后阶数"}},[s._v("#")]),s._v(" 指定滞后阶数")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------+\n|                         Time|root.test.s1|\n+-----------------------------+------------+\n|2019-12-27T00:00:00.000+08:00|         5.0|\n|2019-12-27T00:05:00.000+08:00|         5.0|\n|2019-12-27T00:10:00.000+08:00|         5.0|\n|2019-12-27T00:15:00.000+08:00|         5.0|\n|2019-12-27T00:20:00.000+08:00|         6.0|\n|2019-12-27T00:25:00.000+08:00|         5.0|\n|2019-12-27T00:30:00.000+08:00|         6.0|\n|2019-12-27T00:35:00.000+08:00|         6.0|\n|2019-12-27T00:40:00.000+08:00|         6.0|\n|2019-12-27T00:45:00.000+08:00|         6.0|\n|2019-12-27T00:50:00.000+08:00|         6.0|\n|2019-12-27T00:55:00.000+08:00|    5.982609|\n|2019-12-27T01:00:00.000+08:00|   5.9652176|\n|2019-12-27T01:05:00.000+08:00|    5.947826|\n|2019-12-27T01:10:00.000+08:00|   5.9304347|\n|2019-12-27T01:15:00.000+08:00|   5.9130435|\n|2019-12-27T01:20:00.000+08:00|   5.8956523|\n|2019-12-27T01:25:00.000+08:00|    5.878261|\n|2019-12-27T01:30:00.000+08:00|   5.8608694|\n|2019-12-27T01:35:00.000+08:00|    5.843478|\n............\nTotal line number = 18066\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" pacf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lag"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+-----------------------------+\n|                         Time|pacf(root.test.s1, "lag"="5")|\n+-----------------------------+-----------------------------+\n|2019-12-27T00:00:00.000+08:00|                          1.0|\n|2019-12-27T00:05:00.000+08:00|           0.3528915091942786|\n|2019-12-27T00:10:00.000+08:00|           0.1761346122516304|\n|2019-12-27T00:15:00.000+08:00|           0.1492391973294682|\n|2019-12-27T00:20:00.000+08:00|          0.03560059645868398|\n|2019-12-27T00:25:00.000+08:00|           0.0366222998995286|\n+-----------------------------+-----------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"percentile"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#percentile"}},[s._v("#")]),s._v(" Percentile")]),s._v(" "),n("h4",{attrs:{id:"函数简介-12"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-12"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算单列数值型数据的精确或近似分位数。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" PERCENTILE")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("rank")]),s._v("：所求分位数在所有数据中的排名百分比，取值范围为 (0,1]，默认值为 0.5。如当设为 0.5时则计算中位数。")]),s._v(" "),n("li",[n("code",[s._v("error")]),s._v("：近似分位数的基于排名的误差百分比，取值范围为 [0,1)，默认值为0。如"),n("code",[s._v("rank")]),s._v("=0.5 且"),n("code",[s._v("error")]),s._v("=0.01，则计算出的分位数的真实排名百分比在 0.49~0.51之间。当"),n("code",[s._v("error")]),s._v("=0 时，计算结果为精确分位数。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型与输入序列相同。当"),n("code",[s._v("error")]),s._v("=0时，序列仅包含一个时间戳为分位数第一次出现的时间戳、值为分位数的数据点；否则，输出值的时间戳为0。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 数据中的空值、缺失值和"),n("code",[s._v("NaN")]),s._v("将会被忽略。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-12"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-12"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------+\n|                         Time|root.test.s0|\n+-----------------------------+------------+\n|2021-03-17T10:32:17.054+08:00|   0.5319929|\n|2021-03-17T10:32:18.054+08:00|   0.9304316|\n|2021-03-17T10:32:19.054+08:00|  -1.4800133|\n|2021-03-17T10:32:20.054+08:00|   0.6114087|\n|2021-03-17T10:32:21.054+08:00|   2.5163336|\n|2021-03-17T10:32:22.054+08:00|  -1.0845392|\n|2021-03-17T10:32:23.054+08:00|   1.0562582|\n|2021-03-17T10:32:24.054+08:00|   1.3867859|\n|2021-03-17T10:32:25.054+08:00| -0.45429882|\n|2021-03-17T10:32:26.054+08:00|   1.0353678|\n|2021-03-17T10:32:27.054+08:00|   0.7307929|\n|2021-03-17T10:32:28.054+08:00|   2.3167255|\n|2021-03-17T10:32:29.054+08:00|    2.342443|\n|2021-03-17T10:32:30.054+08:00|   1.5809103|\n|2021-03-17T10:32:31.054+08:00|   1.4829416|\n|2021-03-17T10:32:32.054+08:00|   1.5800357|\n|2021-03-17T10:32:33.054+08:00|   0.7124368|\n|2021-03-17T10:32:34.054+08:00| -0.78597564|\n|2021-03-17T10:32:35.054+08:00|   1.2058644|\n|2021-03-17T10:32:36.054+08:00|   1.4215064|\n|2021-03-17T10:32:37.054+08:00|   1.2808295|\n|2021-03-17T10:32:38.054+08:00|  -0.6173715|\n|2021-03-17T10:32:39.054+08:00|  0.06644377|\n|2021-03-17T10:32:40.054+08:00|    2.349338|\n|2021-03-17T10:32:41.054+08:00|   1.7335888|\n|2021-03-17T10:32:42.054+08:00|   1.5872132|\n............\nTotal line number = 10000\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" percentile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rank"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"error"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.01"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+------------------------------------------------------+\n|                         Time|percentile(root.test.s0, "rank"="0.2", "error"="0.01")|\n+-----------------------------+------------------------------------------------------+\n|2021-03-17T10:35:02.054+08:00|                                    0.1801469624042511|\n+-----------------------------+------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"period"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#period"}},[s._v("#")]),s._v(" Period")]),s._v(" "),n("h4",{attrs:{id:"函数简介-13"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-13"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算单列数值型数据的周期。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" PERIOD")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 INT32，序列仅包含一个时间戳为 0、值为周期的数据点。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-13"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-13"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d3.s1|\n+-----------------------------+---------------+\n|1970-01-01T08:00:00.001+08:00|            1.0|\n|1970-01-01T08:00:00.002+08:00|            2.0|\n|1970-01-01T08:00:00.003+08:00|            3.0|\n|1970-01-01T08:00:00.004+08:00|            1.0|\n|1970-01-01T08:00:00.005+08:00|            2.0|\n|1970-01-01T08:00:00.006+08:00|            3.0|\n|1970-01-01T08:00:00.007+08:00|            1.0|\n|1970-01-01T08:00:00.008+08:00|            2.0|\n|1970-01-01T08:00:00.009+08:00|            3.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" period"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d3\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-----------------------+\n|                         Time|period(root.test.d3.s1)|\n+-----------------------------+-----------------------+\n|1970-01-01T08:00:00.000+08:00|                      3|\n+-----------------------------+-----------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"qlb"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#qlb"}},[s._v("#")]),s._v(" QLB")]),s._v(" "),n("h4",{attrs:{id:"函数简介-14"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-14"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数对输入序列计算$Q_{LB} $统计量，并计算对应的p值。p值越小表明序列越有可能为非平稳序列。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" QLB")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("lag")]),s._v("：计算时用到的最大延迟阶数，取值应为 1 至 n-2 之间的整数，n 为序列采样总数。默认取 n-2。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE。该序列是$Q_{LB} $统计量对应的 p 值，时间标签代表偏移阶数。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" $Q_{LB} $统计量由自相关系数求得，如需得到统计量而非 p 值，可以使用 ACF 函数。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-14"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-14"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"使用默认参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用默认参数"}},[s._v("#")]),s._v(" 使用默认参数")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|1970-01-01T00:00:00.100+08:00|           1.22|\n|1970-01-01T00:00:00.200+08:00|          -2.78|\n|1970-01-01T00:00:00.300+08:00|           1.53|\n|1970-01-01T00:00:00.400+08:00|           0.70|\n|1970-01-01T00:00:00.500+08:00|           0.75|\n|1970-01-01T00:00:00.600+08:00|          -0.72|\n|1970-01-01T00:00:00.700+08:00|          -0.22|\n|1970-01-01T00:00:00.800+08:00|           0.28|\n|1970-01-01T00:00:00.900+08:00|           0.57|\n|1970-01-01T00:00:01.000+08:00|          -0.22|\n|1970-01-01T00:00:01.100+08:00|          -0.72|\n|1970-01-01T00:00:01.200+08:00|           1.34|\n|1970-01-01T00:00:01.300+08:00|          -0.25|\n|1970-01-01T00:00:01.400+08:00|           0.17|\n|1970-01-01T00:00:01.500+08:00|           2.51|\n|1970-01-01T00:00:01.600+08:00|           1.42|\n|1970-01-01T00:00:01.700+08:00|          -1.34|\n|1970-01-01T00:00:01.800+08:00|          -0.01|\n|1970-01-01T00:00:01.900+08:00|          -0.49|\n|1970-01-01T00:00:02.000+08:00|           1.63|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" QLB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+--------------------+\n|                         Time|QLB(root.test.d1.s1)|\n+-----------------------------+--------------------+\n|1970-01-01T00:00:00.001+08:00|  0.2168702295315677|\n|1970-01-01T00:00:00.002+08:00|  0.3068948509261751|\n|1970-01-01T00:00:00.003+08:00|  0.4217859150918444|\n|1970-01-01T00:00:00.004+08:00|  0.5114539874276656|\n|1970-01-01T00:00:00.005+08:00|  0.6560619525616759|\n|1970-01-01T00:00:00.006+08:00|  0.7722398654053280|\n|1970-01-01T00:00:00.007+08:00|  0.8532491661465290|\n|1970-01-01T00:00:00.008+08:00|  0.9028575017542528|\n|1970-01-01T00:00:00.009+08:00|  0.9434989988192729|\n|1970-01-01T00:00:00.010+08:00|  0.8950280161464689|\n|1970-01-01T00:00:00.011+08:00|  0.7701048398839656|\n|1970-01-01T00:00:00.012+08:00|  0.7845536060001281|\n|1970-01-01T00:00:00.013+08:00|  0.5943030981705825|\n|1970-01-01T00:00:00.014+08:00|  0.4618413512531093|\n|1970-01-01T00:00:00.015+08:00|  0.2645948244673964|\n|1970-01-01T00:00:00.016+08:00|  0.3167530476666645|\n|1970-01-01T00:00:00.017+08:00|  0.2330010780351453|\n|1970-01-01T00:00:00.018+08:00|  0.0666611237622325|\n+-----------------------------+--------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h3",{attrs:{id:"resample"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#resample"}},[s._v("#")]),s._v(" Resample")]),s._v(" "),n("h4",{attrs:{id:"函数简介-15"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-15"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数对输入序列按照指定的频率进行重采样，包括上采样和下采样。目前，本函数支持的上采样方法包括"),n("code",[s._v("NaN")]),s._v("填充法 (NaN)、前值填充法 (FFill)、后值填充法 (BFill) 以及线性插值法 (Linear)；本函数支持的下采样方法为分组聚合，聚合方法包括最大值 (Max)、最小值 (Min)、首值 (First)、末值 (Last)、平均值 (Mean)和中位数 (Median)。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" RESAMPLE")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("every")]),s._v("：重采样频率，是一个有单位的正数。目前支持五种单位，分别是 'ms'（毫秒）、's'（秒）、'm'（分钟）、'h'（小时）和'd'（天）。该参数不允许缺省。")]),s._v(" "),n("li",[n("code",[s._v("interp")]),s._v("：上采样的插值方法，取值为 'NaN'、'FFill'、'BFill' 或 'Linear'。在缺省情况下，使用"),n("code",[s._v("NaN")]),s._v("填充法。")]),s._v(" "),n("li",[n("code",[s._v("aggr")]),s._v("：下采样的聚合方法，取值为 'Max'、'Min'、'First'、'Last'、'Mean' 或 'Median'。在缺省情况下，使用平均数聚合。")]),s._v(" "),n("li",[n("code",[s._v("start")]),s._v("：重采样的起始时间（包含），是一个格式为 'yyyy-MM-dd HH:mm:ss' 的时间字符串。在缺省情况下，使用第一个有效数据点的时间戳。")]),s._v(" "),n("li",[n("code",[s._v("end")]),s._v("：重采样的结束时间（不包含），是一个格式为 'yyyy-MM-dd HH:mm:ss' 的时间字符串。在缺省情况下，使用最后一个有效数据点的时间戳。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE。该序列按照重采样频率严格等间隔分布。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 数据中的"),n("code",[s._v("NaN")]),s._v("将会被忽略。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-15"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-15"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"上采样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#上采样"}},[s._v("#")]),s._v(" 上采样")]),s._v(" "),n("p",[s._v("当重采样频率高于数据原始频率时，将会进行上采样。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2021-03-06T16:00:00.000+08:00|           3.09|\n|2021-03-06T16:15:00.000+08:00|           3.53|\n|2021-03-06T16:30:00.000+08:00|            3.5|\n|2021-03-06T16:45:00.000+08:00|           3.51|\n|2021-03-06T17:00:00.000+08:00|           3.41|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" resample"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'every'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'5m'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'interp'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'linear'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+----------------------------------------------------------+\n|                         Time|resample(root.test.d1.s1, "every"="5m", "interp"="linear")|\n+-----------------------------+----------------------------------------------------------+\n|2021-03-06T16:00:00.000+08:00|                                        3.0899999141693115|\n|2021-03-06T16:05:00.000+08:00|                                        3.2366665999094644|\n|2021-03-06T16:10:00.000+08:00|                                        3.3833332856496177|\n|2021-03-06T16:15:00.000+08:00|                                        3.5299999713897705|\n|2021-03-06T16:20:00.000+08:00|                                        3.5199999809265137|\n|2021-03-06T16:25:00.000+08:00|                                         3.509999990463257|\n|2021-03-06T16:30:00.000+08:00|                                                       3.5|\n|2021-03-06T16:35:00.000+08:00|                                         3.503333330154419|\n|2021-03-06T16:40:00.000+08:00|                                         3.506666660308838|\n|2021-03-06T16:45:00.000+08:00|                                         3.509999990463257|\n|2021-03-06T16:50:00.000+08:00|                                        3.4766666889190674|\n|2021-03-06T16:55:00.000+08:00|                                         3.443333387374878|\n|2021-03-06T17:00:00.000+08:00|                                        3.4100000858306885|\n+-----------------------------+----------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h5",{attrs:{id:"下采样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下采样"}},[s._v("#")]),s._v(" 下采样")]),s._v(" "),n("p",[s._v("当重采样频率低于数据原始频率时，将会进行下采样。")]),s._v(" "),n("p",[s._v("输入序列同上，用于查询的 SQL 语句如下：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" resample"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'every'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'30m'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'aggr'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'first'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+--------------------------------------------------------+\n|                         Time|resample(root.test.d1.s1, "every"="30m", "aggr"="first")|\n+-----------------------------+--------------------------------------------------------+\n|2021-03-06T16:00:00.000+08:00|                                      3.0899999141693115|\n|2021-03-06T16:30:00.000+08:00|                                                     3.5|\n|2021-03-06T17:00:00.000+08:00|                                      3.4100000858306885|\n+-----------------------------+--------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h5",{attrs:{id:"指定重采样时间段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定重采样时间段"}},[s._v("#")]),s._v(" 指定重采样时间段")]),s._v(" "),n("p",[s._v("可以使用"),n("code",[s._v("start")]),s._v("和"),n("code",[s._v("end")]),s._v("两个参数指定重采样的时间段，超出实际时间范围的部分会被插值填补。")]),s._v(" "),n("p",[s._v("输入序列同上，用于查询的 SQL 语句如下：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" resample"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'every'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'30m'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'start'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2021-03-06 15:00:00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+-----------------------------------------------------------------------+\n|                         Time|resample(root.test.d1.s1, "every"="30m", "start"="2021-03-06 15:00:00")|\n+-----------------------------+-----------------------------------------------------------------------+\n|2021-03-06T15:00:00.000+08:00|                                                                    NaN|\n|2021-03-06T15:30:00.000+08:00|                                                                    NaN|\n|2021-03-06T16:00:00.000+08:00|                                                      3.309999942779541|\n|2021-03-06T16:30:00.000+08:00|                                                     3.5049999952316284|\n|2021-03-06T17:00:00.000+08:00|                                                     3.4100000858306885|\n+-----------------------------+-----------------------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h3",{attrs:{id:"sample"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sample"}},[s._v("#")]),s._v(" Sample")]),s._v(" "),n("h4",{attrs:{id:"函数简介-16"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-16"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数对输入序列进行采样，即从输入序列中选取指定数量的数据点并输出。目前，本函数支持两种采样方法："),n("strong",[s._v("蓄水池采样法 (reservoir sampling)")]),s._v(" 对数据进行随机采样，所有数据点被采样的概率相同；"),n("strong",[s._v("等距采样法 (isometric sampling)")]),s._v(" 按照相等的索引间隔对数据进行采样。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" SAMPLE")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型可以是任意的。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("method")]),s._v("：采样方法，取值为 'reservoir' 或' isometric'。在缺省情况下，采用蓄水池采样法。")]),s._v(" "),n("li",[n("code",[s._v("k")]),s._v("：采样数，它是一个正整数，在缺省情况下为 1。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型与输入序列相同。该序列的长度为采样数，序列中的每一个数据点都来自于输入序列。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 如果采样数大于序列长度，那么输入序列中所有的数据点都会被输出。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-16"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-16"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"蓄水池采样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#蓄水池采样"}},[s._v("#")]),s._v(" 蓄水池采样")]),s._v(" "),n("p",[s._v("当"),n("code",[s._v("method")]),s._v("参数为 'reservoir' 或缺省时，采用蓄水池采样法对输入序列进行采样。由于该采样方法具有随机性，下面展示的输出序列只是一种可能的结果。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:01.000+08:00|            1.0|\n|2020-01-01T00:00:02.000+08:00|            2.0|\n|2020-01-01T00:00:03.000+08:00|            3.0|\n|2020-01-01T00:00:04.000+08:00|            4.0|\n|2020-01-01T00:00:05.000+08:00|            5.0|\n|2020-01-01T00:00:06.000+08:00|            6.0|\n|2020-01-01T00:00:07.000+08:00|            7.0|\n|2020-01-01T00:00:08.000+08:00|            8.0|\n|2020-01-01T00:00:09.000+08:00|            9.0|\n|2020-01-01T00:00:10.000+08:00|           10.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" sample"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'method'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'reservoir'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'k'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'5'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+------------------------------------------------------+\n|                         Time|sample(root.test.d1.s1, "method"="reservoir", "k"="5")|\n+-----------------------------+------------------------------------------------------+\n|2020-01-01T00:00:02.000+08:00|                                                   2.0|\n|2020-01-01T00:00:03.000+08:00|                                                   3.0|\n|2020-01-01T00:00:05.000+08:00|                                                   5.0|\n|2020-01-01T00:00:08.000+08:00|                                                   8.0|\n|2020-01-01T00:00:10.000+08:00|                                                  10.0|\n+-----------------------------+------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h5",{attrs:{id:"等距采样"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#等距采样"}},[s._v("#")]),s._v(" 等距采样")]),s._v(" "),n("p",[s._v("当"),n("code",[s._v("method")]),s._v("参数为 'isometric' 时，采用等距采样法对输入序列进行采样。")]),s._v(" "),n("p",[s._v("输入序列同上，用于查询的 SQL 语句如下：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" sample"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'method'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'isometric'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'k'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'5'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+------------------------------------------------------+\n|                         Time|sample(root.test.d1.s1, "method"="isometric", "k"="5")|\n+-----------------------------+------------------------------------------------------+\n|2020-01-01T00:00:01.000+08:00|                                                   1.0|\n|2020-01-01T00:00:03.000+08:00|                                                   3.0|\n|2020-01-01T00:00:05.000+08:00|                                                   5.0|\n|2020-01-01T00:00:07.000+08:00|                                                   7.0|\n|2020-01-01T00:00:09.000+08:00|                                                   9.0|\n+-----------------------------+------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h3",{attrs:{id:"segment"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#segment"}},[s._v("#")]),s._v(" Segment")]),s._v(" "),n("h4",{attrs:{id:"函数简介-17"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-17"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数按照数据的线性变化趋势将数据划分为多个子序列，返回分段直线拟合后的子序列首值或所有拟合值。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" SEGMENT")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("output")]),s._v('："all" 输出所有拟合值；"first" 输出子序列起点拟合值。默认为 "first"。')])]),s._v(" "),n("li",[n("p",[n("code",[s._v("error")]),s._v("：判定存在线性趋势的误差允许阈值。误差的定义为子序列进行线性拟合的误差的绝对值的均值。默认为 0.1.")])])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 函数默认所有数据等时间间隔分布。函数读取所有数据，若原始数据过多，请先进行降采样处理。拟合采用自底向上方法，子序列的尾值可能会被认作子序列首值输出。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-17"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-17"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------+\n|                         Time|root.test.s1|\n+-----------------------------+------------+\n|1970-01-01T08:00:00.000+08:00|         5.0|\n|1970-01-01T08:00:00.100+08:00|         0.0|\n|1970-01-01T08:00:00.200+08:00|         1.0|\n|1970-01-01T08:00:00.300+08:00|         2.0|\n|1970-01-01T08:00:00.400+08:00|         3.0|\n|1970-01-01T08:00:00.500+08:00|         4.0|\n|1970-01-01T08:00:00.600+08:00|         5.0|\n|1970-01-01T08:00:00.700+08:00|         6.0|\n|1970-01-01T08:00:00.800+08:00|         7.0|\n|1970-01-01T08:00:00.900+08:00|         8.0|\n|1970-01-01T08:00:01.000+08:00|         9.0|\n|1970-01-01T08:00:01.100+08:00|         9.1|\n|1970-01-01T08:00:01.200+08:00|         9.2|\n|1970-01-01T08:00:01.300+08:00|         9.3|\n|1970-01-01T08:00:01.400+08:00|         9.4|\n|1970-01-01T08:00:01.500+08:00|         9.5|\n|1970-01-01T08:00:01.600+08:00|         9.6|\n|1970-01-01T08:00:01.700+08:00|         9.7|\n|1970-01-01T08:00:01.800+08:00|         9.8|\n|1970-01-01T08:00:01.900+08:00|         9.9|\n|1970-01-01T08:00:02.000+08:00|        10.0|\n|1970-01-01T08:00:02.100+08:00|         8.0|\n|1970-01-01T08:00:02.200+08:00|         6.0|\n|1970-01-01T08:00:02.300+08:00|         4.0|\n|1970-01-01T08:00:02.400+08:00|         2.0|\n|1970-01-01T08:00:02.500+08:00|         0.0|\n|1970-01-01T08:00:02.600+08:00|        -2.0|\n|1970-01-01T08:00:02.700+08:00|        -4.0|\n|1970-01-01T08:00:02.800+08:00|        -6.0|\n|1970-01-01T08:00:02.900+08:00|        -8.0|\n|1970-01-01T08:00:03.000+08:00|       -10.0|\n|1970-01-01T08:00:03.100+08:00|        10.0|\n|1970-01-01T08:00:03.200+08:00|        10.0|\n|1970-01-01T08:00:03.300+08:00|        10.0|\n|1970-01-01T08:00:03.400+08:00|        10.0|\n|1970-01-01T08:00:03.500+08:00|        10.0|\n|1970-01-01T08:00:03.600+08:00|        10.0|\n|1970-01-01T08:00:03.700+08:00|        10.0|\n|1970-01-01T08:00:03.800+08:00|        10.0|\n|1970-01-01T08:00:03.900+08:00|        10.0|\n+-----------------------------+------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" segment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"error"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+------------------------------------+\n|                         Time|segment(root.test.s1, "error"="0.1")|\n+-----------------------------+------------------------------------+\n|1970-01-01T08:00:00.000+08:00|                                 5.0|\n|1970-01-01T08:00:00.200+08:00|                                 1.0|\n|1970-01-01T08:00:01.000+08:00|                                 9.0|\n|1970-01-01T08:00:02.000+08:00|                                10.0|\n|1970-01-01T08:00:03.000+08:00|                               -10.0|\n|1970-01-01T08:00:03.200+08:00|                                10.0|\n+-----------------------------+------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"skew"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#skew"}},[s._v("#")]),s._v(" Skew")]),s._v(" "),n("h4",{attrs:{id:"函数简介-18"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-18"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算单列数值型数据的总体偏度")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" SKEW")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE，序列仅包含一个时间戳为 0、值为总体偏度的数据点。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 数据中的空值、缺失值和"),n("code",[s._v("NaN")]),s._v("将会被忽略。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-18"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-18"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:00.000+08:00|            1.0|\n|2020-01-01T00:00:01.000+08:00|            2.0|\n|2020-01-01T00:00:02.000+08:00|            3.0|\n|2020-01-01T00:00:03.000+08:00|            4.0|\n|2020-01-01T00:00:04.000+08:00|            5.0|\n|2020-01-01T00:00:05.000+08:00|            6.0|\n|2020-01-01T00:00:06.000+08:00|            7.0|\n|2020-01-01T00:00:07.000+08:00|            8.0|\n|2020-01-01T00:00:08.000+08:00|            9.0|\n|2020-01-01T00:00:09.000+08:00|           10.0|\n|2020-01-01T00:00:10.000+08:00|           10.0|\n|2020-01-01T00:00:11.000+08:00|           10.0|\n|2020-01-01T00:00:12.000+08:00|           10.0|\n|2020-01-01T00:00:13.000+08:00|           10.0|\n|2020-01-01T00:00:14.000+08:00|           10.0|\n|2020-01-01T00:00:15.000+08:00|           10.0|\n|2020-01-01T00:00:16.000+08:00|           10.0|\n|2020-01-01T00:00:17.000+08:00|           10.0|\n|2020-01-01T00:00:18.000+08:00|           10.0|\n|2020-01-01T00:00:19.000+08:00|           10.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" skew"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-----------------------+\n|                         Time|  skew(root.test.d1.s1)|\n+-----------------------------+-----------------------+\n|1970-01-01T08:00:00.000+08:00|    -0.9998427402292644|\n+-----------------------------+-----------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"spline"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spline"}},[s._v("#")]),s._v(" Spline")]),s._v(" "),n("h4",{attrs:{id:"函数简介-19"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-19"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数提供对原始序列进行三次样条曲线拟合后的插值重采样。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" SPLINE")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("points")]),s._v("：重采样个数。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列")]),s._v("：输出单个序列，类型为 DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("提示")]),s._v("：输出序列保留输入序列的首尾值，等时间间隔采样。仅当输入点个数不少于 4 个时才计算插值。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-19"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-19"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"指定插值个数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定插值个数"}},[s._v("#")]),s._v(" 指定插值个数")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------+\n|                         Time|root.test.s1|\n+-----------------------------+------------+\n|1970-01-01T08:00:00.000+08:00|         0.0|\n|1970-01-01T08:00:00.300+08:00|         1.2|\n|1970-01-01T08:00:00.500+08:00|         1.7|\n|1970-01-01T08:00:00.700+08:00|         2.0|\n|1970-01-01T08:00:00.900+08:00|         2.1|\n|1970-01-01T08:00:01.100+08:00|         2.0|\n|1970-01-01T08:00:01.200+08:00|         1.8|\n|1970-01-01T08:00:01.300+08:00|         1.2|\n|1970-01-01T08:00:01.400+08:00|         1.0|\n|1970-01-01T08:00:01.500+08:00|         1.6|\n+-----------------------------+------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" spline"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"points"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"151"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+------------------------------------+\n|                         Time|spline(root.test.s1, "points"="151")|\n+-----------------------------+------------------------------------+\n|1970-01-01T08:00:00.000+08:00|                                 0.0|\n|1970-01-01T08:00:00.010+08:00|                 0.04870000251134237|\n|1970-01-01T08:00:00.020+08:00|                 0.09680000495910646|\n|1970-01-01T08:00:00.030+08:00|                 0.14430000734329226|\n|1970-01-01T08:00:00.040+08:00|                 0.19120000966389972|\n|1970-01-01T08:00:00.050+08:00|                 0.23750001192092896|\n|1970-01-01T08:00:00.060+08:00|                  0.2832000141143799|\n|1970-01-01T08:00:00.070+08:00|                 0.32830001624425253|\n|1970-01-01T08:00:00.080+08:00|                  0.3728000183105469|\n|1970-01-01T08:00:00.090+08:00|                   0.416700020313263|\n|1970-01-01T08:00:00.100+08:00|                  0.4600000222524008|\n|1970-01-01T08:00:00.110+08:00|                  0.5027000241279602|\n|1970-01-01T08:00:00.120+08:00|                  0.5448000259399414|\n|1970-01-01T08:00:00.130+08:00|                  0.5863000276883443|\n|1970-01-01T08:00:00.140+08:00|                   0.627200029373169|\n|1970-01-01T08:00:00.150+08:00|                  0.6675000309944153|\n|1970-01-01T08:00:00.160+08:00|                  0.7072000325520833|\n|1970-01-01T08:00:00.170+08:00|                  0.7463000340461731|\n|1970-01-01T08:00:00.180+08:00|                  0.7848000354766846|\n|1970-01-01T08:00:00.190+08:00|                  0.8227000368436178|\n|1970-01-01T08:00:00.200+08:00|                  0.8600000381469728|\n|1970-01-01T08:00:00.210+08:00|                  0.8967000393867494|\n|1970-01-01T08:00:00.220+08:00|                  0.9328000405629477|\n|1970-01-01T08:00:00.230+08:00|                  0.9683000416755676|\n|1970-01-01T08:00:00.240+08:00|                  1.0032000427246095|\n|1970-01-01T08:00:00.250+08:00|                   1.037500043710073|\n|1970-01-01T08:00:00.260+08:00|                   1.071200044631958|\n|1970-01-01T08:00:00.270+08:00|                  1.1043000454902647|\n|1970-01-01T08:00:00.280+08:00|                  1.1368000462849934|\n|1970-01-01T08:00:00.290+08:00|                  1.1687000470161437|\n|1970-01-01T08:00:00.300+08:00|                  1.2000000476837158|\n|1970-01-01T08:00:00.310+08:00|                  1.2307000483103594|\n|1970-01-01T08:00:00.320+08:00|                  1.2608000489139557|\n|1970-01-01T08:00:00.330+08:00|                  1.2903000494873524|\n|1970-01-01T08:00:00.340+08:00|                  1.3192000500233967|\n|1970-01-01T08:00:00.350+08:00|                  1.3475000505149364|\n|1970-01-01T08:00:00.360+08:00|                  1.3752000509548186|\n|1970-01-01T08:00:00.370+08:00|                   1.402300051335891|\n|1970-01-01T08:00:00.380+08:00|                  1.4288000516510009|\n|1970-01-01T08:00:00.390+08:00|                  1.4547000518929958|\n|1970-01-01T08:00:00.400+08:00|                   1.480000052054723|\n|1970-01-01T08:00:00.410+08:00|                  1.5047000521290301|\n|1970-01-01T08:00:00.420+08:00|                  1.5288000521087646|\n|1970-01-01T08:00:00.430+08:00|                  1.5523000519867738|\n|1970-01-01T08:00:00.440+08:00|                   1.575200051755905|\n|1970-01-01T08:00:00.450+08:00|                   1.597500051409006|\n|1970-01-01T08:00:00.460+08:00|                   1.619200050938924|\n|1970-01-01T08:00:00.470+08:00|                  1.6403000503385066|\n|1970-01-01T08:00:00.480+08:00|                   1.660800049600601|\n|1970-01-01T08:00:00.490+08:00|                   1.680700048718055|\n|1970-01-01T08:00:00.500+08:00|                  1.7000000476837158|\n|1970-01-01T08:00:00.510+08:00|                  1.7188475466453037|\n|1970-01-01T08:00:00.520+08:00|                  1.7373800457262996|\n|1970-01-01T08:00:00.530+08:00|                  1.7555825448831923|\n|1970-01-01T08:00:00.540+08:00|                  1.7734400440724702|\n|1970-01-01T08:00:00.550+08:00|                   1.790937543250622|\n|1970-01-01T08:00:00.560+08:00|                  1.8080600423741364|\n|1970-01-01T08:00:00.570+08:00|                  1.8247925413995016|\n|1970-01-01T08:00:00.580+08:00|                  1.8411200402832066|\n|1970-01-01T08:00:00.590+08:00|                  1.8570275389817397|\n|1970-01-01T08:00:00.600+08:00|                  1.8725000374515897|\n|1970-01-01T08:00:00.610+08:00|                  1.8875225356492449|\n|1970-01-01T08:00:00.620+08:00|                   1.902080033531194|\n|1970-01-01T08:00:00.630+08:00|                  1.9161575310539258|\n|1970-01-01T08:00:00.640+08:00|                  1.9297400281739288|\n|1970-01-01T08:00:00.650+08:00|                  1.9428125248476913|\n|1970-01-01T08:00:00.660+08:00|                  1.9553600210317021|\n|1970-01-01T08:00:00.670+08:00|                    1.96736751668245|\n|1970-01-01T08:00:00.680+08:00|                  1.9788200117564232|\n|1970-01-01T08:00:00.690+08:00|                  1.9897025062101101|\n|1970-01-01T08:00:00.700+08:00|                                 2.0|\n|1970-01-01T08:00:00.710+08:00|                  2.0097024933913334|\n|1970-01-01T08:00:00.720+08:00|                  2.0188199867081615|\n|1970-01-01T08:00:00.730+08:00|                   2.027367479995188|\n|1970-01-01T08:00:00.740+08:00|                  2.0353599732971155|\n|1970-01-01T08:00:00.750+08:00|                  2.0428124666586482|\n|1970-01-01T08:00:00.760+08:00|                   2.049739960124489|\n|1970-01-01T08:00:00.770+08:00|                   2.056157453739342|\n|1970-01-01T08:00:00.780+08:00|                    2.06207994754791|\n|1970-01-01T08:00:00.790+08:00|                   2.067522441594897|\n|1970-01-01T08:00:00.800+08:00|                   2.072499935925006|\n|1970-01-01T08:00:00.810+08:00|                    2.07702743058294|\n|1970-01-01T08:00:00.820+08:00|                   2.081119925613404|\n|1970-01-01T08:00:00.830+08:00|                     2.0847924210611|\n|1970-01-01T08:00:00.840+08:00|                  2.0880599169707317|\n|1970-01-01T08:00:00.850+08:00|                  2.0909374133870027|\n|1970-01-01T08:00:00.860+08:00|                  2.0934399103546166|\n|1970-01-01T08:00:00.870+08:00|                  2.0955824079182768|\n|1970-01-01T08:00:00.880+08:00|                  2.0973799061226863|\n|1970-01-01T08:00:00.890+08:00|                   2.098847405012549|\n|1970-01-01T08:00:00.900+08:00|                  2.0999999046325684|\n|1970-01-01T08:00:00.910+08:00|                  2.1005574051201332|\n|1970-01-01T08:00:00.920+08:00|                  2.1002599065303778|\n|1970-01-01T08:00:00.930+08:00|                  2.0991524087846245|\n|1970-01-01T08:00:00.940+08:00|                  2.0972799118041947|\n|1970-01-01T08:00:00.950+08:00|                  2.0946874155104105|\n|1970-01-01T08:00:00.960+08:00|                  2.0914199198245944|\n|1970-01-01T08:00:00.970+08:00|                  2.0875224246680673|\n|1970-01-01T08:00:00.980+08:00|                   2.083039929962151|\n|1970-01-01T08:00:00.990+08:00|                  2.0780174356281687|\n|1970-01-01T08:00:01.000+08:00|                  2.0724999415874406|\n|1970-01-01T08:00:01.010+08:00|                    2.06653244776129|\n|1970-01-01T08:00:01.020+08:00|                   2.060159954071038|\n|1970-01-01T08:00:01.030+08:00|                   2.053427460438006|\n|1970-01-01T08:00:01.040+08:00|                   2.046379966783517|\n|1970-01-01T08:00:01.050+08:00|                  2.0390624730288924|\n|1970-01-01T08:00:01.060+08:00|                   2.031519979095454|\n|1970-01-01T08:00:01.070+08:00|                  2.0237974849045237|\n|1970-01-01T08:00:01.080+08:00|                   2.015939990377423|\n|1970-01-01T08:00:01.090+08:00|                  2.0079924954354746|\n|1970-01-01T08:00:01.100+08:00|                                 2.0|\n|1970-01-01T08:00:01.110+08:00|                  1.9907018211101906|\n|1970-01-01T08:00:01.120+08:00|                  1.9788509124245144|\n|1970-01-01T08:00:01.130+08:00|                  1.9645127287932083|\n|1970-01-01T08:00:01.140+08:00|                  1.9477527250665083|\n|1970-01-01T08:00:01.150+08:00|                  1.9286363560946513|\n|1970-01-01T08:00:01.160+08:00|                  1.9072290767278735|\n|1970-01-01T08:00:01.170+08:00|                  1.8835963418164114|\n|1970-01-01T08:00:01.180+08:00|                  1.8578036062105014|\n|1970-01-01T08:00:01.190+08:00|                  1.8299163247603802|\n|1970-01-01T08:00:01.200+08:00|                  1.7999999523162842|\n|1970-01-01T08:00:01.210+08:00|                  1.7623635841923329|\n|1970-01-01T08:00:01.220+08:00|                  1.7129696477516976|\n|1970-01-01T08:00:01.230+08:00|                  1.6543635959181928|\n|1970-01-01T08:00:01.240+08:00|                  1.5890908816156328|\n|1970-01-01T08:00:01.250+08:00|                  1.5196969577678319|\n|1970-01-01T08:00:01.260+08:00|                  1.4487272772986044|\n|1970-01-01T08:00:01.270+08:00|                  1.3787272931317647|\n|1970-01-01T08:00:01.280+08:00|                  1.3122424581911272|\n|1970-01-01T08:00:01.290+08:00|                   1.251818225400506|\n|1970-01-01T08:00:01.300+08:00|                  1.2000000476837158|\n|1970-01-01T08:00:01.310+08:00|                  1.1548000470995912|\n|1970-01-01T08:00:01.320+08:00|                  1.1130667107899999|\n|1970-01-01T08:00:01.330+08:00|                  1.0756000393033045|\n|1970-01-01T08:00:01.340+08:00|                   1.043200033187868|\n|1970-01-01T08:00:01.350+08:00|                   1.016666692992053|\n|1970-01-01T08:00:01.360+08:00|                  0.9968000192642223|\n|1970-01-01T08:00:01.370+08:00|                  0.9844000125527389|\n|1970-01-01T08:00:01.380+08:00|                  0.9802666734059655|\n|1970-01-01T08:00:01.390+08:00|                  0.9852000023722649|\n|1970-01-01T08:00:01.400+08:00|                                 1.0|\n|1970-01-01T08:00:01.410+08:00|                   1.023999999165535|\n|1970-01-01T08:00:01.420+08:00|                  1.0559999990463256|\n|1970-01-01T08:00:01.430+08:00|                  1.0959999996423722|\n|1970-01-01T08:00:01.440+08:00|                  1.1440000009536744|\n|1970-01-01T08:00:01.450+08:00|                  1.2000000029802322|\n|1970-01-01T08:00:01.460+08:00|                   1.264000005722046|\n|1970-01-01T08:00:01.470+08:00|                  1.3360000091791153|\n|1970-01-01T08:00:01.480+08:00|                  1.4160000133514405|\n|1970-01-01T08:00:01.490+08:00|                  1.5040000182390214|\n|1970-01-01T08:00:01.500+08:00|                   1.600000023841858|\n+-----------------------------+------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br"),n("span",{staticClass:"line-number"},[s._v("142")]),n("br"),n("span",{staticClass:"line-number"},[s._v("143")]),n("br"),n("span",{staticClass:"line-number"},[s._v("144")]),n("br"),n("span",{staticClass:"line-number"},[s._v("145")]),n("br"),n("span",{staticClass:"line-number"},[s._v("146")]),n("br"),n("span",{staticClass:"line-number"},[s._v("147")]),n("br"),n("span",{staticClass:"line-number"},[s._v("148")]),n("br"),n("span",{staticClass:"line-number"},[s._v("149")]),n("br"),n("span",{staticClass:"line-number"},[s._v("150")]),n("br"),n("span",{staticClass:"line-number"},[s._v("151")]),n("br"),n("span",{staticClass:"line-number"},[s._v("152")]),n("br"),n("span",{staticClass:"line-number"},[s._v("153")]),n("br"),n("span",{staticClass:"line-number"},[s._v("154")]),n("br"),n("span",{staticClass:"line-number"},[s._v("155")]),n("br")])]),n("h3",{attrs:{id:"spread"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spread"}},[s._v("#")]),s._v(" Spread")]),s._v(" "),n("h4",{attrs:{id:"函数简介-20"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-20"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算时间序列的极差，即最大值减去最小值的结果。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" SPREAD")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型与输入相同，序列仅包含一个时间戳为 0 、值为极差的数据点。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 数据中的空值、缺失值和"),n("code",[s._v("NaN")]),s._v("将会被忽略。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-20"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-20"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|\n|2020-01-01T00:00:04.000+08:00|          102.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|\n|2020-01-01T00:00:16.000+08:00|          114.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|\n|2020-01-01T00:00:22.000+08:00|          120.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" spread"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-----------------------+\n|                         Time|spread(root.test.d1.s1)|\n+-----------------------------+-----------------------+\n|1970-01-01T08:00:00.000+08:00|                   26.0|\n+-----------------------------+-----------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"stddev"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#stddev"}},[s._v("#")]),s._v(" Stddev")]),s._v(" "),n("h4",{attrs:{id:"函数简介-21"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-21"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算单列数值型数据的总体标准差。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" STDDEV")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE。序列仅包含一个时间戳为 0、值为总体标准差的数据点。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 数据中的空值、缺失值和"),n("code",[s._v("NaN")]),s._v("将会被忽略。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-21"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-21"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:00.000+08:00|            1.0|\n|2020-01-01T00:00:01.000+08:00|            2.0|\n|2020-01-01T00:00:02.000+08:00|            3.0|\n|2020-01-01T00:00:03.000+08:00|            4.0|\n|2020-01-01T00:00:04.000+08:00|            5.0|\n|2020-01-01T00:00:05.000+08:00|            6.0|\n|2020-01-01T00:00:06.000+08:00|            7.0|\n|2020-01-01T00:00:07.000+08:00|            8.0|\n|2020-01-01T00:00:08.000+08:00|            9.0|\n|2020-01-01T00:00:09.000+08:00|           10.0|\n|2020-01-01T00:00:10.000+08:00|           11.0|\n|2020-01-01T00:00:11.000+08:00|           12.0|\n|2020-01-01T00:00:12.000+08:00|           13.0|\n|2020-01-01T00:00:13.000+08:00|           14.0|\n|2020-01-01T00:00:14.000+08:00|           15.0|\n|2020-01-01T00:00:15.000+08:00|           16.0|\n|2020-01-01T00:00:16.000+08:00|           17.0|\n|2020-01-01T00:00:17.000+08:00|           18.0|\n|2020-01-01T00:00:18.000+08:00|           19.0|\n|2020-01-01T00:00:19.000+08:00|           20.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" stddev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-----------------------+\n|                         Time|stddev(root.test.d1.s1)|\n+-----------------------------+-----------------------+\n|1970-01-01T08:00:00.000+08:00|     5.7662812973353965|\n+-----------------------------+-----------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"zscore"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#zscore"}},[s._v("#")]),s._v(" ZScore")]),s._v(" "),n("h4",{attrs:{id:"函数简介-22"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-22"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数将输入序列使用z-score方法进行归一化。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" ZSCORE")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("compute")]),s._v('：若设置为 "batch"，则将数据全部读入后转换；若设置为 "stream"，则需用户提供均值及方差进行流式计算转换。默认为 "batch"。')]),s._v(" "),n("li",[n("code",[s._v("avg")]),s._v("：使用流式计算时的均值。")]),s._v(" "),n("li",[n("code",[s._v("sd")]),s._v("：使用流式计算时的标准差。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列")]),s._v("：输出单个序列，类型为 DOUBLE。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-22"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-22"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"全数据计算-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全数据计算-2"}},[s._v("#")]),s._v(" 全数据计算")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------+\n|                         Time|root.test.s1|\n+-----------------------------+------------+\n|1970-01-01T08:00:00.100+08:00|         0.0|\n|1970-01-01T08:00:00.200+08:00|         0.0|\n|1970-01-01T08:00:00.300+08:00|         1.0|\n|1970-01-01T08:00:00.400+08:00|        -1.0|\n|1970-01-01T08:00:00.500+08:00|         0.0|\n|1970-01-01T08:00:00.600+08:00|         0.0|\n|1970-01-01T08:00:00.700+08:00|        -2.0|\n|1970-01-01T08:00:00.800+08:00|         2.0|\n|1970-01-01T08:00:00.900+08:00|         0.0|\n|1970-01-01T08:00:01.000+08:00|         0.0|\n|1970-01-01T08:00:01.100+08:00|         1.0|\n|1970-01-01T08:00:01.200+08:00|        -1.0|\n|1970-01-01T08:00:01.300+08:00|        -1.0|\n|1970-01-01T08:00:01.400+08:00|         1.0|\n|1970-01-01T08:00:01.500+08:00|         0.0|\n|1970-01-01T08:00:01.600+08:00|         0.0|\n|1970-01-01T08:00:01.700+08:00|        10.0|\n|1970-01-01T08:00:01.800+08:00|         2.0|\n|1970-01-01T08:00:01.900+08:00|        -2.0|\n|1970-01-01T08:00:02.000+08:00|         0.0|\n+-----------------------------+------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" zscore"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+--------------------+\n|                         Time|zscore(root.test.s1)|\n+-----------------------------+--------------------+\n|1970-01-01T08:00:00.100+08:00|-0.20672455764868078|\n|1970-01-01T08:00:00.200+08:00|-0.20672455764868078|\n|1970-01-01T08:00:00.300+08:00| 0.20672455764868078|\n|1970-01-01T08:00:00.400+08:00| -0.6201736729460423|\n|1970-01-01T08:00:00.500+08:00|-0.20672455764868078|\n|1970-01-01T08:00:00.600+08:00|-0.20672455764868078|\n|1970-01-01T08:00:00.700+08:00|  -1.033622788243404|\n|1970-01-01T08:00:00.800+08:00|  0.6201736729460423|\n|1970-01-01T08:00:00.900+08:00|-0.20672455764868078|\n|1970-01-01T08:00:01.000+08:00|-0.20672455764868078|\n|1970-01-01T08:00:01.100+08:00| 0.20672455764868078|\n|1970-01-01T08:00:01.200+08:00| -0.6201736729460423|\n|1970-01-01T08:00:01.300+08:00| -0.6201736729460423|\n|1970-01-01T08:00:01.400+08:00| 0.20672455764868078|\n|1970-01-01T08:00:01.500+08:00|-0.20672455764868078|\n|1970-01-01T08:00:01.600+08:00|-0.20672455764868078|\n|1970-01-01T08:00:01.700+08:00|  3.9277665953249348|\n|1970-01-01T08:00:01.800+08:00|  0.6201736729460423|\n|1970-01-01T08:00:01.900+08:00|  -1.033622788243404|\n|1970-01-01T08:00:02.000+08:00|-0.20672455764868078|\n+-----------------------------+--------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h2",{attrs:{id:"数据质量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据质量"}},[s._v("#")]),s._v(" 数据质量")]),s._v(" "),n("h3",{attrs:{id:"completeness"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#completeness"}},[s._v("#")]),s._v(" Completeness")]),s._v(" "),n("h4",{attrs:{id:"函数简介-23"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-23"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算时间序列的完整性。将输入序列划分为若干个连续且不重叠的窗口，分别计算每一个窗口的完整性，并输出窗口第一个数据点的时间戳和窗口的完整性。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" COMPLETENESS")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("window")]),s._v("：窗口大小，它是一个大于0的整数或者一个有单位的正数。前者代表每一个窗口包含的数据点数目，最后一个窗口的数据点数目可能会不足；后者代表窗口的时间跨度，目前支持五种单位，分别是'ms'（毫秒）、's'（秒）、'm'（分钟）、'h'（小时）和'd'（天）。缺省情况下，全部输入数据都属于同一个窗口。")]),s._v(" "),n("li",[n("code",[s._v("downtime")]),s._v("：完整性计算是否考虑停机异常。它的取值为 'true' 或 'false'，默认值为 'true'. 在考虑停机异常时，长时间的数据缺失将被视作停机，不对完整性产生影响。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为DOUBLE，其中每一个数据点的值的范围都是 [0,1].")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 只有当窗口内的数据点数目超过10时，才会进行完整性计算。否则，该窗口将被忽略，不做任何输出。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-23"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-23"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"参数缺省-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参数缺省-2"}},[s._v("#")]),s._v(" 参数缺省")]),s._v(" "),n("p",[s._v("在参数缺省的情况下，本函数将会把全部输入数据都作为同一个窗口计算完整性。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|\n|2020-01-01T00:00:04.000+08:00|          102.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|\n|2020-01-01T00:00:16.000+08:00|          114.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|\n|2020-01-01T00:00:22.000+08:00|          120.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" completeness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-----------------------------+\n|                         Time|completeness(root.test.d1.s1)|\n+-----------------------------+-----------------------------+\n|2020-01-01T00:00:02.000+08:00|                        0.875|\n+-----------------------------+-----------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h5",{attrs:{id:"指定窗口大小"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定窗口大小"}},[s._v("#")]),s._v(" 指定窗口大小")]),s._v(" "),n("p",[s._v("在指定窗口大小的情况下，本函数会把输入数据划分为若干个窗口计算完整性。")]),s._v(" "),n("p",[s._v("输入序列:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|\n|2020-01-01T00:00:04.000+08:00|          102.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|\n|2020-01-01T00:00:16.000+08:00|          114.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|\n|2020-01-01T00:00:22.000+08:00|          120.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|\n|2020-01-01T00:00:32.000+08:00|          130.0|\n|2020-01-01T00:00:34.000+08:00|          132.0|\n|2020-01-01T00:00:36.000+08:00|          134.0|\n|2020-01-01T00:00:38.000+08:00|          136.0|\n|2020-01-01T00:00:40.000+08:00|          138.0|\n|2020-01-01T00:00:42.000+08:00|          140.0|\n|2020-01-01T00:00:44.000+08:00|          142.0|\n|2020-01-01T00:00:46.000+08:00|          144.0|\n|2020-01-01T00:00:48.000+08:00|          146.0|\n|2020-01-01T00:00:50.000+08:00|          148.0|\n|2020-01-01T00:00:52.000+08:00|          150.0|\n|2020-01-01T00:00:54.000+08:00|          152.0|\n|2020-01-01T00:00:56.000+08:00|          154.0|\n|2020-01-01T00:00:58.000+08:00|          156.0|\n|2020-01-01T00:01:00.000+08:00|          158.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" completeness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"window"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"15"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+--------------------------------------------+\n|                         Time|completeness(root.test.d1.s1, "window"="15")|\n+-----------------------------+--------------------------------------------+\n|2020-01-01T00:00:02.000+08:00|                                       0.875|\n|2020-01-01T00:00:32.000+08:00|                                         1.0|\n+-----------------------------+--------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"consistency"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#consistency"}},[s._v("#")]),s._v(" Consistency")]),s._v(" "),n("h4",{attrs:{id:"函数简介-24"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-24"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算时间序列的一致性。将输入序列划分为若干个连续且不重叠的窗口，分别计算每一个窗口的一致性，并输出窗口第一个数据点的时间戳和窗口的时效性。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" CONSISTENCY")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("window")]),s._v("：窗口大小，它是一个大于0的整数或者一个有单位的正数。前者代表每一个窗口包含的数据点数目，最后一个窗口的数据点数目可能会不足；后者代表窗口的时间跨度，目前支持五种单位，分别是 'ms'（毫秒）、's'（秒）、'm'（分钟）、'h'（小时）和'd'（天）。缺省情况下，全部输入数据都属于同一个窗口。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为DOUBLE，其中每一个数据点的值的范围都是 [0,1].")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 只有当窗口内的数据点数目超过10时，才会进行一致性计算。否则，该窗口将被忽略，不做任何输出。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-24"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-24"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"参数缺省-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参数缺省-3"}},[s._v("#")]),s._v(" 参数缺省")]),s._v(" "),n("p",[s._v("在参数缺省的情况下，本函数将会把全部输入数据都作为同一个窗口计算一致性。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|\n|2020-01-01T00:00:04.000+08:00|          102.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|\n|2020-01-01T00:00:16.000+08:00|          114.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|\n|2020-01-01T00:00:22.000+08:00|          120.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" consistency"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+----------------------------+\n|                         Time|consistency(root.test.d1.s1)|\n+-----------------------------+----------------------------+\n|2020-01-01T00:00:02.000+08:00|          0.9333333333333333|\n+-----------------------------+----------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h5",{attrs:{id:"指定窗口大小-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定窗口大小-2"}},[s._v("#")]),s._v(" 指定窗口大小")]),s._v(" "),n("p",[s._v("在指定窗口大小的情况下，本函数会把输入数据划分为若干个窗口计算一致性。")]),s._v(" "),n("p",[s._v("输入序列:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|\n|2020-01-01T00:00:04.000+08:00|          102.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|\n|2020-01-01T00:00:16.000+08:00|          114.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|\n|2020-01-01T00:00:22.000+08:00|          120.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|\n|2020-01-01T00:00:32.000+08:00|          130.0|\n|2020-01-01T00:00:34.000+08:00|          132.0|\n|2020-01-01T00:00:36.000+08:00|          134.0|\n|2020-01-01T00:00:38.000+08:00|          136.0|\n|2020-01-01T00:00:40.000+08:00|          138.0|\n|2020-01-01T00:00:42.000+08:00|          140.0|\n|2020-01-01T00:00:44.000+08:00|          142.0|\n|2020-01-01T00:00:46.000+08:00|          144.0|\n|2020-01-01T00:00:48.000+08:00|          146.0|\n|2020-01-01T00:00:50.000+08:00|          148.0|\n|2020-01-01T00:00:52.000+08:00|          150.0|\n|2020-01-01T00:00:54.000+08:00|          152.0|\n|2020-01-01T00:00:56.000+08:00|          154.0|\n|2020-01-01T00:00:58.000+08:00|          156.0|\n|2020-01-01T00:01:00.000+08:00|          158.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" consistency"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"window"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"15"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+-------------------------------------------+\n|                         Time|consistency(root.test.d1.s1, "window"="15")|\n+-----------------------------+-------------------------------------------+\n|2020-01-01T00:00:02.000+08:00|                         0.9333333333333333|\n|2020-01-01T00:00:32.000+08:00|                                        1.0|\n+-----------------------------+-------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"timeliness"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#timeliness"}},[s._v("#")]),s._v(" Timeliness")]),s._v(" "),n("h4",{attrs:{id:"函数简介-25"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-25"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算时间序列的时效性。将输入序列划分为若干个连续且不重叠的窗口，分别计算每一个窗口的时效性，并输出窗口第一个数据点的时间戳和窗口的时效性。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" TIMELINESS")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("window")]),s._v("：窗口大小，它是一个大于0的整数或者一个有单位的正数。前者代表每一个窗口包含的数据点数目，最后一个窗口的数据点数目可能会不足；后者代表窗口的时间跨度，目前支持五种单位，分别是 'ms'（毫秒）、's'（秒）、'm'（分钟）、'h'（小时）和'd'（天）。缺省情况下，全部输入数据都属于同一个窗口。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为DOUBLE，其中每一个数据点的值的范围都是 [0,1].")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 只有当窗口内的数据点数目超过10时，才会进行时效性计算。否则，该窗口将被忽略，不做任何输出。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-25"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-25"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"参数缺省-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参数缺省-4"}},[s._v("#")]),s._v(" 参数缺省")]),s._v(" "),n("p",[s._v("在参数缺省的情况下，本函数将会把全部输入数据都作为同一个窗口计算时效性。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|\n|2020-01-01T00:00:04.000+08:00|          102.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|\n|2020-01-01T00:00:16.000+08:00|          114.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|\n|2020-01-01T00:00:22.000+08:00|          120.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" timeliness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------------------+\n|                         Time|timeliness(root.test.d1.s1)|\n+-----------------------------+---------------------------+\n|2020-01-01T00:00:02.000+08:00|         0.9333333333333333|\n+-----------------------------+---------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h5",{attrs:{id:"指定窗口大小-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定窗口大小-3"}},[s._v("#")]),s._v(" 指定窗口大小")]),s._v(" "),n("p",[s._v("在指定窗口大小的情况下，本函数会把输入数据划分为若干个窗口计算时效性。")]),s._v(" "),n("p",[s._v("输入序列:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|\n|2020-01-01T00:00:04.000+08:00|          102.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|\n|2020-01-01T00:00:16.000+08:00|          114.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|\n|2020-01-01T00:00:22.000+08:00|          120.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|\n|2020-01-01T00:00:32.000+08:00|          130.0|\n|2020-01-01T00:00:34.000+08:00|          132.0|\n|2020-01-01T00:00:36.000+08:00|          134.0|\n|2020-01-01T00:00:38.000+08:00|          136.0|\n|2020-01-01T00:00:40.000+08:00|          138.0|\n|2020-01-01T00:00:42.000+08:00|          140.0|\n|2020-01-01T00:00:44.000+08:00|          142.0|\n|2020-01-01T00:00:46.000+08:00|          144.0|\n|2020-01-01T00:00:48.000+08:00|          146.0|\n|2020-01-01T00:00:50.000+08:00|          148.0|\n|2020-01-01T00:00:52.000+08:00|          150.0|\n|2020-01-01T00:00:54.000+08:00|          152.0|\n|2020-01-01T00:00:56.000+08:00|          154.0|\n|2020-01-01T00:00:58.000+08:00|          156.0|\n|2020-01-01T00:01:00.000+08:00|          158.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" timeliness"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"window"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"15"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+------------------------------------------+\n|                         Time|timeliness(root.test.d1.s1, "window"="15")|\n+-----------------------------+------------------------------------------+\n|2020-01-01T00:00:02.000+08:00|                        0.9333333333333333|\n|2020-01-01T00:00:32.000+08:00|                                       1.0|\n+-----------------------------+------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"validity"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#validity"}},[s._v("#")]),s._v(" Validity")]),s._v(" "),n("h4",{attrs:{id:"函数简介-26"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-26"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算时间序列的有效性。将输入序列划分为若干个连续且不重叠的窗口，分别计算每一个窗口的有效性，并输出窗口第一个数据点的时间戳和窗口的有效性。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" VALIDITY")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("window")]),s._v("：窗口大小，它是一个大于0的整数或者一个有单位的正数。前者代表每一个窗口包含的数据点数目，最后一个窗口的数据点数目可能会不足；后者代表窗口的时间跨度，目前支持五种单位，分别是 'ms'（毫秒）、's'（秒）、'm'（分钟）、'h'（小时）和'd'（天）。缺省情况下，全部输入数据都属于同一个窗口。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为DOUBLE，其中每一个数据点的值的范围都是 [0,1].")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 只有当窗口内的数据点数目超过10时，才会进行有效性计算。否则，该窗口将被忽略，不做任何输出。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-26"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-26"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"参数缺省-5"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参数缺省-5"}},[s._v("#")]),s._v(" 参数缺省")]),s._v(" "),n("p",[s._v("在参数缺省的情况下，本函数将会把全部输入数据都作为同一个窗口计算有效性。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|\n|2020-01-01T00:00:04.000+08:00|          102.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|\n|2020-01-01T00:00:16.000+08:00|          114.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|\n|2020-01-01T00:00:22.000+08:00|          120.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" validity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-------------------------+\n|                         Time|validity(root.test.d1.s1)|\n+-----------------------------+-------------------------+\n|2020-01-01T00:00:02.000+08:00|       0.8833333333333333|\n+-----------------------------+-------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h5",{attrs:{id:"指定窗口大小-4"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定窗口大小-4"}},[s._v("#")]),s._v(" 指定窗口大小")]),s._v(" "),n("p",[s._v("在指定窗口大小的情况下，本函数会把输入数据划分为若干个窗口计算有效性。")]),s._v(" "),n("p",[s._v("输入序列:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|\n|2020-01-01T00:00:04.000+08:00|          102.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|\n|2020-01-01T00:00:16.000+08:00|          114.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|\n|2020-01-01T00:00:22.000+08:00|          120.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|\n|2020-01-01T00:00:32.000+08:00|          130.0|\n|2020-01-01T00:00:34.000+08:00|          132.0|\n|2020-01-01T00:00:36.000+08:00|          134.0|\n|2020-01-01T00:00:38.000+08:00|          136.0|\n|2020-01-01T00:00:40.000+08:00|          138.0|\n|2020-01-01T00:00:42.000+08:00|          140.0|\n|2020-01-01T00:00:44.000+08:00|          142.0|\n|2020-01-01T00:00:46.000+08:00|          144.0|\n|2020-01-01T00:00:48.000+08:00|          146.0|\n|2020-01-01T00:00:50.000+08:00|          148.0|\n|2020-01-01T00:00:52.000+08:00|          150.0|\n|2020-01-01T00:00:54.000+08:00|          152.0|\n|2020-01-01T00:00:56.000+08:00|          154.0|\n|2020-01-01T00:00:58.000+08:00|          156.0|\n|2020-01-01T00:01:00.000+08:00|          158.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" validity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"window"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"15"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+----------------------------------------+\n|                         Time|validity(root.test.d1.s1, "window"="15")|\n+-----------------------------+----------------------------------------+\n|2020-01-01T00:00:02.000+08:00|                      0.8833333333333333|\n|2020-01-01T00:00:32.000+08:00|                                     1.0|\n+-----------------------------+----------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h2",{attrs:{id:"数据修复"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据修复"}},[s._v("#")]),s._v(" 数据修复")]),s._v(" "),n("h3",{attrs:{id:"timestamprepair"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#timestamprepair"}},[s._v("#")]),s._v(" TimestampRepair")]),s._v(" "),n("h4",{attrs:{id:"函数简介-27"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-27"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于时间戳修复。根据给定的标准时间间隔，采用最小化修复代价的方法，通过对数据时间戳的微调，将原本时间戳间隔不稳定的数据修复为严格等间隔的数据。在未给定标准时间间隔的情况下，本函数将使用时间间隔的中位数 (median)、众数 (mode) 或聚类中心 (cluster) 来推算标准时间间隔。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" TIMESTAMPREPAIR")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("interval")]),s._v(": 标准时间间隔（单位是毫秒），是一个正整数。在缺省情况下，将根据指定的方法推算。")]),s._v(" "),n("li",[n("code",[s._v("method")]),s._v("：推算标准时间间隔的方法，取值为 'median', 'mode' 或 'cluster'，仅在"),n("code",[s._v("interval")]),s._v("缺省时有效。在缺省情况下，将使用中位数方法进行推算。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型与输入序列相同。该序列是修复后的输入序列。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-27"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-27"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"指定标准时间间隔"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定标准时间间隔"}},[s._v("#")]),s._v(" 指定标准时间间隔")]),s._v(" "),n("p",[s._v("在给定"),n("code",[s._v("interval")]),s._v("参数的情况下，本函数将按照指定的标准时间间隔进行修复。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d2.s1|\n+-----------------------------+---------------+\n|2021-07-01T12:00:00.000+08:00|            1.0|\n|2021-07-01T12:00:10.000+08:00|            2.0|\n|2021-07-01T12:00:19.000+08:00|            3.0|\n|2021-07-01T12:00:30.000+08:00|            4.0|\n|2021-07-01T12:00:40.000+08:00|            5.0|\n|2021-07-01T12:00:50.000+08:00|            6.0|\n|2021-07-01T12:01:01.000+08:00|            7.0|\n|2021-07-01T12:01:11.000+08:00|            8.0|\n|2021-07-01T12:01:21.000+08:00|            9.0|\n|2021-07-01T12:01:31.000+08:00|           10.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" timestamprepair"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'interval'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10000'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+----------------------------------------------------+\n|                         Time|timestamprepair(root.test.d2.s1, "interval"="10000")|\n+-----------------------------+----------------------------------------------------+\n|2021-07-01T12:00:00.000+08:00|                                                 1.0|\n|2021-07-01T12:00:10.000+08:00|                                                 2.0|\n|2021-07-01T12:00:20.000+08:00|                                                 3.0|\n|2021-07-01T12:00:30.000+08:00|                                                 4.0|\n|2021-07-01T12:00:40.000+08:00|                                                 5.0|\n|2021-07-01T12:00:50.000+08:00|                                                 6.0|\n|2021-07-01T12:01:00.000+08:00|                                                 7.0|\n|2021-07-01T12:01:10.000+08:00|                                                 8.0|\n|2021-07-01T12:01:20.000+08:00|                                                 9.0|\n|2021-07-01T12:01:30.000+08:00|                                                10.0|\n+-----------------------------+----------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h5",{attrs:{id:"自动推算标准时间间隔"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自动推算标准时间间隔"}},[s._v("#")]),s._v(" 自动推算标准时间间隔")]),s._v(" "),n("p",[s._v("如果"),n("code",[s._v("interval")]),s._v("参数没有给定，本函数将按照推算的标准时间间隔进行修复。")]),s._v(" "),n("p",[s._v("输入序列同上，用于查询的 SQL 语句如下：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" timestamprepair"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+--------------------------------+\n|                         Time|timestamprepair(root.test.d2.s1)|\n+-----------------------------+--------------------------------+\n|2021-07-01T12:00:00.000+08:00|                             1.0|\n|2021-07-01T12:00:10.000+08:00|                             2.0|\n|2021-07-01T12:00:20.000+08:00|                             3.0|\n|2021-07-01T12:00:30.000+08:00|                             4.0|\n|2021-07-01T12:00:40.000+08:00|                             5.0|\n|2021-07-01T12:00:50.000+08:00|                             6.0|\n|2021-07-01T12:01:00.000+08:00|                             7.0|\n|2021-07-01T12:01:10.000+08:00|                             8.0|\n|2021-07-01T12:01:20.000+08:00|                             9.0|\n|2021-07-01T12:01:30.000+08:00|                            10.0|\n+-----------------------------+--------------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h3",{attrs:{id:"valuefill"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#valuefill"}},[s._v("#")]),s._v(" ValueFill")]),s._v(" "),n("h4",{attrs:{id:"函数简介-28"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-28"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" ValueFill")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 单列时序数据，类型为INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("method")]),s._v(': {"mean", "previous", "linear", "likelihood", "AR", "MA", "SCREEN"}, 默认为 "linear"。其中，“mean” 指使用均值填补的方法； “previous" 指使用前值填补方法；“linear" 指使用线性插值填补方法；“likelihood” 为基于速度的正态分布的极大似然估计方法；“AR” 指自回归的填补方法；“MA” 指滑动平均的填补方法；"SCREEN" 指约束填补方法；缺省情况下使用 “linear”。')])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 填补后的单维序列。")]),s._v(" "),n("p",[n("strong",[s._v("备注：")]),s._v(" AR 模型采用 AR(1)，时序列需满足自相关条件，否则将输出单个数据点 (0, 0.0).")]),s._v(" "),n("h4",{attrs:{id:"使用示例-28"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-28"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"使用-linear-方法进行填补"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-linear-方法进行填补"}},[s._v("#")]),s._v(" 使用 linear 方法进行填补")]),s._v(" "),n("p",[s._v("当"),n("code",[s._v("method")]),s._v("缺省或取值为 'linear' 时，本函数将使用线性插值方法进行填补。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d2.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:02.000+08:00|            NaN|\n|2020-01-01T00:00:03.000+08:00|          101.0|\n|2020-01-01T00:00:04.000+08:00|          102.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|\n|2020-01-01T00:00:14.000+08:00|            NaN|\n|2020-01-01T00:00:15.000+08:00|          113.0|\n|2020-01-01T00:00:16.000+08:00|          114.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|\n|2020-01-01T00:00:20.000+08:00|            NaN|\n|2020-01-01T00:00:22.000+08:00|            NaN|\n|2020-01-01T00:00:26.000+08:00|          124.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|\n|2020-01-01T00:00:30.000+08:00|          128.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" valuefill"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-----------------------+\n|                         Time|valuefill(root.test.d2)|\n+-----------------------------+-----------------------+\n|2020-01-01T00:00:02.000+08:00|                    NaN|\n|2020-01-01T00:00:03.000+08:00|                  101.0|\n|2020-01-01T00:00:04.000+08:00|                  102.0|\n|2020-01-01T00:00:06.000+08:00|                  104.0|\n|2020-01-01T00:00:08.000+08:00|                  126.0|\n|2020-01-01T00:00:10.000+08:00|                  108.0|\n|2020-01-01T00:00:14.000+08:00|                  108.0|\n|2020-01-01T00:00:15.000+08:00|                  113.0|\n|2020-01-01T00:00:16.000+08:00|                  114.0|\n|2020-01-01T00:00:18.000+08:00|                  116.0|\n|2020-01-01T00:00:20.000+08:00|                  118.7|\n|2020-01-01T00:00:22.000+08:00|                  121.3|\n|2020-01-01T00:00:26.000+08:00|                  124.0|\n|2020-01-01T00:00:28.000+08:00|                  126.0|\n|2020-01-01T00:00:30.000+08:00|                  128.0|\n+-----------------------------+-----------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h5",{attrs:{id:"使用-previous-方法进行填补"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-previous-方法进行填补"}},[s._v("#")]),s._v(" 使用 previous 方法进行填补")]),s._v(" "),n("p",[s._v("当"),n("code",[s._v("method")]),s._v("取值为 'previous' 时，本函数将使前值填补方法进行数值填补。")]),s._v(" "),n("p",[s._v("输入序列同上，用于查询的 SQL 语句如下：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" valuefill"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"method"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"previous"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+-------------------------------------------+\n|                         Time|valuefill(root.test.d2,"method"="previous")|\n+-----------------------------+-------------------------------------------+\n|2020-01-01T00:00:02.000+08:00|                                        NaN|\n|2020-01-01T00:00:03.000+08:00|                                      101.0|\n|2020-01-01T00:00:04.000+08:00|                                      102.0|\n|2020-01-01T00:00:06.000+08:00|                                      104.0|\n|2020-01-01T00:00:08.000+08:00|                                      126.0|\n|2020-01-01T00:00:10.000+08:00|                                      108.0|\n|2020-01-01T00:00:14.000+08:00|                                      110.5|\n|2020-01-01T00:00:15.000+08:00|                                      113.0|\n|2020-01-01T00:00:16.000+08:00|                                      114.0|\n|2020-01-01T00:00:18.000+08:00|                                      116.0|\n|2020-01-01T00:00:20.000+08:00|                                      116.0|\n|2020-01-01T00:00:22.000+08:00|                                      116.0|\n|2020-01-01T00:00:26.000+08:00|                                      124.0|\n|2020-01-01T00:00:28.000+08:00|                                      126.0|\n|2020-01-01T00:00:30.000+08:00|                                      128.0|\n+-----------------------------+-------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h3",{attrs:{id:"valuerepair"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#valuerepair"}},[s._v("#")]),s._v(" ValueRepair")]),s._v(" "),n("h4",{attrs:{id:"函数简介-29"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-29"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于对时间序列的数值进行修复。目前，本函数支持两种修复方法："),n("strong",[s._v("Screen")]),s._v(" 是一种基于速度阈值的方法，在最小改动的前提下使得所有的速度符合阈值要求；"),n("strong",[s._v("LsGreedy")]),s._v(" 是一种基于速度变化似然的方法，将速度变化建模为高斯分布，并采用贪心算法极大化似然函数。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" VALUEREPAIR")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("method")]),s._v("：修复时采用的方法，取值为 'Screen' 或 'LsGreedy'. 在缺省情况下，使用 Screen 方法进行修复。")]),s._v(" "),n("li",[n("code",[s._v("minSpeed")]),s._v("：该参数仅在使用 Screen 方法时有效。当速度小于该值时会被视作数值异常点加以修复。在缺省情况下为中位数减去三倍绝对中位差。")]),s._v(" "),n("li",[n("code",[s._v("maxSpeed")]),s._v("：该参数仅在使用 Screen 方法时有效。当速度大于该值时会被视作数值异常点加以修复。在缺省情况下为中位数加上三倍绝对中位差。")]),s._v(" "),n("li",[n("code",[s._v("center")]),s._v("：该参数仅在使用 LsGreedy 方法时有效。对速度变化分布建立的高斯模型的中心。在缺省情况下为 0。")]),s._v(" "),n("li",[n("code",[s._v("sigma")]),s._v(" ：该参数仅在使用 LsGreedy 方法时有效。对速度变化分布建立的高斯模型的标准差。在缺省情况下为绝对中位差。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型与输入序列相同。该序列是修复后的输入序列。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 输入序列中的"),n("code",[s._v("NaN")]),s._v("在修复之前会先进行线性插值填补。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-29"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-29"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"使用-screen-方法进行修复"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-screen-方法进行修复"}},[s._v("#")]),s._v(" 使用 Screen 方法进行修复")]),s._v(" "),n("p",[s._v("当"),n("code",[s._v("method")]),s._v("缺省或取值为 'Screen' 时，本函数将使用 Screen 方法进行数值修复。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d2.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|\n|2020-01-01T00:00:04.000+08:00|          102.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|\n|2020-01-01T00:00:16.000+08:00|          114.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|\n|2020-01-01T00:00:22.000+08:00|          100.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" valuerepair"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+----------------------------+\n|                         Time|valuerepair(root.test.d2.s1)|\n+-----------------------------+----------------------------+\n|2020-01-01T00:00:02.000+08:00|                       100.0|\n|2020-01-01T00:00:03.000+08:00|                       101.0|\n|2020-01-01T00:00:04.000+08:00|                       102.0|\n|2020-01-01T00:00:06.000+08:00|                       104.0|\n|2020-01-01T00:00:08.000+08:00|                       106.0|\n|2020-01-01T00:00:10.000+08:00|                       108.0|\n|2020-01-01T00:00:14.000+08:00|                       112.0|\n|2020-01-01T00:00:15.000+08:00|                       113.0|\n|2020-01-01T00:00:16.000+08:00|                       114.0|\n|2020-01-01T00:00:18.000+08:00|                       116.0|\n|2020-01-01T00:00:20.000+08:00|                       118.0|\n|2020-01-01T00:00:22.000+08:00|                       120.0|\n|2020-01-01T00:00:26.000+08:00|                       124.0|\n|2020-01-01T00:00:28.000+08:00|                       126.0|\n|2020-01-01T00:00:30.000+08:00|                       128.0|\n+-----------------------------+----------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h5",{attrs:{id:"使用-lsgreedy-方法进行修复"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-lsgreedy-方法进行修复"}},[s._v("#")]),s._v(" 使用 LsGreedy 方法进行修复")]),s._v(" "),n("p",[s._v("当"),n("code",[s._v("method")]),s._v("取值为 'LsGreedy' 时，本函数将使用 LsGreedy 方法进行数值修复。")]),s._v(" "),n("p",[s._v("输入序列同上，用于查询的 SQL 语句如下：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" valuerepair"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'method'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'LsGreedy'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+-------------------------------------------------+\n|                         Time|valuerepair(root.test.d2.s1, "method"="LsGreedy")|\n+-----------------------------+-------------------------------------------------+\n|2020-01-01T00:00:02.000+08:00|                                            100.0|\n|2020-01-01T00:00:03.000+08:00|                                            101.0|\n|2020-01-01T00:00:04.000+08:00|                                            102.0|\n|2020-01-01T00:00:06.000+08:00|                                            104.0|\n|2020-01-01T00:00:08.000+08:00|                                            106.0|\n|2020-01-01T00:00:10.000+08:00|                                            108.0|\n|2020-01-01T00:00:14.000+08:00|                                            112.0|\n|2020-01-01T00:00:15.000+08:00|                                            113.0|\n|2020-01-01T00:00:16.000+08:00|                                            114.0|\n|2020-01-01T00:00:18.000+08:00|                                            116.0|\n|2020-01-01T00:00:20.000+08:00|                                            118.0|\n|2020-01-01T00:00:22.000+08:00|                                            120.0|\n|2020-01-01T00:00:26.000+08:00|                                            124.0|\n|2020-01-01T00:00:28.000+08:00|                                            126.0|\n|2020-01-01T00:00:30.000+08:00|                                            128.0|\n+-----------------------------+-------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h2",{attrs:{id:"数据匹配"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据匹配"}},[s._v("#")]),s._v(" 数据匹配")]),s._v(" "),n("h3",{attrs:{id:"cov"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cov"}},[s._v("#")]),s._v(" Cov")]),s._v(" "),n("h4",{attrs:{id:"函数简介-30"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-30"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算两列数值型数据的总体协方差。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" COV")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持两个输入序列，类型均为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE。序列仅包含一个时间戳为 0、值为总体协方差的数据点。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[s._v("如果某行数据中包含空值、缺失值或"),n("code",[s._v("NaN")]),s._v("，该行数据将会被忽略；")]),s._v(" "),n("li",[s._v("如果数据中所有的行都被忽略，函数将会输出"),n("code",[s._v("NaN")]),s._v("。")])]),s._v(" "),n("h4",{attrs:{id:"使用示例-30"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-30"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+---------------+\n|                         Time|root.test.d2.s1|root.test.d2.s2|\n+-----------------------------+---------------+---------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|          101.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|           null|\n|2020-01-01T00:00:04.000+08:00|          102.0|          101.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|          102.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|          102.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|          103.0|\n|2020-01-01T00:00:12.000+08:00|           null|          103.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|          104.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|           null|\n|2020-01-01T00:00:16.000+08:00|          114.0|          104.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|          105.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|          105.0|\n|2020-01-01T00:00:22.000+08:00|          100.0|          106.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|          108.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|          108.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|          108.0|\n+-----------------------------+---------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" cov"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-------------------------------------+\n|                         Time|cov(root.test.d2.s1, root.test.d2.s2)|\n+-----------------------------+-------------------------------------+\n|1970-01-01T08:00:00.000+08:00|                   12.291666666666666|\n+-----------------------------+-------------------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"dtw"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dtw"}},[s._v("#")]),s._v(" Dtw")]),s._v(" "),n("h4",{attrs:{id:"函数简介-31"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-31"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算两列数值型数据的 DTW 距离。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" DTW")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持两个输入序列，类型均为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE。序列仅包含一个时间戳为 0、值为两个时间序列的 DTW 距离值。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[s._v("如果某行数据中包含空值、缺失值或"),n("code",[s._v("NaN")]),s._v("，该行数据将会被忽略；")]),s._v(" "),n("li",[s._v("如果数据中所有的行都被忽略，函数将会输出 0。")])]),s._v(" "),n("h4",{attrs:{id:"使用示例-31"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-31"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+---------------+\n|                         Time|root.test.d2.s1|root.test.d2.s2|\n+-----------------------------+---------------+---------------+\n|1970-01-01T08:00:00.001+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.002+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.003+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.004+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.005+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.006+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.007+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.008+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.009+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.010+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.011+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.012+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.013+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.014+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.015+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.016+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.017+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.018+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.019+08:00|            1.0|            2.0|\n|1970-01-01T08:00:00.020+08:00|            1.0|            2.0|\n+-----------------------------+---------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" dtw"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-------------------------------------+\n|                         Time|dtw(root.test.d2.s1, root.test.d2.s2)|\n+-----------------------------+-------------------------------------+\n|1970-01-01T08:00:00.000+08:00|                                 20.0|\n+-----------------------------+-------------------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"pearson"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pearson"}},[s._v("#")]),s._v(" Pearson")]),s._v(" "),n("h4",{attrs:{id:"函数简介-32"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-32"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算两列数值型数据的皮尔森相关系数。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" PEARSON")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持两个输入序列，类型均为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE。序列仅包含一个时间戳为 0、值为皮尔森相关系数的数据点。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[s._v("如果某行数据中包含空值、缺失值或"),n("code",[s._v("NaN")]),s._v("，该行数据将会被忽略；")]),s._v(" "),n("li",[s._v("如果数据中所有的行都被忽略，函数将会输出"),n("code",[s._v("NaN")]),s._v("。")])]),s._v(" "),n("h4",{attrs:{id:"使用示例-32"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-32"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+---------------+\n|                         Time|root.test.d2.s1|root.test.d2.s2|\n+-----------------------------+---------------+---------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|          101.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|           null|\n|2020-01-01T00:00:04.000+08:00|          102.0|          101.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|          102.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|          102.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|          103.0|\n|2020-01-01T00:00:12.000+08:00|           null|          103.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|          104.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|           null|\n|2020-01-01T00:00:16.000+08:00|          114.0|          104.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|          105.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|          105.0|\n|2020-01-01T00:00:22.000+08:00|          100.0|          106.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|          108.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|          108.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|          108.0|\n+-----------------------------+---------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" pearson"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-----------------------------------------+\n|                         Time|pearson(root.test.d2.s1, root.test.d2.s2)|\n+-----------------------------+-----------------------------------------+\n|1970-01-01T08:00:00.000+08:00|                       0.5630881927754872|\n+-----------------------------+-----------------------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"ptnsym"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ptnsym"}},[s._v("#")]),s._v(" PtnSym")]),s._v(" "),n("h4",{attrs:{id:"函数简介-33"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-33"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于寻找序列中所有对称度小于阈值的对称子序列。对称度通过 DTW 计算，值越小代表序列对称性越高。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" PTNSYM")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持一个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("window")]),s._v("：对称子序列的长度，是一个正整数，默认值为 10。")]),s._v(" "),n("li",[n("code",[s._v("threshold")]),s._v("：对称度阈值，是一个非负数，只有对称度小于等于该值的对称子序列才会被输出。在缺省情况下，所有的子序列都会被输出。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE。序列中的每一个数据点对应于一个对称子序列，时间戳为子序列的起始时刻，值为对称度。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-33"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-33"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s4|\n+-----------------------------+---------------+\n|2021-01-01T12:00:00.000+08:00|            1.0|\n|2021-01-01T12:00:01.000+08:00|            2.0|\n|2021-01-01T12:00:02.000+08:00|            3.0|\n|2021-01-01T12:00:03.000+08:00|            2.0|\n|2021-01-01T12:00:04.000+08:00|            1.0|\n|2021-01-01T12:00:05.000+08:00|            1.0|\n|2021-01-01T12:00:06.000+08:00|            1.0|\n|2021-01-01T12:00:07.000+08:00|            1.0|\n|2021-01-01T12:00:08.000+08:00|            2.0|\n|2021-01-01T12:00:09.000+08:00|            3.0|\n|2021-01-01T12:00:10.000+08:00|            2.0|\n|2021-01-01T12:00:11.000+08:00|            1.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ptnsym"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'window'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'5'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'threshold'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+------------------------------------------------------+\n|                         Time|ptnsym(root.test.d1.s4, "window"="5", "threshold"="0")|\n+-----------------------------+------------------------------------------------------+\n|2021-01-01T12:00:00.000+08:00|                                                   0.0|\n|2021-01-01T12:00:07.000+08:00|                                                   0.0|\n+-----------------------------+------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"xcorr"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#xcorr"}},[s._v("#")]),s._v(" XCorr")]),s._v(" "),n("h4",{attrs:{id:"函数简介-34"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-34"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于计算两条时间序列的互相关函数值，\n对离散序列而言，互相关函数可以表示为\n$$CR(n) = \\frac{1}{N} \\sum_{m=1}^N S_1[m]S_2[m+n]$$\n常用于表征两条序列在不同对齐条件下的相似度。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" XCORR")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持两个输入序列，类型均为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 DOUBLE。序列中共包含$2N-1$个数据点，\n其中正中心的值为两条序列按照预先对齐的结果计算的互相关系数（即等于以上公式的$CR(0)$），\n前半部分的值表示将后一条输入序列向前平移时计算的互相关系数，\n直至两条序列没有重合的数据点（不包含完全分离时的结果$CR(-N)=0.0$），\n后半部分类似。\n用公式可表示为（所有序列的索引从1开始计数）：\n$$OS[i] = CR(-N+i) = \\frac{1}{N} \\sum_{m=1}^{i} S_1[m]S_2[N-i+m],\\ if\\ i <= N$$\n$$OS[i] = CR(i-N) = \\frac{1}{N} \\sum_{m=1}^{2N-i} S_1[i-N+m]S_2[m],\\ if\\ i > N$$")]),s._v(" "),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[s._v("两条序列中的"),n("code",[s._v("null")]),s._v(" 和"),n("code",[s._v("NaN")]),s._v(" 值会被忽略，在计算中表现为 0。")])]),s._v(" "),n("h4",{attrs:{id:"使用示例-34"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-34"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+---------------+\n|                         Time|root.test.d1.s1|root.test.d1.s2|\n+-----------------------------+---------------+---------------+\n|2020-01-01T00:00:01.000+08:00|           null|              6|\n|2020-01-01T00:00:02.000+08:00|              2|              7|\n|2020-01-01T00:00:03.000+08:00|              3|            NaN|\n|2020-01-01T00:00:04.000+08:00|              4|              9|\n|2020-01-01T00:00:05.000+08:00|              5|             10|\n+-----------------------------+---------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" xcorr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("05")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------------------------------+\n|                         Time|xcorr(root.test.d1.s1, root.test.d1.s2)|\n+-----------------------------+---------------------------------------+\n|1970-01-01T08:00:00.001+08:00|                                    0.0|\n|1970-01-01T08:00:00.002+08:00|                                    4.0|\n|1970-01-01T08:00:00.003+08:00|                                    9.6|\n|1970-01-01T08:00:00.004+08:00|                                   13.4|\n|1970-01-01T08:00:00.005+08:00|                                   20.0|\n|1970-01-01T08:00:00.006+08:00|                                   15.6|\n|1970-01-01T08:00:00.007+08:00|                                    9.2|\n|1970-01-01T08:00:00.008+08:00|                                   11.8|\n|1970-01-01T08:00:00.009+08:00|                                    6.0|\n+-----------------------------+---------------------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h2",{attrs:{id:"异常检测"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异常检测"}},[s._v("#")]),s._v(" 异常检测")]),s._v(" "),n("h3",{attrs:{id:"iqr"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#iqr"}},[s._v("#")]),s._v(" IQR")]),s._v(" "),n("h4",{attrs:{id:"函数简介-35"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-35"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于检验超出上下四分位数1.5倍IQR的数据分布异常。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" IQR")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("method")]),s._v('：若设置为 "batch"，则将数据全部读入后检测；若设置为 "stream"，则需用户提供上下四分位数进行流式检测。默认为 "batch"。')]),s._v(" "),n("li",[n("code",[s._v("q1")]),s._v("：使用流式计算时的下四分位数。")]),s._v(" "),n("li",[n("code",[s._v("q3")]),s._v("：使用流式计算时的上四分位数。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列")]),s._v("：输出单个序列，类型为 DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("说明")]),s._v("：$IQR=Q_3-Q_1$")]),s._v(" "),n("h4",{attrs:{id:"使用示例-35"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-35"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"全数据计算-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全数据计算-3"}},[s._v("#")]),s._v(" 全数据计算")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------+\n|                         Time|root.test.s1|\n+-----------------------------+------------+\n|1970-01-01T08:00:00.100+08:00|         0.0|\n|1970-01-01T08:00:00.200+08:00|         0.0|\n|1970-01-01T08:00:00.300+08:00|         1.0|\n|1970-01-01T08:00:00.400+08:00|        -1.0|\n|1970-01-01T08:00:00.500+08:00|         0.0|\n|1970-01-01T08:00:00.600+08:00|         0.0|\n|1970-01-01T08:00:00.700+08:00|        -2.0|\n|1970-01-01T08:00:00.800+08:00|         2.0|\n|1970-01-01T08:00:00.900+08:00|         0.0|\n|1970-01-01T08:00:01.000+08:00|         0.0|\n|1970-01-01T08:00:01.100+08:00|         1.0|\n|1970-01-01T08:00:01.200+08:00|        -1.0|\n|1970-01-01T08:00:01.300+08:00|        -1.0|\n|1970-01-01T08:00:01.400+08:00|         1.0|\n|1970-01-01T08:00:01.500+08:00|         0.0|\n|1970-01-01T08:00:01.600+08:00|         0.0|\n|1970-01-01T08:00:01.700+08:00|        10.0|\n|1970-01-01T08:00:01.800+08:00|         2.0|\n|1970-01-01T08:00:01.900+08:00|        -2.0|\n|1970-01-01T08:00:02.000+08:00|         0.0|\n+-----------------------------+------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" iqr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-----------------+\n|                         Time|iqr(root.test.s1)|\n+-----------------------------+-----------------+\n|1970-01-01T08:00:01.700+08:00|             10.0|\n+-----------------------------+-----------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"ksigma"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ksigma"}},[s._v("#")]),s._v(" KSigma")]),s._v(" "),n("h4",{attrs:{id:"函数简介-36"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-36"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数利用动态 K-Sigma 算法进行异常检测。在一个窗口内，与平均值的差距超过k倍标准差的数据将被视作异常并输出。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" KSIGMA")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("k")]),s._v("：在动态 K-Sigma 算法中，分布异常的标准差倍数阈值，默认值为 3。")]),s._v(" "),n("li",[n("code",[s._v("window")]),s._v("：动态 K-Sigma 算法的滑动窗口大小，默认值为 10000。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型与输入序列相同。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" k 应大于 0，否则将不做输出。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-36"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-36"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"指定k"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定k"}},[s._v("#")]),s._v(" 指定k")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:02.000+08:00|            0.0|\n|2020-01-01T00:00:03.000+08:00|           50.0|\n|2020-01-01T00:00:04.000+08:00|          100.0|\n|2020-01-01T00:00:06.000+08:00|          150.0|\n|2020-01-01T00:00:08.000+08:00|          200.0|\n|2020-01-01T00:00:10.000+08:00|          200.0|\n|2020-01-01T00:00:14.000+08:00|          200.0|\n|2020-01-01T00:00:15.000+08:00|          200.0|\n|2020-01-01T00:00:16.000+08:00|          200.0|\n|2020-01-01T00:00:18.000+08:00|          200.0|\n|2020-01-01T00:00:20.000+08:00|          150.0|\n|2020-01-01T00:00:22.000+08:00|          100.0|\n|2020-01-01T00:00:26.000+08:00|           50.0|\n|2020-01-01T00:00:28.000+08:00|            0.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ksigma"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+---------------------------------+\n|Time                         |ksigma(root.test.d1.s1,"k"="3.0")|\n+-----------------------------+---------------------------------+\n|2020-01-01T00:00:02.000+08:00|                              0.0|\n|2020-01-01T00:00:03.000+08:00|                             50.0|\n|2020-01-01T00:00:26.000+08:00|                             50.0|\n|2020-01-01T00:00:28.000+08:00|                              0.0|\n+-----------------------------+---------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"lof"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lof"}},[s._v("#")]),s._v(" LOF")]),s._v(" "),n("h4",{attrs:{id:"函数简介-37"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-37"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数使用局部离群点检测方法用于查找序列的密度异常。将根据提供的第k距离数及局部离群点因子(lof)阈值，判断输入数据是否为离群点，即异常，并输出各点的 LOF 值。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" LOF")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 多个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("method")]),s._v(":使用的检测方法。默认为 default，以高维数据计算。设置为 series，将一维时间序列转换为高维数据计算。")]),s._v(" "),n("li",[n("code",[s._v("k")]),s._v(":使用第k距离计算局部离群点因子.默认为 3。")]),s._v(" "),n("li",[n("code",[s._v("window")]),s._v(":每次读取数据的窗口长度。默认为 10000.")]),s._v(" "),n("li",[n("code",[s._v("windowsize")]),s._v(":使用series方法时，转化高维数据的维数，即单个窗口的大小。默认为 5。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单时间序列，类型为DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 不完整的数据行会被忽略，不参与计算，也不标记为离群点。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-37"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-37"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"默认参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#默认参数"}},[s._v("#")]),s._v(" 默认参数")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+---------------+\n|                         Time|root.test.d1.s1|root.test.d1.s2|\n+-----------------------------+---------------+---------------+\n|1970-01-01T08:00:00.100+08:00|            0.0|            0.0|\n|1970-01-01T08:00:00.200+08:00|            0.0|            1.0|\n|1970-01-01T08:00:00.300+08:00|            1.0|            1.0|\n|1970-01-01T08:00:00.400+08:00|            1.0|            0.0|\n|1970-01-01T08:00:00.500+08:00|            0.0|           -1.0|\n|1970-01-01T08:00:00.600+08:00|           -1.0|           -1.0|\n|1970-01-01T08:00:00.700+08:00|           -1.0|            0.0|\n|1970-01-01T08:00:00.800+08:00|            2.0|            2.0|\n|1970-01-01T08:00:00.900+08:00|            0.0|           null|\n+-----------------------------+---------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" lof"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-------------------------------------+\n|                         Time|lof(root.test.d1.s1, root.test.d1.s2)|\n+-----------------------------+-------------------------------------+\n|1970-01-01T08:00:00.100+08:00|                   3.8274824267668244|\n|1970-01-01T08:00:00.200+08:00|                   3.0117631741126156|\n|1970-01-01T08:00:00.300+08:00|                    2.838155437762879|\n|1970-01-01T08:00:00.400+08:00|                   3.0117631741126156|\n|1970-01-01T08:00:00.500+08:00|                     2.73518261244453|\n|1970-01-01T08:00:00.600+08:00|                    2.371440975708148|\n|1970-01-01T08:00:00.700+08:00|                     2.73518261244453|\n|1970-01-01T08:00:00.800+08:00|                   1.7561416374270742|\n+-----------------------------+-------------------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h5",{attrs:{id:"诊断一维时间序列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#诊断一维时间序列"}},[s._v("#")]),s._v(" 诊断一维时间序列")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|1970-01-01T08:00:00.100+08:00|            1.0|\n|1970-01-01T08:00:00.200+08:00|            2.0|\n|1970-01-01T08:00:00.300+08:00|            3.0|\n|1970-01-01T08:00:00.400+08:00|            4.0|\n|1970-01-01T08:00:00.500+08:00|            5.0|\n|1970-01-01T08:00:00.600+08:00|            6.0|\n|1970-01-01T08:00:00.700+08:00|            7.0|\n|1970-01-01T08:00:00.800+08:00|            8.0|\n|1970-01-01T08:00:00.900+08:00|            9.0|\n|1970-01-01T08:00:01.000+08:00|           10.0|\n|1970-01-01T08:00:01.100+08:00|           11.0|\n|1970-01-01T08:00:01.200+08:00|           12.0|\n|1970-01-01T08:00:01.300+08:00|           13.0|\n|1970-01-01T08:00:01.400+08:00|           14.0|\n|1970-01-01T08:00:01.500+08:00|           15.0|\n|1970-01-01T08:00:01.600+08:00|           16.0|\n|1970-01-01T08:00:01.700+08:00|           17.0|\n|1970-01-01T08:00:01.800+08:00|           18.0|\n|1970-01-01T08:00:01.900+08:00|           19.0|\n|1970-01-01T08:00:02.000+08:00|           20.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" lof"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"method"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"series"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+--------------------+\n|                         Time|lof(root.test.d1.s1)|\n+-----------------------------+--------------------+\n|1970-01-01T08:00:00.100+08:00|    3.77777777777778|\n|1970-01-01T08:00:00.200+08:00|    4.32727272727273|\n|1970-01-01T08:00:00.300+08:00|    4.85714285714286|\n|1970-01-01T08:00:00.400+08:00|    5.40909090909091|\n|1970-01-01T08:00:00.500+08:00|    5.94999999999999|\n|1970-01-01T08:00:00.600+08:00|    6.43243243243243|\n|1970-01-01T08:00:00.700+08:00|    6.79999999999999|\n|1970-01-01T08:00:00.800+08:00|                 7.0|\n|1970-01-01T08:00:00.900+08:00|                 7.0|\n|1970-01-01T08:00:01.000+08:00|    6.79999999999999|\n|1970-01-01T08:00:01.100+08:00|    6.43243243243243|\n|1970-01-01T08:00:01.200+08:00|    5.94999999999999|\n|1970-01-01T08:00:01.300+08:00|    5.40909090909091|\n|1970-01-01T08:00:01.400+08:00|    4.85714285714286|\n|1970-01-01T08:00:01.500+08:00|    4.32727272727273|\n|1970-01-01T08:00:01.600+08:00|    3.77777777777778|\n+-----------------------------+--------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h3",{attrs:{id:"missdetect"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#missdetect"}},[s._v("#")]),s._v(" MissDetect")]),s._v(" "),n("h4",{attrs:{id:"函数简介-38"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-38"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于检测数据中的缺失异常。在一些数据中，缺失数据会被线性插值填补，在数据中出现完美的线性片段，且这些片段往往长度较大。本函数通过在数据中发现这些完美线性片段来检测缺失异常。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" MISSDETECT")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("minlen")]),s._v("：被标记为异常的完美线性片段的最小长度，是一个大于等于 10 的整数，默认值为 10。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 BOOLEAN，即该数据点是否为缺失异常。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 数据中的"),n("code",[s._v("NaN")]),s._v("将会被忽略。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-38"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-38"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d2.s2|\n+-----------------------------+---------------+\n|2021-07-01T12:00:00.000+08:00|            0.0|\n|2021-07-01T12:00:01.000+08:00|            1.0|\n|2021-07-01T12:00:02.000+08:00|            0.0|\n|2021-07-01T12:00:03.000+08:00|            1.0|\n|2021-07-01T12:00:04.000+08:00|            0.0|\n|2021-07-01T12:00:05.000+08:00|            0.0|\n|2021-07-01T12:00:06.000+08:00|            0.0|\n|2021-07-01T12:00:07.000+08:00|            0.0|\n|2021-07-01T12:00:08.000+08:00|            0.0|\n|2021-07-01T12:00:09.000+08:00|            0.0|\n|2021-07-01T12:00:10.000+08:00|            0.0|\n|2021-07-01T12:00:11.000+08:00|            0.0|\n|2021-07-01T12:00:12.000+08:00|            0.0|\n|2021-07-01T12:00:13.000+08:00|            0.0|\n|2021-07-01T12:00:14.000+08:00|            0.0|\n|2021-07-01T12:00:15.000+08:00|            0.0|\n|2021-07-01T12:00:16.000+08:00|            1.0|\n|2021-07-01T12:00:17.000+08:00|            0.0|\n|2021-07-01T12:00:18.000+08:00|            1.0|\n|2021-07-01T12:00:19.000+08:00|            0.0|\n|2021-07-01T12:00:20.000+08:00|            1.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" missdetect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'minlen'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+------------------------------------------+\n|                         Time|missdetect(root.test.d2.s2, "minlen"="10")|\n+-----------------------------+------------------------------------------+\n|2021-07-01T12:00:00.000+08:00|                                     false|\n|2021-07-01T12:00:01.000+08:00|                                     false|\n|2021-07-01T12:00:02.000+08:00|                                     false|\n|2021-07-01T12:00:03.000+08:00|                                     false|\n|2021-07-01T12:00:04.000+08:00|                                      true|\n|2021-07-01T12:00:05.000+08:00|                                      true|\n|2021-07-01T12:00:06.000+08:00|                                      true|\n|2021-07-01T12:00:07.000+08:00|                                      true|\n|2021-07-01T12:00:08.000+08:00|                                      true|\n|2021-07-01T12:00:09.000+08:00|                                      true|\n|2021-07-01T12:00:10.000+08:00|                                      true|\n|2021-07-01T12:00:11.000+08:00|                                      true|\n|2021-07-01T12:00:12.000+08:00|                                      true|\n|2021-07-01T12:00:13.000+08:00|                                      true|\n|2021-07-01T12:00:14.000+08:00|                                      true|\n|2021-07-01T12:00:15.000+08:00|                                      true|\n|2021-07-01T12:00:16.000+08:00|                                     false|\n|2021-07-01T12:00:17.000+08:00|                                     false|\n|2021-07-01T12:00:18.000+08:00|                                     false|\n|2021-07-01T12:00:19.000+08:00|                                     false|\n|2021-07-01T12:00:20.000+08:00|                                     false|\n+-----------------------------+------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("h3",{attrs:{id:"range"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#range"}},[s._v("#")]),s._v(" Range")]),s._v(" "),n("h4",{attrs:{id:"函数简介-39"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-39"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于查找时间序列的范围异常。将根据提供的上界与下界，判断输入数据是否越界，即异常，并输出所有异常点为新的时间序列。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" RANGE")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("lower_bound")]),s._v(":范围异常检测的下界。")]),s._v(" "),n("li",[n("code",[s._v("upper_bound")]),s._v(":范围异常检测的上界。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型与输入序列相同。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 应满足"),n("code",[s._v("upper_bound")]),s._v("大于"),n("code",[s._v("lower_bound")]),s._v("，否则将不做输出。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-39"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-39"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"指定上界与下界"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指定上界与下界"}},[s._v("#")]),s._v(" 指定上界与下界")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2020-01-01T00:00:02.000+08:00|          100.0|\n|2020-01-01T00:00:03.000+08:00|          101.0|\n|2020-01-01T00:00:04.000+08:00|          102.0|\n|2020-01-01T00:00:06.000+08:00|          104.0|\n|2020-01-01T00:00:08.000+08:00|          126.0|\n|2020-01-01T00:00:10.000+08:00|          108.0|\n|2020-01-01T00:00:14.000+08:00|          112.0|\n|2020-01-01T00:00:15.000+08:00|          113.0|\n|2020-01-01T00:00:16.000+08:00|          114.0|\n|2020-01-01T00:00:18.000+08:00|          116.0|\n|2020-01-01T00:00:20.000+08:00|          118.0|\n|2020-01-01T00:00:22.000+08:00|          120.0|\n|2020-01-01T00:00:26.000+08:00|          124.0|\n|2020-01-01T00:00:28.000+08:00|          126.0|\n|2020-01-01T00:00:30.000+08:00|            NaN|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" range"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lower_bound"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"101.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"upper_bound"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"125.0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("01")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+------------------------------------------------------------------+\n|Time                         |range(root.test.d1.s1,"lower_bound"="101.0","upper_bound"="125.0")|\n+-----------------------------+------------------------------------------------------------------+\n|2020-01-01T00:00:02.000+08:00|                                                             100.0|\n|2020-01-01T00:00:28.000+08:00|                                                             126.0|\n+-----------------------------+------------------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"twosidedfilter"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#twosidedfilter"}},[s._v("#")]),s._v(" TwoSidedFilter")]),s._v(" "),n("h4",{attrs:{id:"函数简介-40"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-40"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数基于双边窗口检测法对输入序列中的异常点进行过滤。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" TWOSIDEDFILTER")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型与输入相同，是输入序列去除异常点后的结果。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("len")]),s._v("：双边窗口检测法中的窗口大小，取值范围为正整数，默认值为 5.如当"),n("code",[s._v("len")]),s._v("=3 时，算法向前、向后各取长度为3的窗口，在窗口中计算异常度。")]),s._v(" "),n("li",[n("code",[s._v("threshold")]),s._v("：异常度的阈值，取值范围为(0,1)，默认值为 0.3。阈值越高，函数对于异常度的判定标准越严格。")])]),s._v(" "),n("h4",{attrs:{id:"使用示例-40"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-40"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------+\n|                         Time|root.test.s0|\n+-----------------------------+------------+\n|1970-01-01T08:00:00.000+08:00|      2002.0|\n|1970-01-01T08:00:01.000+08:00|      1946.0|\n|1970-01-01T08:00:02.000+08:00|      1958.0|\n|1970-01-01T08:00:03.000+08:00|      2012.0|\n|1970-01-01T08:00:04.000+08:00|      2051.0|\n|1970-01-01T08:00:05.000+08:00|      1898.0|\n|1970-01-01T08:00:06.000+08:00|      2014.0|\n|1970-01-01T08:00:07.000+08:00|      2052.0|\n|1970-01-01T08:00:08.000+08:00|      1935.0|\n|1970-01-01T08:00:09.000+08:00|      1901.0|\n|1970-01-01T08:00:10.000+08:00|      1972.0|\n|1970-01-01T08:00:11.000+08:00|      1969.0|\n|1970-01-01T08:00:12.000+08:00|      1984.0|\n|1970-01-01T08:00:13.000+08:00|      2018.0|\n|1970-01-01T08:00:37.000+08:00|      1484.0|\n|1970-01-01T08:00:38.000+08:00|      1055.0|\n|1970-01-01T08:00:39.000+08:00|      1050.0|\n|1970-01-01T08:01:05.000+08:00|      1023.0|\n|1970-01-01T08:01:06.000+08:00|      1056.0|\n|1970-01-01T08:01:07.000+08:00|       978.0|\n|1970-01-01T08:01:08.000+08:00|      1050.0|\n|1970-01-01T08:01:09.000+08:00|      1123.0|\n|1970-01-01T08:01:10.000+08:00|      1150.0|\n|1970-01-01T08:01:11.000+08:00|      1034.0|\n|1970-01-01T08:01:12.000+08:00|       950.0|\n|1970-01-01T08:01:13.000+08:00|      1059.0|\n+-----------------------------+------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" TwoSidedFilter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'len'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'5'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'threshold'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0.3'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------+\n|                         Time|root.test.s0|\n+-----------------------------+------------+\n|1970-01-01T08:00:00.000+08:00|      2002.0|\n|1970-01-01T08:00:01.000+08:00|      1946.0|\n|1970-01-01T08:00:02.000+08:00|      1958.0|\n|1970-01-01T08:00:03.000+08:00|      2012.0|\n|1970-01-01T08:00:04.000+08:00|      2051.0|\n|1970-01-01T08:00:05.000+08:00|      1898.0|\n|1970-01-01T08:00:06.000+08:00|      2014.0|\n|1970-01-01T08:00:07.000+08:00|      2052.0|\n|1970-01-01T08:00:08.000+08:00|      1935.0|\n|1970-01-01T08:00:09.000+08:00|      1901.0|\n|1970-01-01T08:00:10.000+08:00|      1972.0|\n|1970-01-01T08:00:11.000+08:00|      1969.0|\n|1970-01-01T08:00:12.000+08:00|      1984.0|\n|1970-01-01T08:00:13.000+08:00|      2018.0|\n|1970-01-01T08:01:05.000+08:00|      1023.0|\n|1970-01-01T08:01:06.000+08:00|      1056.0|\n|1970-01-01T08:01:07.000+08:00|       978.0|\n|1970-01-01T08:01:08.000+08:00|      1050.0|\n|1970-01-01T08:01:09.000+08:00|      1123.0|\n|1970-01-01T08:01:10.000+08:00|      1150.0|\n|1970-01-01T08:01:11.000+08:00|      1034.0|\n|1970-01-01T08:01:12.000+08:00|       950.0|\n|1970-01-01T08:01:13.000+08:00|      1059.0|\n+-----------------------------+------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("h2",{attrs:{id:"频域处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#频域处理"}},[s._v("#")]),s._v(" 频域处理")]),s._v(" "),n("h3",{attrs:{id:"conv"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#conv"}},[s._v("#")]),s._v(" Conv")]),s._v(" "),n("h4",{attrs:{id:"函数简介-41"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-41"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数对两个输入序列进行卷积，即多项式乘法。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" CONV")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持两个输入序列，类型均为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为DOUBLE，它是两个序列卷积的结果。序列的时间戳从0开始，仅用于表示顺序。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 输入序列中的"),n("code",[s._v("NaN")]),s._v("将被忽略。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-41"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-41"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+---------------+\n|                         Time|root.test.d2.s1|root.test.d2.s2|\n+-----------------------------+---------------+---------------+\n|1970-01-01T08:00:00.000+08:00|            1.0|            7.0|\n|1970-01-01T08:00:00.001+08:00|            0.0|            2.0|\n|1970-01-01T08:00:00.002+08:00|            1.0|           null|\n+-----------------------------+---------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" conv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+--------------------------------------+\n|                         Time|conv(root.test.d2.s1, root.test.d2.s2)|\n+-----------------------------+--------------------------------------+\n|1970-01-01T08:00:00.000+08:00|                                   7.0|\n|1970-01-01T08:00:00.001+08:00|                                   2.0|\n|1970-01-01T08:00:00.002+08:00|                                   7.0|\n|1970-01-01T08:00:00.003+08:00|                                   2.0|\n+-----------------------------+--------------------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"deconv"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#deconv"}},[s._v("#")]),s._v(" Deconv")]),s._v(" "),n("h4",{attrs:{id:"函数简介-42"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-42"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数对两个输入序列进行去卷积，即多项式除法运算。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" DECONV")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持两个输入序列，类型均为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("result")]),s._v("：去卷积的结果，取值为'quotient'或'remainder'，分别对应于去卷积的商和余数。在缺省情况下，输出去卷积的商。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为DOUBLE。它是将第二个序列从第一个序列中去卷积（第一个序列除以第二个序列）的结果。序列的时间戳从0开始，仅用于表示顺序。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 输入序列中的"),n("code",[s._v("NaN")]),s._v("将被忽略。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-42"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-42"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"计算去卷积的商"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#计算去卷积的商"}},[s._v("#")]),s._v(" 计算去卷积的商")]),s._v(" "),n("p",[s._v("当"),n("code",[s._v("result")]),s._v("参数缺省或为'quotient'时，本函数计算去卷积的商。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+---------------+\n|                         Time|root.test.d2.s3|root.test.d2.s2|\n+-----------------------------+---------------+---------------+\n|1970-01-01T08:00:00.000+08:00|            8.0|            7.0|\n|1970-01-01T08:00:00.001+08:00|            2.0|            2.0|\n|1970-01-01T08:00:00.002+08:00|            7.0|           null|\n|1970-01-01T08:00:00.003+08:00|            2.0|           null|\n+-----------------------------+---------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deconv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+----------------------------------------+\n|                         Time|deconv(root.test.d2.s3, root.test.d2.s2)|\n+-----------------------------+----------------------------------------+\n|1970-01-01T08:00:00.000+08:00|                                     1.0|\n|1970-01-01T08:00:00.001+08:00|                                     0.0|\n|1970-01-01T08:00:00.002+08:00|                                     1.0|\n+-----------------------------+----------------------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h5",{attrs:{id:"计算去卷积的余数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#计算去卷积的余数"}},[s._v("#")]),s._v(" 计算去卷积的余数")]),s._v(" "),n("p",[s._v("当"),n("code",[s._v("result")]),s._v("参数为'remainder'时，本函数计算去卷积的余数。输入序列同上，用于查询的SQL语句如下：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deconv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'result'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'remainder'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+--------------------------------------------------------------+\n|                         Time|deconv(root.test.d2.s3, root.test.d2.s2, "result"="remainder")|\n+-----------------------------+--------------------------------------------------------------+\n|1970-01-01T08:00:00.000+08:00|                                                           1.0|\n|1970-01-01T08:00:00.001+08:00|                                                           0.0|\n|1970-01-01T08:00:00.002+08:00|                                                           0.0|\n|1970-01-01T08:00:00.003+08:00|                                                           0.0|\n+-----------------------------+--------------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"dwt"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dwt"}},[s._v("#")]),s._v(" DWT")]),s._v(" "),n("h4",{attrs:{id:"函数简介-43"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-43"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数对输入序列进行一维离散小波变换。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" DWT")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("method")]),s._v("：小波滤波的类型，提供'Haar', 'DB4', 'DB6', 'DB8'，其中DB指代Daubechies。若不设置该参数，则用户需提供小波滤波的系数。不区分大小写。")]),s._v(" "),n("li",[n("code",[s._v("coef")]),s._v("：小波滤波的系数。若提供该参数，请使用英文逗号','分割各项，不添加空格或其它符号。")]),s._v(" "),n("li",[n("code",[s._v("layer")]),s._v("：进行变换的次数，最终输出的向量个数等同于$layer+1$.默认取1。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为DOUBLE，长度与输入相等。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 输入序列长度必须为2的整数次幂。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-43"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-43"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"haar变换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#haar变换"}},[s._v("#")]),s._v(" Haar变换")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|1970-01-01T08:00:00.000+08:00|            0.0|\n|1970-01-01T08:00:00.100+08:00|            0.2|\n|1970-01-01T08:00:00.200+08:00|            1.5|\n|1970-01-01T08:00:00.300+08:00|            1.2|\n|1970-01-01T08:00:00.400+08:00|            0.6|\n|1970-01-01T08:00:00.500+08:00|            1.7|\n|1970-01-01T08:00:00.600+08:00|            0.8|\n|1970-01-01T08:00:00.700+08:00|            2.0|\n|1970-01-01T08:00:00.800+08:00|            2.5|\n|1970-01-01T08:00:00.900+08:00|            2.1|\n|1970-01-01T08:00:01.000+08:00|            0.0|\n|1970-01-01T08:00:01.100+08:00|            2.0|\n|1970-01-01T08:00:01.200+08:00|            1.8|\n|1970-01-01T08:00:01.300+08:00|            1.2|\n|1970-01-01T08:00:01.400+08:00|            1.0|\n|1970-01-01T08:00:01.500+08:00|            1.6|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" dwt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"method"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"haar"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+-------------------------------------+\n|                         Time|dwt(root.test.d1.s1, "method"="haar")|\n+-----------------------------+-------------------------------------+\n|1970-01-01T08:00:00.000+08:00|                  0.14142135834465192|\n|1970-01-01T08:00:00.100+08:00|                    1.909188342921157|\n|1970-01-01T08:00:00.200+08:00|                   1.6263456473052773|\n|1970-01-01T08:00:00.300+08:00|                   1.9798989957517026|\n|1970-01-01T08:00:00.400+08:00|                    3.252691126023161|\n|1970-01-01T08:00:00.500+08:00|                    1.414213562373095|\n|1970-01-01T08:00:00.600+08:00|                   2.1213203435596424|\n|1970-01-01T08:00:00.700+08:00|                   1.8384776479437628|\n|1970-01-01T08:00:00.800+08:00|                 -0.14142135834465192|\n|1970-01-01T08:00:00.900+08:00|                  0.21213200063848547|\n|1970-01-01T08:00:01.000+08:00|                  -0.7778174761639416|\n|1970-01-01T08:00:01.100+08:00|                  -0.8485281289944873|\n|1970-01-01T08:00:01.200+08:00|                   0.2828427799095765|\n|1970-01-01T08:00:01.300+08:00|                   -1.414213562373095|\n|1970-01-01T08:00:01.400+08:00|                  0.42426400127697095|\n|1970-01-01T08:00:01.500+08:00|                 -0.42426408557066786|\n+-----------------------------+-------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h3",{attrs:{id:"fft"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fft"}},[s._v("#")]),s._v(" FFT")]),s._v(" "),n("h4",{attrs:{id:"函数简介-44"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-44"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数对输入序列进行快速傅里叶变换。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" FFT")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("method")]),s._v("：傅里叶变换的类型，取值为'uniform'或'nonuniform'，缺省情况下为'uniform'。当取值为'uniform'时，时间戳将被忽略，所有数据点都将被视作等距的，并应用等距快速傅里叶算法；当取值为'nonuniform'时，将根据时间戳应用非等距快速傅里叶算法（未实现）。")]),s._v(" "),n("li",[n("code",[s._v("result")]),s._v("：傅里叶变换的结果，取值为'real'、'imag'、'abs'或'angle'，分别对应于变换结果的实部、虚部、模和幅角。在缺省情况下，输出变换的模。")]),s._v(" "),n("li",[n("code",[s._v("compress")]),s._v("：压缩参数，取值范围(0,1]，是有损压缩时保留的能量比例。在缺省情况下，不进行压缩。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为DOUBLE，长度与输入相等。序列的时间戳从0开始，仅用于表示顺序。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 输入序列中的"),n("code",[s._v("NaN")]),s._v("将被忽略。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-44"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-44"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"等距傅里叶变换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#等距傅里叶变换"}},[s._v("#")]),s._v(" 等距傅里叶变换")]),s._v(" "),n("p",[s._v("当"),n("code",[s._v("type")]),s._v("参数缺省或为'uniform'时，本函数进行等距傅里叶变换。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|1970-01-01T08:00:00.000+08:00|       2.902113|\n|1970-01-01T08:00:01.000+08:00|      1.1755705|\n|1970-01-01T08:00:02.000+08:00|     -2.1755705|\n|1970-01-01T08:00:03.000+08:00|     -1.9021131|\n|1970-01-01T08:00:04.000+08:00|            1.0|\n|1970-01-01T08:00:05.000+08:00|      1.9021131|\n|1970-01-01T08:00:06.000+08:00|      0.1755705|\n|1970-01-01T08:00:07.000+08:00|     -1.1755705|\n|1970-01-01T08:00:08.000+08:00|      -0.902113|\n|1970-01-01T08:00:09.000+08:00|            0.0|\n|1970-01-01T08:00:10.000+08:00|       0.902113|\n|1970-01-01T08:00:11.000+08:00|      1.1755705|\n|1970-01-01T08:00:12.000+08:00|     -0.1755705|\n|1970-01-01T08:00:13.000+08:00|     -1.9021131|\n|1970-01-01T08:00:14.000+08:00|           -1.0|\n|1970-01-01T08:00:15.000+08:00|      1.9021131|\n|1970-01-01T08:00:16.000+08:00|      2.1755705|\n|1970-01-01T08:00:17.000+08:00|     -1.1755705|\n|1970-01-01T08:00:18.000+08:00|      -2.902113|\n|1970-01-01T08:00:19.000+08:00|            0.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" fft"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+----------------------+\n|                         Time|  fft(root.test.d1.s1)|\n+-----------------------------+----------------------+\n|1970-01-01T08:00:00.000+08:00|                   0.0|\n|1970-01-01T08:00:00.001+08:00| 1.2727111142703152E-8|\n|1970-01-01T08:00:00.002+08:00|  2.385520799101839E-7|\n|1970-01-01T08:00:00.003+08:00|  8.723291723972645E-8|\n|1970-01-01T08:00:00.004+08:00|    19.999999960195904|\n|1970-01-01T08:00:00.005+08:00|     9.999999850988388|\n|1970-01-01T08:00:00.006+08:00| 3.2260694930700566E-7|\n|1970-01-01T08:00:00.007+08:00|  8.723291605373329E-8|\n|1970-01-01T08:00:00.008+08:00|  1.108657103979944E-7|\n|1970-01-01T08:00:00.009+08:00| 1.2727110997246171E-8|\n|1970-01-01T08:00:00.010+08:00|1.9852334701272664E-23|\n|1970-01-01T08:00:00.011+08:00| 1.2727111194499847E-8|\n|1970-01-01T08:00:00.012+08:00|  1.108657103979944E-7|\n|1970-01-01T08:00:00.013+08:00|  8.723291785769131E-8|\n|1970-01-01T08:00:00.014+08:00|  3.226069493070057E-7|\n|1970-01-01T08:00:00.015+08:00|     9.999999850988388|\n|1970-01-01T08:00:00.016+08:00|    19.999999960195904|\n|1970-01-01T08:00:00.017+08:00|  8.723291747109068E-8|\n|1970-01-01T08:00:00.018+08:00| 2.3855207991018386E-7|\n|1970-01-01T08:00:00.019+08:00| 1.2727112069910878E-8|\n+-----------------------------+----------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("注：输入序列服从$y=sin(2\\pi t/4)+2sin(2\\pi t/5)$，长度为20，因此在输出序列中$k=4$和$k=5$处有尖峰。")]),s._v(" "),n("h5",{attrs:{id:"等距傅里叶变换并压缩"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#等距傅里叶变换并压缩"}},[s._v("#")]),s._v(" 等距傅里叶变换并压缩")]),s._v(" "),n("p",[s._v("输入序列同上，用于查询的SQL语句如下：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" fft"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'result'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'real'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'compress'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0.99'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fft"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'result'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'imag'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'compress'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0.99'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+----------------------+----------------------+\n|                         Time|  fft(root.test.d1.s1,|  fft(root.test.d1.s1,|\n|                             |      "result"="real",|      "result"="imag",|\n|                             |    "compress"="0.99")|    "compress"="0.99")|\n+-----------------------------+----------------------+----------------------+\n|1970-01-01T08:00:00.000+08:00|                   0.0|                   0.0|\n|1970-01-01T08:00:00.001+08:00| -3.932894010461041E-9| 1.2104201863039066E-8|\n|1970-01-01T08:00:00.002+08:00|-1.4021739447490164E-7| 1.9299268669082926E-7|\n|1970-01-01T08:00:00.003+08:00| -7.057291240286645E-8|  5.127422242345858E-8|\n|1970-01-01T08:00:00.004+08:00|    19.021130288047125|    -6.180339875198807|\n|1970-01-01T08:00:00.005+08:00|     9.999999850988388| 3.501852745067114E-16|\n|1970-01-01T08:00:00.019+08:00| -3.932894898639461E-9|-1.2104202549376264E-8|\n+-----------------------------+----------------------+----------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("注：基于傅里叶变换结果的共轭性质，压缩结果只保留前一半；根据给定的压缩参数，从低频到高频保留数据点，直到保留的能量比例超过该值；保留最后一个数据点以表示序列长度。")]),s._v(" "),n("h3",{attrs:{id:"highpass"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#highpass"}},[s._v("#")]),s._v(" HighPass")]),s._v(" "),n("h4",{attrs:{id:"函数简介-45"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-45"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数对输入序列进行高通滤波，提取高于截止频率的分量。输入序列的时间戳将被忽略，所有数据点都将被视作等距的。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" HIGHPASS")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("wpass")]),s._v("：归一化后的截止频率，取值为(0,1)，不可缺省。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为DOUBLE，它是滤波后的序列，长度与时间戳均与输入一致。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 输入序列中的"),n("code",[s._v("NaN")]),s._v("将被忽略。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-45"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-45"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|1970-01-01T08:00:00.000+08:00|       2.902113|\n|1970-01-01T08:00:01.000+08:00|      1.1755705|\n|1970-01-01T08:00:02.000+08:00|     -2.1755705|\n|1970-01-01T08:00:03.000+08:00|     -1.9021131|\n|1970-01-01T08:00:04.000+08:00|            1.0|\n|1970-01-01T08:00:05.000+08:00|      1.9021131|\n|1970-01-01T08:00:06.000+08:00|      0.1755705|\n|1970-01-01T08:00:07.000+08:00|     -1.1755705|\n|1970-01-01T08:00:08.000+08:00|      -0.902113|\n|1970-01-01T08:00:09.000+08:00|            0.0|\n|1970-01-01T08:00:10.000+08:00|       0.902113|\n|1970-01-01T08:00:11.000+08:00|      1.1755705|\n|1970-01-01T08:00:12.000+08:00|     -0.1755705|\n|1970-01-01T08:00:13.000+08:00|     -1.9021131|\n|1970-01-01T08:00:14.000+08:00|           -1.0|\n|1970-01-01T08:00:15.000+08:00|      1.9021131|\n|1970-01-01T08:00:16.000+08:00|      2.1755705|\n|1970-01-01T08:00:17.000+08:00|     -1.1755705|\n|1970-01-01T08:00:18.000+08:00|      -2.902113|\n|1970-01-01T08:00:19.000+08:00|            0.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" highpass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wpass'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0.45'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+-----------------------------------------+\n|                         Time|highpass(root.test.d1.s1, "wpass"="0.45")|\n+-----------------------------+-----------------------------------------+\n|1970-01-01T08:00:00.000+08:00|                       0.9999999534830373|\n|1970-01-01T08:00:01.000+08:00|                    1.7462829277628608E-8|\n|1970-01-01T08:00:02.000+08:00|                      -0.9999999593178128|\n|1970-01-01T08:00:03.000+08:00|                   -4.1115269056426626E-8|\n|1970-01-01T08:00:04.000+08:00|                       0.9999999925494194|\n|1970-01-01T08:00:05.000+08:00|                     3.328126513330016E-8|\n|1970-01-01T08:00:06.000+08:00|                      -1.0000000183304454|\n|1970-01-01T08:00:07.000+08:00|                    6.260191433311374E-10|\n|1970-01-01T08:00:08.000+08:00|                       1.0000000018134796|\n|1970-01-01T08:00:09.000+08:00|                   -3.097210911744423E-17|\n|1970-01-01T08:00:10.000+08:00|                      -1.0000000018134794|\n|1970-01-01T08:00:11.000+08:00|                   -6.260191627862097E-10|\n|1970-01-01T08:00:12.000+08:00|                       1.0000000183304454|\n|1970-01-01T08:00:13.000+08:00|                    -3.328126501424346E-8|\n|1970-01-01T08:00:14.000+08:00|                      -0.9999999925494196|\n|1970-01-01T08:00:15.000+08:00|                     4.111526915498874E-8|\n|1970-01-01T08:00:16.000+08:00|                       0.9999999593178128|\n|1970-01-01T08:00:17.000+08:00|                   -1.7462829341296528E-8|\n|1970-01-01T08:00:18.000+08:00|                      -0.9999999534830369|\n|1970-01-01T08:00:19.000+08:00|                   -1.035237222742873E-16|\n+-----------------------------+-----------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("注：输入序列服从$y=sin(2\\pi t/4)+2sin(2\\pi t/5)$，长度为20，因此高通滤波之后的输出序列服从$y=sin(2\\pi t/4)$。")]),s._v(" "),n("h3",{attrs:{id:"ifft"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ifft"}},[s._v("#")]),s._v(" IFFT")]),s._v(" "),n("h4",{attrs:{id:"函数简介-46"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-46"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数将输入的两个序列作为实部和虚部视作一个复数，进行逆快速傅里叶变换，并输出结果的实部。输入数据的格式参见"),n("code",[s._v("FFT")]),s._v("函数的输出，并支持以"),n("code",[s._v("FFT")]),s._v("函数压缩后的输出作为本函数的输入。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" IFFT")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持两个输入序列，类型均为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("start")]),s._v("：输出序列的起始时刻，是一个格式为'yyyy-MM-dd HH:mm:ss'的时间字符串。在缺省情况下，为'1970-01-01 08:00:00'。")]),s._v(" "),n("li",[n("code",[s._v("interval")]),s._v("：输出序列的时间间隔，是一个有单位的正数。目前支持五种单位，分别是'ms'（毫秒）、's'（秒）、'm'（分钟）、'h'（小时）和'd'（天）。在缺省情况下，为1s。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为DOUBLE。该序列是一个等距时间序列，它的值是将两个输入序列依次作为实部和虚部进行逆快速傅里叶变换的结果。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 如果某行数据中包含空值或"),n("code",[s._v("NaN")]),s._v("，该行数据将会被忽略。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-46"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-46"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+----------------------+----------------------+\n|                         Time|       root.test.d1.re|       root.test.d1.im|\n+-----------------------------+----------------------+----------------------+\n|1970-01-01T08:00:00.000+08:00|                   0.0|                   0.0|\n|1970-01-01T08:00:00.001+08:00| -3.932894010461041E-9| 1.2104201863039066E-8|\n|1970-01-01T08:00:00.002+08:00|-1.4021739447490164E-7| 1.9299268669082926E-7|\n|1970-01-01T08:00:00.003+08:00| -7.057291240286645E-8|  5.127422242345858E-8|\n|1970-01-01T08:00:00.004+08:00|    19.021130288047125|    -6.180339875198807|\n|1970-01-01T08:00:00.005+08:00|     9.999999850988388| 3.501852745067114E-16|\n|1970-01-01T08:00:00.019+08:00| -3.932894898639461E-9|-1.2104202549376264E-8|\n+-----------------------------+----------------------+----------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ifft"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("re"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" im"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'interval'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1m'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'start'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2021-01-01 00:00:00'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+-------------------------------------------------------+\n|                         Time|ifft(root.test.d1.re, root.test.d1.im, "interval"="1m",|\n|                             |                         "start"="2021-01-01 00:00:00")|\n+-----------------------------+-------------------------------------------------------+\n|2021-01-01T00:00:00.000+08:00|                                      2.902112992431231|\n|2021-01-01T00:01:00.000+08:00|                                     1.1755704705132448|\n|2021-01-01T00:02:00.000+08:00|                                     -2.175570513757101|\n|2021-01-01T00:03:00.000+08:00|                                    -1.9021130389094498|\n|2021-01-01T00:04:00.000+08:00|                                     0.9999999925494194|\n|2021-01-01T00:05:00.000+08:00|                                      1.902113046743454|\n|2021-01-01T00:06:00.000+08:00|                                    0.17557053610884188|\n|2021-01-01T00:07:00.000+08:00|                                    -1.1755704886020932|\n|2021-01-01T00:08:00.000+08:00|                                    -0.9021130371347148|\n|2021-01-01T00:09:00.000+08:00|                                  3.552713678800501E-16|\n|2021-01-01T00:10:00.000+08:00|                                     0.9021130371347154|\n|2021-01-01T00:11:00.000+08:00|                                     1.1755704886020932|\n|2021-01-01T00:12:00.000+08:00|                                   -0.17557053610884144|\n|2021-01-01T00:13:00.000+08:00|                                     -1.902113046743454|\n|2021-01-01T00:14:00.000+08:00|                                    -0.9999999925494196|\n|2021-01-01T00:15:00.000+08:00|                                     1.9021130389094498|\n|2021-01-01T00:16:00.000+08:00|                                     2.1755705137571004|\n|2021-01-01T00:17:00.000+08:00|                                    -1.1755704705132448|\n|2021-01-01T00:18:00.000+08:00|                                     -2.902112992431231|\n|2021-01-01T00:19:00.000+08:00|                                 -3.552713678800501E-16|\n+-----------------------------+-------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("h3",{attrs:{id:"lowpass"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#lowpass"}},[s._v("#")]),s._v(" LowPass")]),s._v(" "),n("h4",{attrs:{id:"函数简介-47"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-47"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数对输入序列进行低通滤波，提取低于截止频率的分量。输入序列的时间戳将被忽略，所有数据点都将被视作等距的。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" LOWPASS")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("wpass")]),s._v("：归一化后的截止频率，取值为(0,1)，不可缺省。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为DOUBLE，它是滤波后的序列，长度与时间戳均与输入一致。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 输入序列中的"),n("code",[s._v("NaN")]),s._v("将被忽略。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-47"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-47"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|1970-01-01T08:00:00.000+08:00|       2.902113|\n|1970-01-01T08:00:01.000+08:00|      1.1755705|\n|1970-01-01T08:00:02.000+08:00|     -2.1755705|\n|1970-01-01T08:00:03.000+08:00|     -1.9021131|\n|1970-01-01T08:00:04.000+08:00|            1.0|\n|1970-01-01T08:00:05.000+08:00|      1.9021131|\n|1970-01-01T08:00:06.000+08:00|      0.1755705|\n|1970-01-01T08:00:07.000+08:00|     -1.1755705|\n|1970-01-01T08:00:08.000+08:00|      -0.902113|\n|1970-01-01T08:00:09.000+08:00|            0.0|\n|1970-01-01T08:00:10.000+08:00|       0.902113|\n|1970-01-01T08:00:11.000+08:00|      1.1755705|\n|1970-01-01T08:00:12.000+08:00|     -0.1755705|\n|1970-01-01T08:00:13.000+08:00|     -1.9021131|\n|1970-01-01T08:00:14.000+08:00|           -1.0|\n|1970-01-01T08:00:15.000+08:00|      1.9021131|\n|1970-01-01T08:00:16.000+08:00|      2.1755705|\n|1970-01-01T08:00:17.000+08:00|     -1.1755705|\n|1970-01-01T08:00:18.000+08:00|      -2.902113|\n|1970-01-01T08:00:19.000+08:00|            0.0|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" lowpass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wpass'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0.45'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+----------------------------------------+\n|                         Time|lowpass(root.test.d1.s1, "wpass"="0.45")|\n+-----------------------------+----------------------------------------+\n|1970-01-01T08:00:00.000+08:00|                      1.9021130073323922|\n|1970-01-01T08:00:01.000+08:00|                      1.1755704705132448|\n|1970-01-01T08:00:02.000+08:00|                     -1.1755705286582614|\n|1970-01-01T08:00:03.000+08:00|                     -1.9021130389094498|\n|1970-01-01T08:00:04.000+08:00|                    7.450580419288145E-9|\n|1970-01-01T08:00:05.000+08:00|                       1.902113046743454|\n|1970-01-01T08:00:06.000+08:00|                      1.1755705212076808|\n|1970-01-01T08:00:07.000+08:00|                     -1.1755704886020932|\n|1970-01-01T08:00:08.000+08:00|                     -1.9021130222335536|\n|1970-01-01T08:00:09.000+08:00|                   3.552713678800501E-16|\n|1970-01-01T08:00:10.000+08:00|                      1.9021130222335536|\n|1970-01-01T08:00:11.000+08:00|                      1.1755704886020932|\n|1970-01-01T08:00:12.000+08:00|                     -1.1755705212076801|\n|1970-01-01T08:00:13.000+08:00|                      -1.902113046743454|\n|1970-01-01T08:00:14.000+08:00|                    -7.45058112983088E-9|\n|1970-01-01T08:00:15.000+08:00|                      1.9021130389094498|\n|1970-01-01T08:00:16.000+08:00|                      1.1755705286582616|\n|1970-01-01T08:00:17.000+08:00|                     -1.1755704705132448|\n|1970-01-01T08:00:18.000+08:00|                     -1.9021130073323924|\n|1970-01-01T08:00:19.000+08:00|                  -2.664535259100376E-16|\n+-----------------------------+----------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("注：输入序列服从$y=sin(2\\pi t/4)+2sin(2\\pi t/5)$，长度为20，因此低通滤波之后的输出序列服从$y=2sin(2\\pi t/5)$。")]),s._v(" "),n("h2",{attrs:{id:"序列发现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#序列发现"}},[s._v("#")]),s._v(" 序列发现")]),s._v(" "),n("h3",{attrs:{id:"consecutivesequences"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#consecutivesequences"}},[s._v("#")]),s._v(" ConsecutiveSequences")]),s._v(" "),n("h4",{attrs:{id:"函数简介-48"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-48"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于在多维严格等间隔数据中发现局部最长连续子序列。")]),s._v(" "),n("p",[s._v("严格等间隔数据是指数据的时间间隔是严格相等的，允许存在数据缺失（包括行缺失和值缺失），但不允许存在数据冗余和时间戳偏移。")]),s._v(" "),n("p",[s._v("连续子序列是指严格按照标准时间间隔等距排布，不存在任何数据缺失的子序列。如果某个连续子序列不是任何连续子序列的真子序列，那么它是局部最长的。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" CONSECUTIVESEQUENCES")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 支持多个输入序列，类型可以是任意的，但要满足严格等间隔的要求。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("gap")]),s._v("：标准时间间隔，是一个有单位的正数。目前支持五种单位，分别是'ms'（毫秒）、's'（秒）、'm'（分钟）、'h'（小时）和'd'（天）。在缺省情况下，函数会利用众数估计标准时间间隔。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 INT32。输出序列中的每一个数据点对应一个局部最长连续子序列，时间戳为子序列的起始时刻，值为子序列包含的数据点个数。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 对于不符合要求的输入，本函数不对输出做任何保证。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-48"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-48"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("h5",{attrs:{id:"手动指定标准时间间隔"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#手动指定标准时间间隔"}},[s._v("#")]),s._v(" 手动指定标准时间间隔")]),s._v(" "),n("p",[s._v("本函数可以通过"),n("code",[s._v("gap")]),s._v("参数手动指定标准时间间隔。需要注意的是，错误的参数设置会导致输出产生严重错误。")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+---------------+\n|                         Time|root.test.d1.s1|root.test.d1.s2|\n+-----------------------------+---------------+---------------+\n|2020-01-01T00:00:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:05:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:10:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:20:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:25:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:30:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:35:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:40:00.000+08:00|            1.0|           null|\n|2020-01-01T00:45:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:50:00.000+08:00|            1.0|            1.0|\n+-----------------------------+---------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" consecutivesequences"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gap'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'5m'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+------------------------------------------------------------------+\n|                         Time|consecutivesequences(root.test.d1.s1, root.test.d1.s2, "gap"="5m")|\n+-----------------------------+------------------------------------------------------------------+\n|2020-01-01T00:00:00.000+08:00|                                                                 3|\n|2020-01-01T00:20:00.000+08:00|                                                                 4|\n|2020-01-01T00:45:00.000+08:00|                                                                 2|\n+-----------------------------+------------------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h5",{attrs:{id:"自动估计标准时间间隔"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自动估计标准时间间隔"}},[s._v("#")]),s._v(" 自动估计标准时间间隔")]),s._v(" "),n("p",[s._v("当"),n("code",[s._v("gap")]),s._v("参数缺省时，本函数可以利用众数估计标准时间间隔，得到同样的结果。因此，这种用法更受推荐。")]),s._v(" "),n("p",[s._v("输入序列同上，用于查询的SQL语句如下：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" consecutivesequences"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+------------------------------------------------------+\n|                         Time|consecutivesequences(root.test.d1.s1, root.test.d1.s2)|\n+-----------------------------+------------------------------------------------------+\n|2020-01-01T00:00:00.000+08:00|                                                     3|\n|2020-01-01T00:20:00.000+08:00|                                                     4|\n|2020-01-01T00:45:00.000+08:00|                                                     2|\n+-----------------------------+------------------------------------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"consecutivewindows"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#consecutivewindows"}},[s._v("#")]),s._v(" ConsecutiveWindows")]),s._v(" "),n("h4",{attrs:{id:"函数简介-49"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-49"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于在多维严格等间隔数据中发现指定长度的连续窗口。")]),s._v(" "),n("p",[s._v("严格等间隔数据是指数据的时间间隔是严格相等的，允许存在数据缺失（包括行缺失和值缺失），但不允许存在数据冗余和时间戳偏移。")]),s._v(" "),n("p",[s._v("连续窗口是指严格按照标准时间间隔等距排布，不存在任何数据缺失的子序列。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" CONSECUTIVEWINDOWS")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 支持多个输入序列，类型可以是任意的，但要满足严格等间隔的要求。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("gap")]),s._v("：标准时间间隔，是一个有单位的正数。目前支持五种单位，分别是 'ms'（毫秒）、's'（秒）、'm'（分钟）、'h'（小时）和'd'（天）。在缺省情况下，函数会利用众数估计标准时间间隔。")]),s._v(" "),n("li",[n("code",[s._v("length")]),s._v("：序列长度，是一个有单位的正数。目前支持五种单位，分别是 'ms'（毫秒）、's'（秒）、'm'（分钟）、'h'（小时）和'd'（天）。该参数不允许缺省。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 INT32。输出序列中的每一个数据点对应一个指定长度连续子序列，时间戳为子序列的起始时刻，值为子序列包含的数据点个数。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 对于不符合要求的输入，本函数不对输出做任何保证。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-49"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-49"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+---------------+\n|                         Time|root.test.d1.s1|root.test.d1.s2|\n+-----------------------------+---------------+---------------+\n|2020-01-01T00:00:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:05:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:10:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:20:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:25:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:30:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:35:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:40:00.000+08:00|            1.0|           null|\n|2020-01-01T00:45:00.000+08:00|            1.0|            1.0|\n|2020-01-01T00:50:00.000+08:00|            1.0|            1.0|\n+-----------------------------+---------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("用于查询的SQL语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" consecutivewindows"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'length'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10m'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+--------------------------------------------------------------------+\n|                         Time|consecutivewindows(root.test.d1.s1, root.test.d1.s2, "length"="10m")|\n+-----------------------------+--------------------------------------------------------------------+\n|2020-01-01T00:00:00.000+08:00|                                                                   3|\n|2020-01-01T00:20:00.000+08:00|                                                                   3|\n|2020-01-01T00:25:00.000+08:00|                                                                   3|\n+-----------------------------+--------------------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"字符串处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符串处理"}},[s._v("#")]),s._v(" 字符串处理")]),s._v(" "),n("h3",{attrs:{id:"regexmatch"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#regexmatch"}},[s._v("#")]),s._v(" RegexMatch")]),s._v(" "),n("h4",{attrs:{id:"函数简介-50"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-50"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于正则表达式匹配文本中的具体内容并返回。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" REGEXMATCH")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 TEXT。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("regex")]),s._v(": 匹配的正则表达式，支持所有 Java 正则表达式语法，比如"),n("code",[s._v("\\d+\\.\\d+\\.\\d+\\.\\d+")]),s._v("将会匹配任意 IPv4 地址.")]),s._v(" "),n("li",[n("code",[s._v("group")]),s._v(": 输出的匹配组序号，根据 java.util.regex 规定，第 0 组为整个正则表达式，此后的组按照左括号出现的顺序依次编号。\n如"),n("code",[s._v("A(B(CD))")]),s._v("中共有三个组，第 0 组"),n("code",[s._v("A(B(CD))")]),s._v("，第 1 组"),n("code",[s._v("B(CD)")]),s._v("和第 2 组"),n("code",[s._v("CD")]),s._v("。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 TEXT。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 空值或无法匹配给定的正则表达式的数据点没有输出结果。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-50"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-50"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-------------------------------+\n|                         Time|                root.test.d1.s1|\n+-----------------------------+-------------------------------+\n|2021-01-01T00:00:01.000+08:00|        [192.168.0.1] [SUCCESS]|\n|2021-01-01T00:00:02.000+08:00|       [192.168.0.24] [SUCCESS]|\n|2021-01-01T00:00:03.000+08:00|           [192.168.0.2] [FAIL]|\n|2021-01-01T00:00:04.000+08:00|        [192.168.0.5] [SUCCESS]|\n|2021-01-01T00:00:05.000+08:00|      [192.168.0.124] [SUCCESS]|\n+-----------------------------+-------------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" regexmatch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regex"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\d+\\.\\d+\\.\\d+\\.\\d+"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"group"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+----------------------------------------------------------------------+\n|                         Time|regexmatch(root.test.d1.s1, "regex"="\\d+\\.\\d+\\.\\d+\\.\\d+", "group"="0")|\n+-----------------------------+----------------------------------------------------------------------+\n|2021-01-01T00:00:01.000+08:00|                                                           192.168.0.1|\n|2021-01-01T00:00:02.000+08:00|                                                          192.168.0.24|\n|2021-01-01T00:00:03.000+08:00|                                                           192.168.0.2|\n|2021-01-01T00:00:04.000+08:00|                                                           192.168.0.5|\n|2021-01-01T00:00:05.000+08:00|                                                         192.168.0.124|\n+-----------------------------+----------------------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h3",{attrs:{id:"regexreplace"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#regexreplace"}},[s._v("#")]),s._v(" RegexReplace")]),s._v(" "),n("h4",{attrs:{id:"函数简介-51"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-51"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于将文本中符合正则表达式的匹配结果替换为指定的字符串。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" REGEXREPLACE")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 TEXT。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("regex")]),s._v(": 需要替换的正则表达式，支持所有 Java 正则表达式语法。")]),s._v(" "),n("li",[n("code",[s._v("replace")]),s._v(": 替换后的字符串，支持 Java 正则表达式中的后向引用，\n形如'$1'指代了正则表达式"),n("code",[s._v("regex")]),s._v("中的第一个分组，并会在替换时自动填充匹配到的子串。")]),s._v(" "),n("li",[n("code",[s._v("limit")]),s._v(": 替换次数，大于等于 -1 的整数，默认为 -1 表示所有匹配的子串都会被替换。")]),s._v(" "),n("li",[n("code",[s._v("offset")]),s._v(": 需要跳过的匹配次数，即前"),n("code",[s._v("offset")]),s._v("次匹配到的字符子串并不会被替换，默认为 0。")]),s._v(" "),n("li",[n("code",[s._v("reverse")]),s._v(": 是否需要反向计数，默认为 false 即按照从左向右的次序。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 TEXT。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-51"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-51"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+-------------------------------+\n|                         Time|                root.test.d1.s1|\n+-----------------------------+-------------------------------+\n|2021-01-01T00:00:01.000+08:00|        [192.168.0.1] [SUCCESS]|\n|2021-01-01T00:00:02.000+08:00|       [192.168.0.24] [SUCCESS]|\n|2021-01-01T00:00:03.000+08:00|           [192.168.0.2] [FAIL]|\n|2021-01-01T00:00:04.000+08:00|        [192.168.0.5] [SUCCESS]|\n|2021-01-01T00:00:05.000+08:00|      [192.168.0.124] [SUCCESS]|\n+-----------------------------+-------------------------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" regexreplace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regex"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192\\.168\\.0\\.(\\d+)"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"replace"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cluster-$1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"limit"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+-----------------------------------------------------------+\n|                         Time|regexreplace(root.test.d1.s1, "regex"="192\\.168\\.0\\.(\\d+)",|\n|                             |                       "replace"="cluster-$1", "limit"="1")|\n+-----------------------------+-----------------------------------------------------------+\n|2021-01-01T00:00:01.000+08:00|                                      [cluster-1] [SUCCESS]|\n|2021-01-01T00:00:02.000+08:00|                                     [cluster-24] [SUCCESS]|\n|2021-01-01T00:00:03.000+08:00|                                         [cluster-2] [FAIL]|\n|2021-01-01T00:00:04.000+08:00|                                      [cluster-5] [SUCCESS]|\n|2021-01-01T00:00:05.000+08:00|                                    [cluster-124] [SUCCESS]|\n+-----------------------------+-----------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"regexsplit"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#regexsplit"}},[s._v("#")]),s._v(" RegexSplit")]),s._v(" "),n("h4",{attrs:{id:"函数简介-52"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-52"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于使用给定的正则表达式切分文本，并返回指定的项。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" REGEXSPLIT")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 TEXT。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("regex")]),s._v(": 用于分割文本的正则表达式，支持所有 Java 正则表达式语法，比如"),n("code",[s._v("['\"]")]),s._v("将会匹配任意的英文引号"),n("code",[s._v("'")]),s._v("和"),n("code",[s._v('"')]),s._v("。")]),s._v(" "),n("li",[n("code",[s._v("index")]),s._v(": 输出结果在切分后数组中的序号，需要是大于等于 -1 的整数，默认值为 -1 表示返回切分后数组的长度，其它非负整数即表示返回数组中对应位置的切分结果（数组的秩从 0 开始计数）。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，在"),n("code",[s._v("index")]),s._v("为 -1 时输出数据类型为 INT32，否则为 TEXT。")]),s._v(" "),n("p",[n("strong",[s._v("提示：")]),s._v(" 如果"),n("code",[s._v("index")]),s._v("超出了切分后结果数组的秩范围，例如使用"),n("code",[s._v(",")]),s._v("切分"),n("code",[s._v("0,1,2")]),s._v("时输入"),n("code",[s._v("index")]),s._v("为 3，则该数据点没有输出结果。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-52"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-52"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2021-01-01T00:00:01.000+08:00|      A,B,A+,B-|\n|2021-01-01T00:00:02.000+08:00|      A,A+,A,B+|\n|2021-01-01T00:00:03.000+08:00|         B+,B,B|\n|2021-01-01T00:00:04.000+08:00|      A+,A,A+,A|\n|2021-01-01T00:00:05.000+08:00|       A,B-,B,B|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" regexsplit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regex"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"index"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+------------------------------------------------------+\n|                         Time|regexsplit(root.test.d1.s1, "regex"=",", "index"="-1")|\n+-----------------------------+------------------------------------------------------+\n|2021-01-01T00:00:01.000+08:00|                                                     4|\n|2021-01-01T00:00:02.000+08:00|                                                     4|\n|2021-01-01T00:00:03.000+08:00|                                                     3|\n|2021-01-01T00:00:04.000+08:00|                                                     4|\n|2021-01-01T00:00:05.000+08:00|                                                     4|\n+-----------------------------+------------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("另一个查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" regexsplit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"regex"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"index"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+-----------------------------------------------------+\n|                         Time|regexsplit(root.test.d1.s1, "regex"=",", "index"="3")|\n+-----------------------------+-----------------------------------------------------+\n|2021-01-01T00:00:01.000+08:00|                                                   B-|\n|2021-01-01T00:00:02.000+08:00|                                                   B+|\n|2021-01-01T00:00:04.000+08:00|                                                    A|\n|2021-01-01T00:00:05.000+08:00|                                                    B|\n+-----------------------------+-----------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"strreplace"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#strreplace"}},[s._v("#")]),s._v(" StrReplace")]),s._v(" "),n("h4",{attrs:{id:"函数简介-53"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数简介-53"}},[s._v("#")]),s._v(" 函数简介")]),s._v(" "),n("p",[s._v("本函数用于将文本中的子串替换为指定的字符串。")]),s._v(" "),n("p",[n("strong",[s._v("函数名：")]),s._v(" STRREPLACE")]),s._v(" "),n("p",[n("strong",[s._v("输入序列：")]),s._v(" 仅支持单个输入序列，类型为 TEXT。")]),s._v(" "),n("p",[n("strong",[s._v("参数：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("target")]),s._v(": 需要替换的字符子串")]),s._v(" "),n("li",[n("code",[s._v("replace")]),s._v(": 替换后的字符串。")]),s._v(" "),n("li",[n("code",[s._v("limit")]),s._v(": 替换次数，大于等于 -1 的整数，默认为 -1 表示所有匹配的子串都会被替换。")]),s._v(" "),n("li",[n("code",[s._v("offset")]),s._v(": 需要跳过的匹配次数，即前"),n("code",[s._v("offset")]),s._v("次匹配到的字符子串并不会被替换，默认为 0。")]),s._v(" "),n("li",[n("code",[s._v("reverse")]),s._v(": 是否需要反向计数，默认为 false 即按照从左向右的次序。")])]),s._v(" "),n("p",[n("strong",[s._v("输出序列：")]),s._v(" 输出单个序列，类型为 TEXT。")]),s._v(" "),n("h4",{attrs:{id:"使用示例-53"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例-53"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("输入序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("+-----------------------------+---------------+\n|                         Time|root.test.d1.s1|\n+-----------------------------+---------------+\n|2021-01-01T00:00:01.000+08:00|      A,B,A+,B-|\n|2021-01-01T00:00:02.000+08:00|      A,A+,A,B+|\n|2021-01-01T00:00:03.000+08:00|         B+,B,B|\n|2021-01-01T00:00:04.000+08:00|      A+,A,A+,A|\n|2021-01-01T00:00:05.000+08:00|       A,B-,B,B|\n+-----------------------------+---------------+\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" strreplace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"target"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"replace"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"limit"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+-----------------------------------------+\n|                         Time|strreplace(root.test.d1.s1, "target"=",",|\n|                             |              "replace"="/", "limit"="2")|\n+-----------------------------+-----------------------------------------+\n|2021-01-01T00:00:01.000+08:00|                                A/B/A+,B-|\n|2021-01-01T00:00:02.000+08:00|                                A/A+/A,B+|\n|2021-01-01T00:00:03.000+08:00|                                   B+/B/B|\n|2021-01-01T00:00:04.000+08:00|                                A+/A/A+,A|\n|2021-01-01T00:00:05.000+08:00|                                 A/B-/B,B|\n+-----------------------------+-----------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("另一个用于查询的 SQL 语句：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" strreplace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"target"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"replace"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"limit"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"offset"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"reverse"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"true"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("输出序列：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('+-----------------------------+-----------------------------------------------------+\n|                         Time|strreplace(root.test.d1.s1, "target"=",", "replace"= | \n|                             |    "|", "limit"="1", "offset"="1", "reverse"="true")|\n+-----------------------------+-----------------------------------------------------+\n|2021-01-01T00:00:01.000+08:00|                                            A,B/A+,B-|\n|2021-01-01T00:00:02.000+08:00|                                            A,A+/A,B+|\n|2021-01-01T00:00:03.000+08:00|                                               B+/B,B|\n|2021-01-01T00:00:04.000+08:00|                                            A+,A/A+,A|\n|2021-01-01T00:00:05.000+08:00|                                             A,B-/B,B|\n+-----------------------------+-----------------------------------------------------+\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);