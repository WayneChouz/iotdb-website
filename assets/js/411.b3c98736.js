(window.webpackJsonp=window.webpackJsonp||[]).push([[411],{994:function(t,s,e){"use strict";e.r(s);var a=e(71),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"物理量模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#物理量模板"}},[t._v("#")]),t._v(" 物理量模板")]),t._v(" "),e("h3",{attrs:{id:"问题背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题背景"}},[t._v("#")]),t._v(" 问题背景")]),t._v(" "),e("p",[t._v("当面临一批大量的同类型的实体，这些实体的物理量都相同时，为每个序列注册时间序列一方面时间序列的元数据将占用较多的内存资源，另一方面大量序列的维护工作也会十分复杂。")]),t._v(" "),e("p",[t._v("为了实现同类型不同实体的物理量元数据共享，减少元数据内存占用，同时简化同类型实体的管理，IoTDB引入物理量模板功能。")]),t._v(" "),e("p",[t._v("下图展示了一个燃油车场景的数据模型，各地区的多台燃油车的速度、油量、加速度、角速度四个物理量将会被采集，显然这些燃油车实体具备相同的物理量。")]),t._v(" "),e("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://github.com/apache/iotdb-bin-resources/blob/main/docs/UserGuide/Data%20Concept/Measurement%20Template/example_without_template.png?raw=true",alt:"example without template"}}),t._v(" "),e("h3",{attrs:{id:"概念定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概念定义"}},[t._v("#")]),t._v(" 概念定义")]),t._v(" "),e("p",[t._v("物理量模板（Measurement template，v0.13 起支持）")]),t._v(" "),e("p",[t._v("实际应用中有许多实体所采集的物理量相同，即具有相同的工况名称和类型，可以声明一个"),e("strong",[t._v("物理量模板")]),t._v("来定义可采集的物理量集合。")]),t._v(" "),e("p",[t._v("将物理量模版挂载在树形数据模式的任意节点上，表示该节点下的所有实体具有相同的物理量集合。")]),t._v(" "),e("p",[t._v("目前每一条路径节点仅允许挂载一个物理量模板，即当一个节点被挂载物理量模板后，它的祖先节点和后代节点都不能再挂载物理量模板。实体将使用其自身或祖先的物理量模板作为有效模板。")]),t._v(" "),e("p",[t._v("使用物理量模板后，问题背景中示例的燃油车数据模型将会转变至下图所示的形式。所有的物理量元数据仅在模板中保存一份，所有的实体共享模板中的元数据。")]),t._v(" "),e("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://github.com/apache/iotdb-bin-resources/blob/main/docs/UserGuide/Data%20Concept/Measurement%20Template/example_with_template.png?raw=true",alt:"example with template"}}),t._v(" "),e("h3",{attrs:{id:"使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),e("p",[t._v("当前仅支持通过Session编程接口使用物理量模板，包括模板的创建和挂载操作。")]),t._v(" "),e("ul",[e("li",[t._v("创建一个物理量模板")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("* name: 物理量模板名称\n* measurements: 工况名称列表，如果该工况是非对齐的，直接将其名称放入一个 list 中再放入 measurements 中，\n*               如果该工况是对齐的，将所有对齐工况名称放入一个 list 再放入 measurements 中\n* dataTypes: 数据类型名称列表，如果该工况是非对齐的，直接将其数据类型放入一个 list 中再放入 dataTypes 中，\n             如果该工况是对齐的，将所有对齐工况的数据类型放入一个 list 再放入 dataTypes 中\n* encodings: 编码类型名称列表，如果该工况是非对齐的，直接将其数据类型放入一个 list 中再放入 encodings 中，\n             如果该工况是对齐的，将所有对齐工况的编码类型放入一个 list 再放入 encodings 中\n* compressors: 压缩方式列表                          \nvoid createSchemaTemplate(\n      String templateName,\n      List<String> schemaName,\n      List<List<String>> measurements,\n      List<List<TSDataType>> dataTypes,\n      List<List<TSEncoding>> encodings,\n      List<CompressionType> compressors)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("ul",[e("li",[t._v("将名为'templateName'的物理量模板挂载到'prefixPath'路径下，在执行这一步之前，你需要创建名为'templateName'的物理量模板")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("void setSchemaTemplate(String templateName, String prefixPath)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("挂载好物理量模板后，即可进行数据的写入。例如存储组为root.sg，模板t1(s1,s2)被挂载到了节点root.sg.car，那么可直接向时间序列（如root.sg.car.d1.s1和root.sg.car.d1.s2）写入时间序列数据，该时间序列已可被当作正常创建的序列使用。")]),t._v(" "),e("p",[t._v("使用物理量模板的示例可以参见 "),e("code",[t._v("example/session/src/main/java/org/apache/iotdb/AlignedTimeseriesSessionExample.java")]),t._v("。")])])}),[],!1,null,null,null);s.default=n.exports}}]);