(window.webpackJsonp=window.webpackJsonp||[]).push([[552],{958:function(t,e,a){"use strict";a.r(e);var s=a(19),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"aggregate-functions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aggregate-functions"}},[t._v("#")]),t._v(" Aggregate Functions")]),t._v(" "),e("p",[t._v("Aggregate functions are many-to-one functions. They perform aggregate calculations on a set of values, resulting in a single aggregated result.")]),t._v(" "),e("p",[t._v("All aggregate functions except "),e("code",[t._v("COUNT()")]),t._v(" ignore null values and return null when there are no input rows or all values are null. For example, "),e("code",[t._v("SUM()")]),t._v(" returns null instead of zero, and "),e("code",[t._v("AVG()")]),t._v(" does not include null values in the count.")]),t._v(" "),e("p",[t._v("The aggregate functions supported by IoTDB are as follows:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Function Name")]),t._v(" "),e("th",[t._v("Function Description")]),t._v(" "),e("th",[t._v("Allowed Input Data Types")]),t._v(" "),e("th",[t._v("Output Data Types")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("SUM")]),t._v(" "),e("td",[t._v("Summation.")]),t._v(" "),e("td",[t._v("INT32 INT64 FLOAT DOUBLE")]),t._v(" "),e("td",[t._v("DOUBLE")])]),t._v(" "),e("tr",[e("td",[t._v("COUNT")]),t._v(" "),e("td",[t._v("Counts the number of data points.")]),t._v(" "),e("td",[t._v("All types")]),t._v(" "),e("td",[t._v("INT")])]),t._v(" "),e("tr",[e("td",[t._v("AVG")]),t._v(" "),e("td",[t._v("Average.")]),t._v(" "),e("td",[t._v("INT32 INT64 FLOAT DOUBLE")]),t._v(" "),e("td",[t._v("DOUBLE")])]),t._v(" "),e("tr",[e("td",[t._v("EXTREME")]),t._v(" "),e("td",[t._v("Finds the value with the largest absolute value. Returns a positive value if the maximum absolute value of positive and negative values is equal.")]),t._v(" "),e("td",[t._v("INT32 INT64 FLOAT DOUBLE")]),t._v(" "),e("td",[t._v("Consistent with the input data type")])]),t._v(" "),e("tr",[e("td",[t._v("MAX_VALUE")]),t._v(" "),e("td",[t._v("Find the maximum value.")]),t._v(" "),e("td",[t._v("INT32 INT64 FLOAT DOUBLE")]),t._v(" "),e("td",[t._v("Consistent with the input data type")])]),t._v(" "),e("tr",[e("td",[t._v("MIN_VALUE")]),t._v(" "),e("td",[t._v("Find the minimum value.")]),t._v(" "),e("td",[t._v("INT32 INT64 FLOAT DOUBLE")]),t._v(" "),e("td",[t._v("Consistent with the input data type")])]),t._v(" "),e("tr",[e("td",[t._v("FIRST_VALUE")]),t._v(" "),e("td",[t._v("Find the value with the smallest timestamp.")]),t._v(" "),e("td",[t._v("All data types")]),t._v(" "),e("td",[t._v("Consistent with input data type")])]),t._v(" "),e("tr",[e("td",[t._v("LAST_VALUE")]),t._v(" "),e("td",[t._v("Find the value with the largest timestamp.")]),t._v(" "),e("td",[t._v("All data types")]),t._v(" "),e("td",[t._v("Consistent with input data type")])]),t._v(" "),e("tr",[e("td",[t._v("MAX_TIME")]),t._v(" "),e("td",[t._v("Find the maximum timestamp.")]),t._v(" "),e("td",[t._v("All data Types")]),t._v(" "),e("td",[t._v("Timestamp")])]),t._v(" "),e("tr",[e("td",[t._v("MIN_TIME")]),t._v(" "),e("td",[t._v("Find the minimum timestamp.")]),t._v(" "),e("td",[t._v("All data Types")]),t._v(" "),e("td",[t._v("Timestamp")])])])]),t._v(" "),e("p",[e("strong",[t._v("Example:")]),t._v(" Count Points")]),t._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("status")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" root"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ln"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wf01"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wt01"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("Result:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("+-------------------------------+\n|count(root.ln.wf01.wt01.status)|\n+-------------------------------+\n|                          10080|\n+-------------------------------+\nTotal line number = 1\nIt costs 0.016s\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])])])}),[],!1,null,null,null);e.default=n.exports}}]);