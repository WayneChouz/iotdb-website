(window.webpackJsonp=window.webpackJsonp||[]).push([[469],{867:function(t,a,e){"use strict";e.r(a);var _=e(29),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"集群设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集群设置"}},[t._v("#")]),t._v(" 集群设置")]),t._v(" "),e("p",[t._v("本文档为 IoTDB 集群版（0.14.0-preview1）启动教程。")]),t._v(" "),e("h2",{attrs:{id:"安装环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装环境"}},[t._v("#")]),t._v(" 安装环境")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("JDK>=1.8 的运行环境，并配置好 JAVA_HOME 环境变量。")])]),t._v(" "),e("li",[e("p",[t._v("设置最大文件打开数为 65535。")])]),t._v(" "),e("li",[e("p",[t._v("关闭交换内存。")])])]),t._v(" "),e("h2",{attrs:{id:"安装包获取"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装包获取"}},[t._v("#")]),t._v(" 安装包获取")]),t._v(" "),e("h3",{attrs:{id:"下载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[t._v("#")]),t._v(" 下载")]),t._v(" "),e("p",[t._v("可以直接在官网下载二进制版本 "),e("a",{attrs:{href:"https://iotdb.apache.org/Download/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Download Page"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"源码编译"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源码编译"}},[t._v("#")]),t._v(" 源码编译")]),t._v(" "),e("p",[t._v("下载源码:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git clone https://github.com/apache/iotdb.git\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("默认分支为 master 分支，你可以切换到发布版本的 tag，例如：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git checkout v0.14.0-preview1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("在 IoTDB 根目录下:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mvn clean package -pl distribution -am -DskipTests\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("集群的二进制版本在目录 "),e("strong",[t._v("distribution/target")]),t._v(" 下，其中，all-bin 包含 ConfigNode 和 DataNode，DataNode 内包含 Cli。")]),t._v(" "),e("h2",{attrs:{id:"安装包说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装包说明"}},[t._v("#")]),t._v(" 安装包说明")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[t._v("目录")])]),t._v(" "),e("th",[e("strong",[t._v("说明")])])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("confignode")]),t._v(" "),e("td",[t._v("包含 ConfigNode 的启停脚本、配置文件、日志、数据")])]),t._v(" "),e("tr",[e("td",[t._v("datanode")]),t._v(" "),e("td",[t._v("包含 DataNode 的启停脚本、配置文件、日志、数据；Cli的启动脚本")])]),t._v(" "),e("tr",[e("td",[t._v("grafana-metrics-example")]),t._v(" "),e("td",[t._v("Grafana 监控界面模板")])]),t._v(" "),e("tr",[e("td",[t._v("lib")]),t._v(" "),e("td",[t._v("库文件目录")])]),t._v(" "),e("tr",[e("td",[t._v("tools")]),t._v(" "),e("td",[t._v("系统工具目录")])])])]),t._v(" "),e("h2",{attrs:{id:"启动集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动集群"}},[t._v("#")]),t._v(" 启动集群")]),t._v(" "),e("p",[t._v("用户可以启动包括若干 ConfigNode 和 DataNode 的集群。\n集群可以提供服务的标准是至少启动一个 ConfigNode 且启动 不小于（数据/元数据）副本个数 的 DataNode。")]),t._v(" "),e("p",[t._v("总体启动流程分为三步")]),t._v(" "),e("ul",[e("li",[t._v("启动种子 ConfigNode")]),t._v(" "),e("li",[t._v("增加 ConfigNode（可选）")]),t._v(" "),e("li",[t._v("增加 DataNode")])]),t._v(" "),e("h3",{attrs:{id:"启动种子-confignode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动种子-confignode"}},[t._v("#")]),t._v(" 启动种子 ConfigNode")]),t._v(" "),e("p",[t._v("启动种子 ConfigNode，iotdb-confignode.properties 中的重要配置如下")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[t._v("配置项")])]),t._v(" "),e("th",[e("strong",[t._v("说明")])])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("rpc_address")]),t._v(" "),e("td",[t._v("ConfigNode 在集群内部通讯使用的地址")])]),t._v(" "),e("tr",[e("td",[t._v("rpc_port")]),t._v(" "),e("td",[t._v("ConfigNode 在集群内部通讯使用的端口")])]),t._v(" "),e("tr",[e("td",[t._v("consensus_port")]),t._v(" "),e("td",[t._v("ConfigNode 副本组共识协议通信使用的端口")])]),t._v(" "),e("tr",[e("td",[t._v("config_nodes")]),t._v(" "),e("td",[t._v("种子 ConfigNode 地址，第一个 ConfigNode 配置自己的 address:port")])]),t._v(" "),e("tr",[e("td",[t._v("data_replication_factor")]),t._v(" "),e("td",[t._v("数据副本数，DataNode 数量不应少于此数目")])]),t._v(" "),e("tr",[e("td",[t._v("data_region_consensus_protocol_class")]),t._v(" "),e("td",[t._v("数据副本组的共识协议")])]),t._v(" "),e("tr",[e("td",[t._v("schema_replication_factor")]),t._v(" "),e("td",[t._v("元数据副本数，DataNode 数量不应少于此数目")])]),t._v(" "),e("tr",[e("td",[t._v("schema_region_consensus_protocol_class")]),t._v(" "),e("td",[t._v("元数据副本组的共识协议")])])])]),t._v(" "),e("p",[t._v("具体参考 "),e("a",{attrs:{href:"https://iotdb.apache.org/zh/UserGuide/Master/Reference/ConfigNode-Config-Manual.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ConfigNode配置参数"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"增加-confignode-可选"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增加-confignode-可选"}},[t._v("#")]),t._v(" 增加 ConfigNode（可选）")]),t._v(" "),e("p",[t._v("增加 ConfigNode 是一个扩容操作，除端口不能冲突外，其他参数需要与集群已有的 ConfigNode 保持一致，并将 config_nodes 配置为集群已有节点。")]),t._v(" "),e("h3",{attrs:{id:"增加-datanode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增加-datanode"}},[t._v("#")]),t._v(" 增加 DataNode")]),t._v(" "),e("p",[t._v("可以像集群中添加任意个 DataNode。")]),t._v(" "),e("p",[t._v("iotdb-datanode.properties 中的重要配置如下")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[t._v("配置项")])]),t._v(" "),e("th",[e("strong",[t._v("说明")])])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("rpc_address")]),t._v(" "),e("td",[t._v("客户端 RPC 服务的地址")])]),t._v(" "),e("tr",[e("td",[t._v("rpc_port")]),t._v(" "),e("td",[t._v("客户端 RPC 服务的端口")])]),t._v(" "),e("tr",[e("td",[t._v("internal_address")]),t._v(" "),e("td",[t._v("DataNode 在集群内部接收控制流使用的端口")])]),t._v(" "),e("tr",[e("td",[t._v("internal_port")]),t._v(" "),e("td",[t._v("DataNode 在集群内部接收控制流使用的端口")])]),t._v(" "),e("tr",[e("td",[t._v("mpp_data_exchange_port")]),t._v(" "),e("td",[t._v("DataNode 在集群内部接收数据流使用的端口")])]),t._v(" "),e("tr",[e("td",[t._v("data_region_consensus_port")]),t._v(" "),e("td",[t._v("DataNode 的数据副本间共识协议通信的端口")])]),t._v(" "),e("tr",[e("td",[t._v("schema_region_consensus_port")]),t._v(" "),e("td",[t._v("DataNode 的元数据副本间共识协议通信的端口")])]),t._v(" "),e("tr",[e("td",[t._v("config_nodes")]),t._v(" "),e("td",[t._v("集群中正在运行的 ConfigNode 地址")])])])]),t._v(" "),e("p",[t._v("具体参考 "),e("a",{attrs:{href:"https://iotdb.apache.org/zh/UserGuide/Master/Reference/DataNode-Config-Manual.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("DataNode配置参数"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);