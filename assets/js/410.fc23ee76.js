(window.webpackJsonp=window.webpackJsonp||[]).push([[410],{1018:function(e,t,a){"use strict";a.r(t);var v=a(82),s=Object(v.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"数据模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据模式"}},[e._v("#")]),e._v(" 数据模式")]),e._v(" "),a("h2",{attrs:{id:"数据模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据模型"}},[e._v("#")]),e._v(" 数据模型")]),e._v(" "),a("p",[e._v("我们以风电场物联网场景为例，说明如何在 IoTDB 中创建一个正确的数据模型。")]),e._v(" "),a("p",[e._v("根据企业组织结构和设备实体层次结构，我们将其物联网数据模型表示为如下图所示的属性层级组织结构，即电力集团层-风电场层-实体层-物理量层。其中 ROOT 为根节点，物理量层的每一个节点为叶子节点。IoTDB 采用树形结构定义数据模式，以从 ROOT 节点到叶子节点的路径来命名一个时间序列，层次间以“.”连接。例如，下图最左侧路径对应的时间序列名称为"),a("code",[e._v("ROOT.ln.wf01.wt01.status")]),e._v("。")]),e._v(" "),a("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/19167280/123542457-5f511d00-d77c-11eb-8006-562d83069baa.png"}}),e._v(" "),a("p",[e._v("IoTDB 模型结构涉及的基本概念在下文将做详细叙述。")]),e._v(" "),a("h3",{attrs:{id:"物理量、实体、存储组、路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物理量、实体、存储组、路径"}},[e._v("#")]),e._v(" 物理量、实体、存储组、路径")]),e._v(" "),a("h4",{attrs:{id:"物理量-measurement-也称工况、字段-field"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物理量-measurement-也称工况、字段-field"}},[e._v("#")]),e._v(" 物理量（Measurement，也称工况、字段 field）")]),e._v(" "),a("p",[a("strong",[e._v("一元或多元物理量")]),e._v("，是在实际场景中检测装置所记录的测量信息，且可以按一定规律变换成为电信号或其他所需形式的信息输出并发送给 IoTDB。在 IoTDB 当中，存储的所有数据及路径，都是以物理量为单位进行组织。")]),e._v(" "),a("h4",{attrs:{id:"物理分量-submeasurement、分量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物理分量-submeasurement、分量"}},[e._v("#")]),e._v(" 物理分量（SubMeasurement、分量）")]),e._v(" "),a("p",[e._v("在多元物理量中，包括多个分量。如 GPS 是一个多元物理量，包含 3 个分量：经度、维度、海拔。多元物理量通常被同时采集，共享时间列。")]),e._v(" "),a("p",[e._v("一元物理量则将分量名和物理量名字重合。如温度是一个一元物理量。")]),e._v(" "),a("h4",{attrs:{id:"实体-entity-也称设备-device"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实体-entity-也称设备-device"}},[e._v("#")]),e._v(" 实体（Entity，也称设备，device）")]),e._v(" "),a("p",[a("strong",[e._v("一个物理实体")]),e._v("，是在实际场景中拥有物理量的设备或装置。在 IoTDB 当中，所有的物理量都有其对应的归属实体。")]),e._v(" "),a("h4",{attrs:{id:"存储组-storage-group"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储组-storage-group"}},[e._v("#")]),e._v(" 存储组（Storage group）")]),e._v(" "),a("p",[a("strong",[e._v("一组物理实体")]),e._v("，用户可以将任意前缀路径设置成存储组。如有 4 条时间序列"),a("code",[e._v("root.ln.wf01.wt01.status")]),e._v(", "),a("code",[e._v("root.ln.wf01.wt01.temperature")]),e._v(", "),a("code",[e._v("root.ln.wf02.wt02.hardware")]),e._v(", "),a("code",[e._v("root.ln.wf02.wt02.status")]),e._v("，路径"),a("code",[e._v("root.ln")]),e._v("下的两个实体 "),a("code",[e._v("wt01")]),e._v(", "),a("code",[e._v("wt02")]),e._v("可能属于同一个业主，或者同一个制造商，这时候就可以将前缀路径"),a("code",[e._v("root.ln")]),e._v("指定为一个存储组。未来"),a("code",[e._v("root.ln")]),e._v("下增加了新的实体，也将属于该存储组。")]),e._v(" "),a("p",[e._v("一个存储组中的所有实体的数据会存储在同一个文件夹下，不同存储组的实体数据会存储在磁盘的不同文件夹下，从而实现物理隔离。")]),e._v(" "),a("blockquote",[a("p",[e._v("注意 1：不允许将一个完整路径（如上例的"),a("code",[e._v("root.ln.wf01.wt01.status")]),e._v(") 设置成存储组。")]),e._v(" "),a("p",[e._v("注意 2：一个时间序列其前缀必须属于某个存储组。在创建时间序列之前，用户必须设定该序列属于哪个存储组（Storage Group）。只有设置了存储组的时间序列才可以被持久化在磁盘上。")])]),e._v(" "),a("p",[e._v("一个前缀路径一旦被设定成存储组后就不可以再更改这个存储组的设定。")]),e._v(" "),a("p",[e._v("一个存储组设定后，其对应的前缀路径的祖先层级与孩子及后裔层级也不允许再设置存储组（如，"),a("code",[e._v("root.ln")]),e._v("设置存储组后，root 层级与"),a("code",[e._v("root.ln.wf01")]),e._v("不允许被设置为存储组）。")]),e._v(" "),a("p",[e._v("存储组节点名只支持中英文字符、数字、下划线和中划线的组合。例如"),a("code",[e._v("root. 存储组_1-组1")]),e._v(" 。")]),e._v(" "),a("h4",{attrs:{id:"路径-path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径-path"}},[e._v("#")]),e._v(" 路径（Path）")]),e._v(" "),a("p",[e._v("路径（"),a("code",[e._v("path")]),e._v("）是指符合以下约束的表达式：")]),e._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[e._v("path       \n    : layer_name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'.'")]),e._v(" layer_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nlayer_name\n    : wildcard? id wildcard?\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" wildcard\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nwildcard \n    : "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'*'")]),e._v(" \n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'**'")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("p",[e._v("其中，对 "),a("code",[e._v("id")]),e._v(" 的定义可以参考"),a("RouterLink",{attrs:{to:"/zh/UserGuide/Master/IoTDB-SQL-Language/Syntax-Conventions.html"}},[e._v("语法约定")]),e._v("。")],1),e._v(" "),a("p",[e._v("我们称一个路径中由 "),a("code",[e._v("'.'")]),e._v(" 分割的部分叫做层级（"),a("code",[e._v("layer_name")]),e._v("）。例如："),a("code",[e._v("root.a.b.c")]),e._v("为一个层级为 4 的路径。")]),e._v(" "),a("p",[e._v("下面是对层级（"),a("code",[e._v("layer_name")]),e._v("）的约束：")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("root")]),e._v(" 作为一个保留字符，它只允许出现在下文提到的时间序列的开头，若其他层级出现 "),a("code",[e._v("root")]),e._v("，则无法解析，提示报错。")])]),e._v(" "),a("li",[a("p",[e._v("除了时间序列的开头的层级（"),a("code",[e._v("root")]),e._v("）外，其他的层级支持的字符如下：")]),e._v(" "),a("ul",[a("li",[e._v("中文字符"),a("code",[e._v('"\\u2E80"')]),e._v("到"),a("code",[e._v('"\\u9FFF"')])]),e._v(" "),a("li",[a("code",[e._v('"_"，"@"，"#"，"$"')])]),e._v(" "),a("li",[a("code",[e._v('"A"')]),e._v("到"),a("code",[e._v('"Z"')]),e._v("，"),a("code",[e._v('"a"')]),e._v("到"),a("code",[e._v('"z"')]),e._v("，"),a("code",[e._v('"0"')]),e._v("到"),a("code",[e._v('"9"')])])])]),e._v(" "),a("li",[a("p",[e._v("除了时间序列的开头的层级（"),a("code",[e._v("root")]),e._v("）和存储组层级外，层级还支持使用被  `  或者 "),a("code",[e._v('"')]),e._v(" 符号引用的特殊字符串作为其名称。需要注意的是，被引用的字符串不可带有 "),a("code",[e._v(".")]),e._v(" 字符。下面是一些合法的例子：")]),e._v(" "),a("ul",[a("li",[e._v('root.sg."select"."+-from="."where""where"""."$"，6 个层级分别为 root, sg, select, +-from, where"where", $')]),e._v(" "),a("li",[e._v('root.sg.````.`select`.`+="from"`.`$`，6 个层级分别为 root, sg, `, select, +-"from", $')])])]),e._v(" "),a("li",[a("p",[e._v("特别地，如果系统在 Windows 系统上部署，那么存储组层级名称是大小写不敏感的。例如，同时创建"),a("code",[e._v("root.ln")]),e._v(" 和 "),a("code",[e._v("root.LN")]),e._v(" 是不被允许的。")])])]),e._v(" "),a("h4",{attrs:{id:"路径模式-path-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径模式-path-pattern"}},[e._v("#")]),e._v(" 路径模式（Path Pattern）")]),e._v(" "),a("p",[e._v("为了使得在表达多个时间序列的时候更加方便快捷，IoTDB 为用户提供带通配符"),a("code",[e._v("*")]),e._v("或"),a("code",[e._v("**")]),e._v("的路径。用户可以利用两种通配符构造出期望的路径模式。通配符可以出现在路径中的任何层。")]),e._v(" "),a("p",[a("code",[e._v("*")]),e._v("在路径中表示一层。例如"),a("code",[e._v("root.vehicle.*.sensor1")]),e._v("代表的是以"),a("code",[e._v("root.vehicle")]),e._v("为前缀，以"),a("code",[e._v("sensor1")]),e._v("为后缀，层次等于 4 层的路径。")]),e._v(" "),a("p",[a("code",[e._v("**")]),e._v("在路径中表示是（"),a("code",[e._v("*")]),e._v("）+，即为一层或多层"),a("code",[e._v("*")]),e._v("。例如"),a("code",[e._v("root.vehicle.device1.**")]),e._v("代表的是"),a("code",[e._v("root.vehicle.device1.*")]),e._v(", "),a("code",[e._v("root.vehicle.device1.*.*")]),e._v(", "),a("code",[e._v("root.vehicle.device1.*.*.*")]),e._v("等所有以"),a("code",[e._v("root.vehicle.device1")]),e._v("为前缀路径的大于等于 4 层的路径；"),a("code",[e._v("root.vehicle.**.sensor1")]),e._v("代表的是以"),a("code",[e._v("root.vehicle")]),e._v("为前缀，以"),a("code",[e._v("sensor1")]),e._v("为后缀，层次大于等于 4 层的路径。")]),e._v(" "),a("blockquote",[a("p",[e._v("注意："),a("code",[e._v("*")]),e._v("和"),a("code",[e._v("**")]),e._v("不能放在路径开头。")])]),e._v(" "),a("h3",{attrs:{id:"一元、多元时间序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一元、多元时间序列"}},[e._v("#")]),e._v(" 一元、多元时间序列")]),e._v(" "),a("h4",{attrs:{id:"数据点-data-point"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据点-data-point"}},[e._v("#")]),e._v(" 数据点（Data point）")]),e._v(" "),a("p",[a("strong",[e._v("一个“时间-值”对")]),e._v("。")]),e._v(" "),a("h4",{attrs:{id:"时间序列-一个实体的某个物理量对应一个时间序列-timeseries-也称测点-meter、时间线-timeline-实时数据库中常被称作标签-tag、参数-parameter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间序列-一个实体的某个物理量对应一个时间序列-timeseries-也称测点-meter、时间线-timeline-实时数据库中常被称作标签-tag、参数-parameter"}},[e._v("#")]),e._v(" 时间序列（一个实体的某个物理量对应一个时间序列，Timeseries，也称测点 meter、时间线 timeline，实时数据库中常被称作标签 tag、参数 parameter）")]),e._v(" "),a("p",[a("strong",[e._v("一个物理实体的某个物理量在时间轴上的记录")]),e._v("，是数据点的序列。")]),e._v(" "),a("p",[e._v("例如，ln 电力集团、wf01 风电场的实体 wt01 有名为 status 的物理量，则它的时间序列可以表示为："),a("code",[e._v("root.ln.wf01.wt01.status")]),e._v("。")]),e._v(" "),a("h4",{attrs:{id:"一元时间序列-single-variable-timeseries-或-timeseries-v0-1-起支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一元时间序列-single-variable-timeseries-或-timeseries-v0-1-起支持"}},[e._v("#")]),e._v(" 一元时间序列（single-variable timeseries 或 timeseries，v0.1 起支持）")]),e._v(" "),a("p",[e._v("一个实体的一个一元物理量对应一个一元时间序列。实体+物理量=时间序列")]),e._v(" "),a("h4",{attrs:{id:"多元时间序列-multi-variable-timeseries-或-aligned-timeseries-v0-13-起支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多元时间序列-multi-variable-timeseries-或-aligned-timeseries-v0-13-起支持"}},[e._v("#")]),e._v(" 多元时间序列（Multi-variable timeseries 或 Aligned timeseries，v0.13 起支持）")]),e._v(" "),a("p",[e._v("一个实体的一个多元物理量对应一个多元时间序列。这些时间序列称为"),a("strong",[e._v("多元时间序列")]),e._v("，也叫"),a("strong",[e._v("对齐时间序列")]),e._v("。")]),e._v(" "),a("p",[e._v("多元时间序列需要被同时创建、同时插入值，删除时也必须同时删除。不过在查询的时候，可以对于每一个分量单独查询。")]),e._v(" "),a("p",[e._v("通过使用对齐的时间序列，在插入数据时，一组对齐序列的时间戳列在内存和磁盘中仅需存储一次，而不是每个时间序列存储一次：")]),e._v(" "),a("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/19167280/123542458-62e4a400-d77c-11eb-8c45-ca516f1b7eba.png"}}),e._v(" "),a("p",[e._v("在后续数据定义语言、数据操作语言和 Java 原生接口章节，将对涉及到对齐时间序列的各种操作进行逐一介绍。")]),e._v(" "),a("h4",{attrs:{id:"时间戳类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间戳类型"}},[e._v("#")]),e._v(" 时间戳类型")]),e._v(" "),a("p",[e._v("时间戳是一个数据到来的时间点，其中包括绝对时间戳和相对时间戳，详细描述参见数据类型文档。")]),e._v(" "),a("h3",{attrs:{id:"物理量模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物理量模板"}},[e._v("#")]),e._v(" 物理量模板")]),e._v(" "),a("h4",{attrs:{id:"物理量模板-measurement-template-v0-13-起支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物理量模板-measurement-template-v0-13-起支持"}},[e._v("#")]),e._v(" 物理量模板（Measurement template，v0.13 起支持）")]),e._v(" "),a("p",[e._v("实际应用中有许多实体所采集的物理量相同，即具有相同的工况名称和类型，可以声明一个"),a("strong",[e._v("物理量模板")]),e._v("来定义可采集的物理量集合。在实践中，物理量模板的使用可帮助减少元数据的资源占用，详细内容参见物理量模板文档。")])])}),[],!1,null,null,null);t.default=s.exports}}]);