(window.webpackJsonp=window.webpackJsonp||[]).push([[865],{1264:function(t,a,s){"use strict";s.r(a);var r=s(29),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"jmx工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jmx工具"}},[t._v("#")]),t._v(" JMX工具")]),t._v(" "),a("p",[t._v("Java VisualVM提供了一个可视化的界面，用于查看Java应用程序在Java虚拟机（JVM）上运行的详细信息，并对这些应用程序进行故障排除和分析。")]),t._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("p",[t._v("第一步：启动IoTDB server。")]),t._v(" "),a("p",[t._v("第二步：建立连接。对于本地的监控，不需要手动配置连接。对于远程的监控，可以添加远程的ip地址，并将端口配置为"),a("code",[t._v("31999")]),t._v("。")]),t._v(" "),a("p",[t._v("第三步：开始监控。双击你所建立的ip地址，就可以看到执行应用的详细信息。")])])}),[],!1,null,null,null);a.default=e.exports}}]);