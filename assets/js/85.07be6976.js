(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{482:function(e,t,s){"use strict";s.r(t);var a=s(29),n=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"continuous-query-cq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#continuous-query-cq"}},[e._v("#")]),e._v(" Continuous Query, CQ")]),e._v(" "),t("p",[e._v("We can create, drop a CQ, and query all registered CQ configuration information through SQL statements.")]),e._v(" "),t("p",[e._v("Note that the current distributed version of IoTDB does not support continuous queries. Please stay tuned.")]),e._v(" "),t("h2",{attrs:{id:"sql-statements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-statements"}},[e._v("#")]),e._v(" SQL statements")]),e._v(" "),t("h3",{attrs:{id:"create-cq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-cq"}},[e._v("#")]),e._v(" Create CQ")]),e._v(" "),t("h4",{attrs:{id:"syntax"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#syntax"}},[e._v("#")]),e._v(" Syntax")]),e._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CREATE")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("CONTINUOUS QUERY "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" CQ"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("cq_id"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("RESAMPLE EVERY "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("every_interval"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FOR")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("for_interval"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("BEGIN")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SELECT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("path_suffix"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INTO")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("full_path"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("node_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("path_prefix"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GROUP")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("BY")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("time")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("group_by_interval"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("level")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("level")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("END")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("ul",[t("li",[t("p",[t("code",[e._v("<cq_id>")]),e._v(" specifies the globally unique id of CQ.")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("<every_interval>")]),e._v(" specifies the query execution time interval. We currently support the units of ns, us, ms, s, m, h, d, w, and its value should not be lower than the minimum threshold configured by the user.")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("<for_interval>")]),e._v(" specifies the time range of each query as "),t("code",[e._v("[now()-<for_interval>, now())")]),e._v(". We currently support the units of ns, us, ms, s, m, h, d, w.")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("<execution_boundary_time>")]),e._v(" is a date that represents "),t("strong",[e._v("the start time of the first window")]),e._v(".")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("<execution_boundary_time>")]),e._v(" can be earlier than, equals to, later than "),t("strong",[e._v("current time")]),e._v(".")]),e._v(" "),t("li",[e._v("This parameter is optional. If not specified, it is equivalent to "),t("code",[e._v("BOUNDARY now()")]),e._v(".")]),e._v(" "),t("li",[t("strong",[e._v("The end time of the first window")]),e._v(" is "),t("code",[e._v("<execution_boundary_time> + <for_interval>")]),e._v(".")]),e._v(" "),t("li",[e._v("The "),t("strong",[e._v("start time")]),e._v(" of the "),t("code",[e._v("i (1 <= i)")]),e._v("th window is "),t("code",[e._v("<execution_boundary_time> + (i - 1) * <every_interval>")]),e._v(".")]),e._v(" "),t("li",[e._v("The "),t("strong",[e._v("end time")]),e._v(" of the "),t("code",[e._v("i (1 <= i)")]),e._v("th window is"),t("code",[e._v("<execution_boundary_time> + <for_interval> + (i - 1) * <every_interval>")]),e._v(".")]),e._v(" "),t("li",[e._v("If "),t("strong",[e._v("current time")]),e._v(" is earlier than or equal to "),t("strong",[e._v("the end time of the first window")]),e._v(", then the first execution moment of the continuous query is "),t("strong",[e._v("the end time of the first window")]),e._v(".")]),e._v(" "),t("li",[e._v("If "),t("strong",[e._v("current time")]),e._v(" is later than "),t("strong",[e._v("the end time of the first window")]),e._v(", then the first execution moment of the continuous query is the "),t("strong",[e._v("end time of the first window whose end time is later than or equal to the current time")]),e._v(" .")]),e._v(" "),t("li",[e._v("The "),t("strong",[e._v("query time range")]),e._v("  at each execution moment is "),t("code",[e._v("[now() - <for_interval>, now())")]),e._v(".")])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("<function>")]),e._v(" specifies the aggregate function.")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("<path_prefix>")]),e._v(" and "),t("code",[e._v("<path_suffix>")]),e._v(" are spliced into the queried time series path.")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("<full_path>")]),e._v(" or "),t("code",[e._v("<node_name>")]),e._v(" specifies the result time series path.")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("<group_by_interval>")]),e._v(" specifies the time grouping length. We currently support the units of ns, us, ms, s, m, h, d, w, mo, y.")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("<level>")]),e._v(" refers to grouping according to the "),t("code",[e._v("<level>")]),e._v(" level of the time series, and grouping the aggregation result of  time series with the same name below the "),t("code",[e._v("<level>")]),e._v(" level. For the specific semantics of the Group By Level statement and the definition of "),t("code",[e._v("<level>")]),e._v(", see "),t("RouterLink",{attrs:{to:"/UserGuide/Master/Write-And-Delete-Data/Delete-Data.html"}},[e._v("aggregation-by-level")])],1)])]),e._v(" "),t("p",[e._v("Note:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("<for_interval>")]),e._v(","),t("code",[e._v("<every_interval>")]),e._v(" can optionally be specified. If the user does not specify one of them, the value of the unspecified item will be processed equal to "),t("code",[e._v("<group_by_interval>")]),e._v(".\n"),t("ul",[t("li",[e._v("The values of "),t("code",[e._v("<every_interval>")]),e._v(", "),t("code",[e._v("<for_interval>")]),e._v(" and "),t("code",[e._v("<group_by_interval>")]),e._v(" should all be greater than 0.")]),e._v(" "),t("li",[e._v("The value of "),t("code",[e._v("<group_by_interval>")]),e._v(" should be less than the value of "),t("code",[e._v("<for_interval>")]),e._v(", otherwise the system will process the value equal to "),t("code",[e._v("<for_interval>")]),e._v(".")]),e._v(" "),t("li",[e._v("The user should specify the appropriate "),t("code",[e._v("<for_interval>")]),e._v(" and "),t("code",[e._v("<every_interval>")]),e._v(" according to actual needs.\n"),t("ul",[t("li",[e._v("If "),t("code",[e._v("<for_interval>")]),e._v(" is greater than "),t("code",[e._v("<every_interval>")]),e._v(", there will be partial data overlap in each query window. This configuration is not recommended from the perspective of query performance.")]),e._v(" "),t("li",[e._v("If "),t("code",[e._v("<for_interval>")]),e._v(" is less than "),t("code",[e._v("<every_interval>")]),e._v(", there may be uncovered data between each query window.")])])])])]),e._v(" "),t("li",[e._v("For the result series path\n"),t("ul",[t("li",[e._v("The user can choose to specify "),t("code",[e._v("<full_path>")]),e._v(", which is the complete time series path starting with "),t("code",[e._v("root")]),e._v(". The user can use the "),t("code",[e._v("${x}")]),e._v(" variable in the path to represent the node name of "),t("code",[e._v("level = x")]),e._v(" in the original time series. "),t("code",[e._v("x")]),e._v(" should be greater than or equal to 0 and less than or equal to the value of "),t("code",[e._v("<level>")]),e._v("\n(If "),t("code",[e._v("level")]),e._v(" is not specified, it should be less than or equal to the level, i.e. length, of "),t("code",[e._v("<path_prefix>")]),e._v(").")]),e._v(" "),t("li",[e._v("The user can also specify only "),t("code",[e._v("<node_name>")]),e._v(", which is the last node name of the result time series path.\n"),t("ul",[t("li",[e._v("If the user specifies "),t("code",[e._v("<level> = l")]),e._v(", the result time series path generated by the system is "),t("code",[e._v("root.${1}. ... .${l}.<node_name>")])]),e._v(" "),t("li",[e._v("If the user does not specify "),t("code",[e._v("<level>")]),e._v(", let the maximum level of the original time series be "),t("code",[e._v("L")]),e._v(",\nThen the result time series path generated by the system is "),t("code",[e._v("root.${1}. ... .${L-1}.<node_name>")]),e._v(".")])])])])])]),e._v(" "),t("h4",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),t("h5",{attrs:{id:"original-data"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#original-data"}},[e._v("#")]),e._v(" Original Data")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("+-----------------------------+-----+-------------+--------+--------+-----------+----+----------+\n|                   timeseries|alias|storage group|dataType|encoding|compression|tags|attributes|\n+-----------------------------+-----+-------------+--------+--------+-----------+----+----------+\n|root.ln.wf02.wt02.temperature| null|      root.ln|   FLOAT| GORILLA|     SNAPPY|null|      null|\n|root.ln.wf02.wt01.temperature| null|      root.ln|   FLOAT| GORILLA|     SNAPPY|null|      null|\n|root.ln.wf01.wt02.temperature| null|      root.ln|   FLOAT| GORILLA|     SNAPPY|null|      null|\n|root.ln.wf01.wt01.temperature| null|      root.ln|   FLOAT| GORILLA|     SNAPPY|null|      null|\n+-----------------------------+-----+-------------+--------+--------+-----------+----+----------+\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+\n|                         Time|root.ln.wf02.wt02.temperature|root.ln.wf02.wt01.temperature|root.ln.wf01.wt02.temperature|root.ln.wf01.wt01.temperature|\n+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+\n|2021-05-11T22:18:14.598+08:00|                        121.0|                         72.0|                        183.0|                        115.0|\n|2021-05-11T22:18:19.941+08:00|                          0.0|                         68.0|                         68.0|                        103.0|\n|2021-05-11T22:18:24.949+08:00|                        122.0|                         45.0|                         11.0|                         14.0|\n|2021-05-11T22:18:29.967+08:00|                         47.0|                         14.0|                         59.0|                        181.0|\n|2021-05-11T22:18:34.979+08:00|                        182.0|                        113.0|                         29.0|                        180.0|\n|2021-05-11T22:18:39.990+08:00|                         42.0|                         11.0|                         52.0|                         19.0|\n|2021-05-11T22:18:44.995+08:00|                         78.0|                         38.0|                        123.0|                         52.0|\n|2021-05-11T22:18:49.999+08:00|                        137.0|                        172.0|                        135.0|                        193.0|\n|2021-05-11T22:18:55.003+08:00|                         16.0|                        124.0|                        183.0|                         18.0|\n+-----------------------------+-----------------------------+-----------------------------+-----------------------------+-----------------------------+\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br")])]),t("h5",{attrs:{id:"result-time-series-path-configuration-example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#result-time-series-path-configuration-example"}},[e._v("#")]),e._v(" Result time series path configuration example")]),e._v(" "),t("p",[e._v("For the above original time series, if the user specifies that the query aggregation level is "),t("code",[e._v("2")]),e._v(", the aggregation function is "),t("code",[e._v("avg")]),e._v(",\nThe user can specify only the last node name of the generated time series in the "),t("code",[e._v("INTO")]),e._v(" clause. If the user specifies it as "),t("code",[e._v("temperature_avg")]),e._v(", the full path generated by the system will be "),t("code",[e._v("root.${1}.${2}.temperature_avg")]),e._v(" .\nThe user can also specify the full path in the "),t("code",[e._v("INTO")]),e._v(" clause, and the user can specify it as "),t("code",[e._v("root.${1}.${2}.temperature_avg")]),e._v(", "),t("code",[e._v("root.ln_cq.${2}.temperature_avg")]),e._v(", "),t("code",[e._v("root.${1}_cq.${2}.temperature_avg")]),e._v(", "),t("code",[e._v("root.${1}.${2}_cq.temperature_avg")]),e._v(" etc.,\nIt can also be specified as "),t("code",[e._v("root.${2}.${1}.temperature_avg")]),e._v(" and others as needed.\nIt should be noted that the "),t("code",[e._v("x")]),e._v(" in "),t("code",[e._v("${x}")]),e._v(" should be greater than or equal to "),t("code",[e._v("1")]),e._v(" and less than or equal to the value of "),t("code",[e._v("<level>")]),e._v("\n(If "),t("code",[e._v("<level>")]),e._v(" is not specified, it should be less than or equal to the length of "),t("code",[e._v("<path_prefix>")]),e._v("). In the above example, "),t("code",[e._v("x")]),e._v(" should be less than or equal to "),t("code",[e._v("2")]),e._v(".")]),e._v(" "),t("h5",{attrs:{id:"create-cq1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-cq1"}},[e._v("#")]),e._v(" Create "),t("code",[e._v("cq1")])]),e._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CREATE")]),e._v(" CONTINUOUS QUERY cq1 \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("BEGIN")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SELECT")]),e._v(" max_value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("temperature"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INTO")]),e._v(" temperature_max \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ln"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GROUP")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("BY")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("time")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("END")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("Query the maximum value of "),t("code",[e._v("root.ln.*.*.temperature")]),e._v(" in the previous 10s every 10s (the results are grouped by 10s),\nand the results will be written to "),t("code",[e._v("root.${1}.${2}.${3}.temperature_max")]),e._v(",\nAs a result, 4 new time series will be generated.")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("+---------------------------------+-----+-------------+--------+--------+-----------+----+----------+\n|                       timeseries|alias|storage group|dataType|encoding|compression|tags|attributes|\n+---------------------------------+-----+-------------+--------+--------+-----------+----+----------+\n|root.ln.wf02.wt02.temperature_max| null|      root.ln|   FLOAT| GORILLA|     SNAPPY|null|      null|\n|root.ln.wf02.wt01.temperature_max| null|      root.ln|   FLOAT| GORILLA|     SNAPPY|null|      null|\n|root.ln.wf01.wt02.temperature_max| null|      root.ln|   FLOAT| GORILLA|     SNAPPY|null|      null|\n|root.ln.wf01.wt01.temperature_max| null|      root.ln|   FLOAT| GORILLA|     SNAPPY|null|      null|\n+---------------------------------+-----+-------------+--------+--------+-----------+----+----------+\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+\n|                         Time|root.ln.wf02.wt02.temperature_max|root.ln.wf02.wt01.temperature_max|root.ln.wf01.wt02.temperature_max|root.ln.wf01.wt01.temperature_max|\n+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+\n|2021-05-11T22:18:16.964+08:00|                            122.0|                             68.0|                             68.0|                            103.0|\n|2021-05-11T22:18:26.964+08:00|                            182.0|                            113.0|                             59.0|                            181.0|\n|2021-05-11T22:18:36.964+08:00|                             78.0|                             38.0|                            123.0|                             52.0|\n|2021-05-11T22:18:46.964+08:00|                            137.0|                            172.0|                            183.0|                            193.0|\n+-----------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("h5",{attrs:{id:"create-cq2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-cq2"}},[e._v("#")]),e._v(" Create "),t("code",[e._v("cq2")])]),e._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CREATE")]),e._v(" CONTINUOUS QUERY cq2 \nRESAMPLE EVERY "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v("s "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FOR")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v("s \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("BEGIN")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SELECT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("avg")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("temperature"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INTO")]),e._v(" temperature_avg \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ln"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GROUP")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("BY")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("time")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("level")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("END")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("p",[e._v("Query the average value of "),t("code",[e._v("root.ln.*.*.temperature")]),e._v(" in the previous 20s every 20s (the results are grouped by 10s),\nand the results will be written to "),t("code",[e._v("root.${1}.${2}.temperature_avg")]),e._v(",\nAs a result, 2 new time series will be generated.\nAmong them, "),t("code",[e._v("root.ln.wf02.temperature_avg")]),e._v(" is generated by the aggregation calculation of "),t("code",[e._v("root.ln.wf02.wt02.temperature")]),e._v(" and "),t("code",[e._v("root.ln.wf02.wt01.temperature")]),e._v(",\nand "),t("code",[e._v("root.ln.wf01.temperature_avg")]),e._v(" is generated by the aggregation calculation of "),t("code",[e._v("root.ln.wf01.wt02.temperature")]),e._v(" and "),t("code",[e._v("root.ln.wf01.wt01.temperature")]),e._v(".")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("+----------------------------+-----+-------------+--------+--------+-----------+----+----------+\n|                  timeseries|alias|storage group|dataType|encoding|compression|tags|attributes|\n+----------------------------+-----+-------------+--------+--------+-----------+----+----------+\n|root.ln.wf02.temperature_avg| null|      root.ln|  DOUBLE| GORILLA|     SNAPPY|null|      null|\n|root.ln.wf01.temperature_avg| null|      root.ln|  DOUBLE| GORILLA|     SNAPPY|null|      null|\n+----------------------------+-----+-------------+--------+--------+-----------+----+----------+\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("+-----------------------------+----------------------------+----------------------------+\n|                         Time|root.ln.wf02.temperature_avg|root.ln.wf01.temperature_avg|\n+-----------------------------+----------------------------+----------------------------+\n|2021-05-11T22:18:16.969+08:00|                       58.75|                        49.0|\n|2021-05-11T22:18:26.969+08:00|                        89.0|                      112.25|\n|2021-05-11T22:18:36.969+08:00|                       42.25|                        61.5|\n|2021-05-11T22:18:46.969+08:00|                      112.25|                      132.25|\n+-----------------------------+----------------------------+----------------------------+\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("h5",{attrs:{id:"create-cq3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-cq3"}},[e._v("#")]),e._v(" Create "),t("code",[e._v("cq3")])]),e._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CREATE")]),e._v(" CONTINUOUS QUERY cq3 \nRESAMPLE EVERY "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v("s "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FOR")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v("s \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("BEGIN")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SELECT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("avg")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("temperature"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INTO")]),e._v(" root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ln_cq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("${"),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("}"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("temperature_avg \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ln"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GROUP")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("BY")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("time")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("level")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("END")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("p",[e._v("The query mode is the same as "),t("code",[e._v("cq2")]),e._v(",\nand the results will be written to "),t("code",[e._v("root.ln_cq.${2}.temperature_avg")]),e._v(".\nAs a result, 2 new time series will be generated.\nAmong them, "),t("code",[e._v("root.ln_cq.wf02.temperature_avg")]),e._v(" is generated by the aggregation calculation of "),t("code",[e._v("root.ln.wf02.wt02.temperature")]),e._v(" and "),t("code",[e._v("root.ln.wf02.wt01.temperature")]),e._v(",\nand "),t("code",[e._v("root.ln_cq.wf01.temperature_avg")]),e._v(" is generated by the aggregation calculation of "),t("code",[e._v("root.ln.wf01.wt02.temperature")]),e._v(" and "),t("code",[e._v("root.ln.wf01.wt01.temperature")]),e._v(".")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("+-------------------------------+-----+-------------+--------+--------+-----------+----+----------+\n|                     timeseries|alias|storage group|dataType|encoding|compression|tags|attributes|\n+-------------------------------+-----+-------------+--------+--------+-----------+----+----------+\n|root.ln_cq.wf02.temperature_avg| null|   root.ln_cq|  DOUBLE| GORILLA|     SNAPPY|null|      null|\n|root.ln_cq.wf01.temperature_avg| null|   root.ln_cq|  DOUBLE| GORILLA|     SNAPPY|null|      null|\n+-------------------------------+-----+-------------+--------+--------+-----------+----+----------+\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("+-----------------------------+-------------------------------+-------------------------------+\n|                         Time|root.ln_cq.wf02.temperature_avg|root.ln_cq.wf01.temperature_avg|\n+-----------------------------+-------------------------------+-------------------------------+\n|2021-05-11T22:18:16.971+08:00|                          58.75|                           49.0|\n|2021-05-11T22:18:26.971+08:00|                           89.0|                         112.25|\n|2021-05-11T22:18:36.971+08:00|                          42.25|                           61.5|\n|2021-05-11T22:18:46.971+08:00|                         112.25|                         132.25|\n+-----------------------------+-------------------------------+-------------------------------+\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("h5",{attrs:{id:"创建-cq4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建-cq4"}},[e._v("#")]),e._v(" 创建 "),t("code",[e._v("cq4")])]),e._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CREATE")]),e._v(" CONTINUOUS QUERY cq4 \nRESAMPLE EVERY "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v("s "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FOR")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("20")]),e._v("s BOUNDARY "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2022")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("01")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("14")]),e._v("T23:"),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("00")]),e._v(":"),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("00.000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("08")]),e._v(":"),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("00")]),e._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("BEGIN")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SELECT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("avg")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("temperature"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INTO")]),e._v(" root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ln_cq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("${"),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("}"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("temperature_avg \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("ln"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("GROUP")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("BY")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("time")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("level")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("END")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("This example is almost identical to creating cq3. The difference is that in this example the user specified "),t("code",[e._v("BOUNDARY 2022-01-14T23:00:00.000+08:00")]),e._v(".")]),e._v(" "),t("p",[e._v("Note that the first execution time of this CQ is later than the time in the example, so "),t("code",[e._v("2022-01-14T23:00:20.000+08:00")]),e._v(" is the first execution time. Recursively, "),t("code",[e._v("2022-01-14T23:00:40.000+08:00")]),e._v(" is the second execution moment, "),t("code",[e._v("2022-01-14T23:01:00.000+08:00")]),e._v(" is the third execution moment...")]),e._v(" "),t("p",[e._v("The SQL statement executed at the first execution moment is "),t("code",[e._v("select avg(temperature) from root.ln.*.* group by ([2022-01-14T23:00:00.000+08:00, 2022-01-14T23:00: 20.000+08:00), 10s), level = 2")]),e._v(".")]),e._v(" "),t("p",[e._v("The SQL statement executed at the second execution moment is "),t("code",[e._v("select avg(temperature) from root.ln.*.* group by ([2022-01-14T23:00:20.000+08:00, 2022-01-14T23:00: 40.000+08:00), 10s), level = 2")]),e._v(".")]),e._v(" "),t("p",[e._v("The SQL statement executed at the third execution moment is "),t("code",[e._v("select avg(temperature) from root.ln.*.* group by ([2022-01-14T23:00:40.000+08:00, 2022-01-14T23:01: 00.000+08:00), 10s), level = 2")]),e._v(".")]),e._v(" "),t("p",[e._v("...")]),e._v(" "),t("h3",{attrs:{id:"show-cq-information"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#show-cq-information"}},[e._v("#")]),e._v(" Show CQ Information")]),e._v(" "),t("h4",{attrs:{id:"syntax-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#syntax-2"}},[e._v("#")]),e._v(" Syntax")]),e._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SHOW")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("CONTINUOUS QUERIES "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" CQS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" \n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h4",{attrs:{id:"example-result"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example-result"}},[e._v("#")]),e._v(" Example Result")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("+-------+--------------+------------+-------------+----------------------------------------------------------------------------------------+-----------------------------------+\n|cq name|every interval|for interval|     boundary|                                                                               query sql|                        target path|\n+-------+--------------+------------+-------------+----------------------------------------------------------------------------------------+-----------------------------------+\n|    cq1|         10000|       10000|1642166102238|     select max_value(temperature) from root.ln.*.* group by ([now() - 10s, now()), 10s)|root.${1}.${2}.${3}.temperature_max|\n|    cq3|         20000|       20000|1642166118339|select avg(temperature) from root.ln.*.* group by ([now() - 20s, now()), 10s), level = 2|    root.ln_cq.${2}.temperature_avg|\n|    cq2|         20000|       20000|1642166111493|select avg(temperature) from root.ln.*.* group by ([now() - 20s, now()), 10s), level = 2|     root.${1}.${2}.temperature_avg|\n|    cq4|         20000|       20000|1642172400000|select avg(temperature) from root.ln.*.* group by ([now() - 20s, now()), 10s), level = 2|    root.ln_cq.${2}.temperature_avg|\n+-------+--------------+------------+-------------+----------------------------------------------------------------------------------------+-----------------------------------+\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("h3",{attrs:{id:"drop-cq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#drop-cq"}},[e._v("#")]),e._v(" Drop CQ")]),e._v(" "),t("h4",{attrs:{id:"syntax-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#syntax-3"}},[e._v("#")]),e._v(" Syntax")]),e._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("DROP")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("CONTINUOUS QUERY "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" CQ"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("cq_id"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" \n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h4",{attrs:{id:"example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" Example")]),e._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("DROP")]),e._v(" CONTINUOUS QUERY cq3\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("DROP")]),e._v(" CQ cq3\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"system-parameter-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#system-parameter-configuration"}},[e._v("#")]),e._v(" System Parameter Configuration")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[e._v("Name")]),e._v(" "),t("th",[e._v("Description")]),e._v(" "),t("th",[e._v("Data Type")]),e._v(" "),t("th",[e._v("Default Value")])])]),e._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[e._v("continuous_query_execution_thread")])]),e._v(" "),t("td",[e._v("The number of threads in the thread pool that executes continuous query tasks")]),e._v(" "),t("td",[e._v("int")]),e._v(" "),t("td",[e._v("max(1, CPU core number / 2)")])]),e._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[e._v("max_pending_continuous_query_tasks")])]),e._v(" "),t("td",[e._v("The maximum number of continuous query tasks pending in queue")]),e._v(" "),t("td",[e._v("int")]),e._v(" "),t("td",[e._v("64")])]),e._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[e._v("continuous_query_min_every_interval")])]),e._v(" "),t("td",[e._v("The minimum value of the continuous query execution time interval")]),e._v(" "),t("td",[e._v("duration")]),e._v(" "),t("td",[e._v("1s")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);