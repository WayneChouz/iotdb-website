(window.webpackJsonp=window.webpackJsonp||[]).push([[506],{912:function(e,a,t){"use strict";t.r(a);var s=t(19),o=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"background"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#background"}},[e._v("#")]),e._v(" Background")]),e._v(" "),a("p",[e._v('The database is specified by the user display.\nUse the statement "CREATE DATABASE" to create the database.\nEach database has a corresponding StorageGroupProcessor.')]),e._v(" "),a("p",[e._v("To ensure eventually consistency, a insert lock (exclusive lock) is used to synchronize each insert request in each database.\nSo the server side parallelism of data ingestion is equal to the number of database.")]),e._v(" "),a("h1",{attrs:{id:"problem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#problem"}},[e._v("#")]),e._v(" Problem")]),e._v(" "),a("p",[e._v("From background, we can infer that the parallelism of data ingestion of IoTDB is max(num of client, server side parallelism), which equals to max(num of client, num of database)")]),e._v(" "),a("p",[e._v("The concept of database usually is related to real world entity such as factory, location, country and so on.\nThe number of databases may be small which makes the parallelism of data ingestion of IoTDB insufficient. We can't jump out of this dilemma even we start hundreds of client for ingestion.")]),e._v(" "),a("h1",{attrs:{id:"solution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solution"}},[e._v("#")]),e._v(" Solution")]),e._v(" "),a("p",[e._v("Our idea is to group devices into buckets and change the granularity of synchronization from database level to device buckets level.")]),e._v(" "),a("p",[e._v('In detail, we use hash to group different devices into buckets called data region.\nFor example, one device called "root.sg.d"(assume it\'s database is "root.sg") is belonged to data region "root.sg.[hash("root.sg.d") mod num_of_data_region]"')]),e._v(" "),a("h1",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[e._v("#")]),e._v(" Usage")]),e._v(" "),a("p",[e._v("To use data region, you can set this config below:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("data_region_num\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("Recommended value is [data region number] = [CPU core number] / [user-defined database number]")]),e._v(" "),a("p",[e._v("For more information, you can refer to "),a("RouterLink",{attrs:{to:"/UserGuide/V1.0.x/Reference/DataNode-Config-Manual.html"}},[e._v("this page")]),e._v(".")],1)])}),[],!1,null,null,null);a.default=o.exports}}]);