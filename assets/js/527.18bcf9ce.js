(window.webpackJsonp=window.webpackJsonp||[]).push([[527],{929:function(t,s,a){"use strict";a.r(s);var e=a(29),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"查询补空值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询补空值"}},[t._v("#")]),t._v(" 查询补空值")]),t._v(" "),s("p",[t._v("当执行一些查询时，结果集的某行某列可能没有数据，则此位置结果为空，但这种空值不利于进行数据可视化展示和分析，需要对空值进行填补。")]),t._v(" "),s("p",[t._v("查询补空值允许用户按照特定的方法对任何查询的结果填充空值，如取前一个不为空的值，或线性插值。补空值之后的查询结果能更好地反映数据分布，有利于用户进行数据分析。")]),t._v(" "),s("p",[t._v("在 IoTDB 中，用户可以使用 FILL 子句指定数据缺失的情况下的填充模式。如果查询点不为空，则填充功能将不起作用。")]),t._v(" "),s("h2",{attrs:{id:"填充方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#填充方法"}},[t._v("#")]),t._v(" 填充方法")]),t._v(" "),s("p",[t._v("IoTDB 目前支持  "),s("code",[t._v("previous")]),t._v(" , "),s("code",[t._v("linear")]),t._v(",  "),s("code",[t._v("value")]),t._v(" 三种空值填充方式，数据类型和支持的填充方法如下表所示：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("数据类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("支持的填充方法")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("boolean")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("previous, value")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("int32")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("previous, linear, value")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("int64")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("previous, linear, value")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("previous, linear, value")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("previous, linear, value")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("text")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("previous, value")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：在 Fill 语句中只能指定一种填充方法。空值填充不兼容 0.13 版本及以前的语法（即 fill((<data_type>[<fill_method>(, <before_range>, <after_range>)?])+)）")])]),t._v(" "),s("h3",{attrs:{id:"previous-填充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#previous-填充"}},[t._v("#")]),t._v(" Previous 填充")]),t._v(" "),s("p",[t._v("当查询的时间戳下数据为空时，将使用前一个时间戳的值来填充空白。 语法定义如下：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("fill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("previous"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("在这里，我们举一个使用 Previous 方法填充空值的示例。 SQL 语句如下：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" temperature"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("status")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sgcc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wf03"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wt01 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v("T16:"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("37")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00.000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v("T16:"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00.000")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("如果我们不使用任何填充方式，原始的查询结果如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+-----------------------------+-------------------------------+--------------------------+\n|                         Time|root.sgcc.wf03.wt01.temperature|root.sgcc.wf03.wt01.status|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:37:00.000+08:00|                          21.93|                      true|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:38:00.000+08:00|                           null|                     false|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:39:00.000+08:00|                          22.23|                      null|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:40:00.000+08:00|                          23.43|                      null|\n+-----------------------------+-------------------------------+--------------------------+\nTotal line number = 4\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("如果我们使用previous填充， SQL 语句如下：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" temperature "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sgcc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wf03"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wt01 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v("T16:"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("37")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00.000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v("T16:"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00.000")]),t._v(" fill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("previous"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("previous填充后的结果如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+-----------------------------+-------------------------------+--------------------------+\n|                         Time|root.sgcc.wf03.wt01.temperature|root.sgcc.wf03.wt01.status|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:37:00.000+08:00|                          21.93|                      true|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:38:00.000+08:00|                          21.93|                     false|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:39:00.000+08:00|                          22.23|                     false|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:40:00.000+08:00|                          23.43|                     false|\n+-----------------------------+-------------------------------+--------------------------+\nTotal line number = 4\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("blockquote",[s("p",[t._v("注意：如果结果集的某一列第一个值就位空，那我们不会填充这一列，直到遇到这一列第一个不为空的值为止。")])]),t._v(" "),s("h3",{attrs:{id:"linear-填充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linear-填充"}},[t._v("#")]),t._v(" Linear 填充")]),t._v(" "),s("p",[t._v("当查询的时间戳下数据为空时，将使用前一个和下一个时间戳的值来填充空白。 语法定义如下：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("fill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("linear"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("在这里，我们举一个使用线性方法填充空值的示例。 SQL 语句如下：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" temperature "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sgcc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wf03"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wt01 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v("T16:"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("37")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00.000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v("T16:"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00.000")]),t._v(" fill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("linear"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("线性填充后的结果如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+-----------------------------+-------------------------------+--------------------------+\n|                         Time|root.sgcc.wf03.wt01.temperature|root.sgcc.wf03.wt01.status|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:37:00.000+08:00|                          21.93|                      true|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:38:00.000+08:00|                          22.08|                     false|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:39:00.000+08:00|                          22.23|                      null|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:40:00.000+08:00|                          23.43|                      null|\n+-----------------------------+-------------------------------+--------------------------+\nTotal line number = 4\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("blockquote",[s("p",[t._v("注意：如果某个值之前的所有值都为空，或者某个值之后的所有值都为空，我们不会填充该值。\n注意：如果某列的数据类型为boolean/text，我们既不会填充它，也不会报错，只是让那一列保持原样。")])]),t._v(" "),s("h3",{attrs:{id:"value-填充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#value-填充"}},[t._v("#")]),t._v(" Value 填充")]),t._v(" "),s("p",[t._v("当查询的时间戳下数据为空时，将使用给定的值来填充空白。语法定义如下：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" temperature "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sgcc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wf03"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wt01 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v("T16:"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("37")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50.000")]),t._v(" fill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("使用float类型的常量填充后的结果如下:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+-----------------------------+-------------------------------+--------------------------+\n|                         Time|root.sgcc.wf03.wt01.temperature|root.sgcc.wf03.wt01.status|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:37:00.000+08:00|                          21.93|                      true|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:38:00.000+08:00|                            2.0|                     false|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:39:00.000+08:00|                          22.23|                      null|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:40:00.000+08:00|                          23.43|                      null|\n+-----------------------------+-------------------------------+--------------------------+\nTotal line number = 4\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" temperature "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sgcc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wf03"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wt01 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v("T16:"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("37")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50.000")]),t._v(" fill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("使用boolean类型的常量填充后的结果如下:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+-----------------------------+-------------------------------+--------------------------+\n|                         Time|root.sgcc.wf03.wt01.temperature|root.sgcc.wf03.wt01.status|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:37:00.000+08:00|                          21.93|                      true|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:38:00.000+08:00|                           null|                     false|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:39:00.000+08:00|                          22.23|                      true|\n+-----------------------------+-------------------------------+--------------------------+\n|2017-11-01T16:40:00.000+08:00|                          23.43|                      true|\n+-----------------------------+-------------------------------+--------------------------+\nTotal line number = 4\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("blockquote",[s("p",[t._v("注意：当我们使用常量填充时，如果某列数据类型与常量类型不兼容，我们既不填充该列，也不报错，将该列保持原样。\n注意：当常量值大于int32所能表示的最大值时，对于int32类型的列，我们既不填充该列，也不报错，将该列保持原样。")])]),t._v(" "),s("h4",{attrs:{id:"常量类型兼容性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量类型兼容性"}},[t._v("#")]),t._v(" 常量类型兼容性")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("常量类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("能够填充的数据类型")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("boolean")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("boolean, text")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("int64")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("int32, int64, float, double, text")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("float, double, text")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("text")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("text")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}})])])])])}),[],!1,null,null,null);s.default=n.exports}}]);