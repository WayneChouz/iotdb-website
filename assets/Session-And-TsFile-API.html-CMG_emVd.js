import{_ as a,c as n,b as e,o as l}from"./app-Dhp4U5dR.js";const o={};function t(p,s){return l(),n("div",null,s[0]||(s[0]=[e('<h1 id="session-and-tsfile-api" tabindex="-1"><a class="header-anchor" href="#session-and-tsfile-api"><span>Session And TsFile API</span></a></h1><p>When using the Session and TsFile APIs, if the method you call requires parameters such as measurement, device, database, path in the form of String, <strong>please ensure that the parameters passed in the input string is the same as when using the SQL statement</strong>, here are some examples to help you understand. Code example could be found at: <code>example/session/src/main/java/org/apache/iotdb/SyntaxConventionRelatedExample.java</code></p><ol><li>Take creating a time series createTimeseries as an example:</li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> createTimeseries</span><span style="color:#E06C75;">(</span></span>\n<span class="line"><span style="color:#E5C07B;">    String</span><span style="color:#E06C75;"> path</span><span style="color:#ABB2BF;">,</span></span>\n<span class="line"><span style="color:#E5C07B;">    TSDataType</span><span style="color:#E06C75;"> dataType</span><span style="color:#ABB2BF;">,</span></span>\n<span class="line"><span style="color:#E5C07B;">    TSEncoding</span><span style="color:#E06C75;"> encoding</span><span style="color:#ABB2BF;">,</span></span>\n<span class="line"><span style="color:#E5C07B;">    CompressionType</span><span style="color:#E06C75;"> compressor)</span></span>\n<span class="line"><span style="color:#E06C75;">    throws IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> StatementExecutionException</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you wish to create the time series<code>root.sg.a, root.sg.`a.``&quot;b`, root.sg.`111`</code>, the SQL statement you use should look like this:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">create</span><span style="color:#ABB2BF;"> timeseries </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span><span style="color:#ABB2BF;">.a </span><span style="color:#C678DD;">with</span><span style="color:#ABB2BF;"> datatype</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">FLOAT</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">encoding</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">PLAIN,compressor</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">SNAPPY;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF;"># node names contain special characters, each node </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> the </span><span style="color:#C678DD;">time</span><span style="color:#ABB2BF;"> series </span><span style="color:#C678DD;">is</span><span style="color:#E06C75;"> [&quot;root&quot;,&quot;sg&quot;,&quot;a.`\\&quot;b&quot;]</span></span>\n<span class="line"><span style="color:#C678DD;">create</span><span style="color:#ABB2BF;"> timeseries </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span><span style="color:#ABB2BF;">.</span><span style="color:#98C379;">`a.``&quot;b`</span><span style="color:#C678DD;"> with</span><span style="color:#ABB2BF;"> datatype</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">FLOAT</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">encoding</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">PLAIN,compressor</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">SNAPPY;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF;"># node names are pure numbers</span></span>\n<span class="line"><span style="color:#C678DD;">create</span><span style="color:#ABB2BF;"> timeseries </span><span style="color:#D19A66;">root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span><span style="color:#ABB2BF;">.</span><span style="color:#98C379;">`111`</span><span style="color:#C678DD;"> with</span><span style="color:#ABB2BF;"> datatype</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">FLOAT</span><span style="color:#ABB2BF;">,</span><span style="color:#C678DD;">encoding</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">PLAIN,compressor</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">SNAPPY;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When you call the createTimeseries method, you should assign the path string as follows to ensure that the content of the path string is the same as when using SQL:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// timeseries root.sg.a</span></span>\n<span class="line"><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> path </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;root.sg.a&quot;</span><span style="color:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">// timeseries root.sg.`a``&quot;b`</span></span>\n<span class="line"><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> path </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;root.sg.`a``</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">b`&quot;</span><span style="color:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">// timeseries root.sg.`111`</span></span>\n<span class="line"><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> path </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;root.sg.`111`&quot;</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Take inserting data insertRecord as an example:</li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#C678DD;"> void</span><span style="color:#61AFEF;"> insertRecord</span><span style="color:#E06C75;">(</span></span>\n<span class="line"><span style="color:#E5C07B;">    String</span><span style="color:#E06C75;"> deviceId</span><span style="color:#ABB2BF;">,</span></span>\n<span class="line"><span style="color:#C678DD;">    long</span><span style="color:#E06C75;"> time</span><span style="color:#ABB2BF;">,</span></span>\n<span class="line"><span style="color:#E5C07B;">    List</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">String</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> measurements</span><span style="color:#ABB2BF;">,</span></span>\n<span class="line"><span style="color:#E5C07B;">    List</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">TSDataType</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> types</span><span style="color:#ABB2BF;">,</span></span>\n<span class="line"><span style="color:#E5C07B;">    Object</span><span style="color:#ABB2BF;">...</span><span style="color:#E5C07B;"> values</span><span style="color:#E06C75;">)</span></span>\n<span class="line"><span style="color:#E06C75;">    throws IoTDBConnectionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> StatementExecutionException</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you want to insert data into the time series <code>root.sg.a, root.sg.`a.``&quot;b` , root.sg.`111`</code>, the SQL statement you use should be as follows:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">insert into</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">timestamp</span><span style="color:#ABB2BF;">, a, </span><span style="color:#98C379;">`a.``&quot;b`</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">`111`</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">values</span><span style="color:#ABB2BF;"> (</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>When you call the insertRecord method, you should assign deviceId and measurements as follows:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// deviceId is root.sg</span></span>\n<span class="line"><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> deviceId </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;root.sg&quot;</span><span style="color:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#7F848E;font-style:italic;">// measurements</span></span>\n<span class="line"><span style="color:#E5C07B;">String</span><span style="color:#E06C75;">[] measurements </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;">[]{</span><span style="color:#98C379;">&quot;a&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;`a.``</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">b`&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;`111`&quot;</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">;</span></span>\n<span class="line"><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> measurementList </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> Arrays</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">asList</span><span style="color:#ABB2BF;">(measurements);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Take executeRawDataQuery as an example:</li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">public</span><span style="color:#E5C07B;"> SessionDataSet</span><span style="color:#61AFEF;"> executeRawDataQuery</span><span style="color:#E06C75;">(</span></span>\n<span class="line"><span style="color:#E5C07B;">    List</span><span style="color:#56B6C2;">&lt;</span><span style="color:#E06C75;">String</span><span style="color:#56B6C2;">&gt;</span><span style="color:#E06C75;"> paths</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span></span>\n<span class="line"><span style="color:#C678DD;">    long</span><span style="color:#E06C75;"> startTime</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> </span></span>\n<span class="line"><span style="color:#C678DD;">    long</span><span style="color:#E06C75;"> endTime)</span></span>\n<span class="line"><span style="color:#E06C75;">    throws StatementExecutionException</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;"> IoTDBConnectionException</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you wish to query the data of the time series <code>root.sg.a, root.sg.`a.``&quot;b`, root.sg.`111`</code>, the SQL statement you use should be as follows :</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> a </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF;"># node </span><span style="color:#C678DD;">name</span><span style="color:#ABB2BF;"> contains special characters</span></span>\n<span class="line"><span style="color:#C678DD;">select</span><span style="color:#98C379;"> `a.``&quot;b`</span><span style="color:#C678DD;"> from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span><span style="color:#ABB2BF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF;"># node names are pure numbers</span></span>\n<span class="line"><span style="color:#C678DD;">select</span><span style="color:#98C379;"> `111`</span><span style="color:#C678DD;"> from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">sg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When you call the executeRawDataQuery method, you should assign paths as follows:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// paths</span></span>\n<span class="line"><span style="color:#E5C07B;">String</span><span style="color:#E06C75;">[] paths </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> String</span><span style="color:#E06C75;">[]{</span><span style="color:#98C379;">&quot;root.sg.a&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;root.sg.`a.``</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">b`&quot;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;"> &quot;root.sg.`111`&quot;</span><span style="color:#E06C75;">}</span><span style="color:#ABB2BF;">;</span></span>\n<span class="line"><span style="color:#E5C07B;">List</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">String</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#E06C75;"> pathList </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> Arrays</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">asList</span><span style="color:#ABB2BF;">(paths);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',20)]))}const i=a(o,[["render",t],["__file","Session-And-TsFile-API.html.vue"]]),c=JSON.parse('{"path":"/UserGuide/V1.1.x/Syntax-Conventions/Session-And-TsFile-API.html","title":"Session And TsFile API","lang":"en-US","frontmatter":{"description":"Session And TsFile API When using the Session and TsFile APIs, if the method you call requires parameters such as measurement, device, database, path in the form of String, plea...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://iotdb.apache.org/zh/UserGuide/V1.1.x/Syntax-Conventions/Session-And-TsFile-API.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/UserGuide/V1.1.x/Syntax-Conventions/Session-And-TsFile-API.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"Session And TsFile API"}],["meta",{"property":"og:description","content":"Session And TsFile API When using the Session and TsFile APIs, if the method you call requires parameters such as measurement, device, database, path in the form of String, plea..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-28T10:43:40.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-28T10:43:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Session And TsFile API\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-28T10:43:40.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1688958677000,"updatedTime":1690541020000,"contributors":[{"name":"wanghui42","username":"wanghui42","email":"105700158+wanghui42@users.noreply.github.com","commits":1,"url":"https://github.com/wanghui42"},{"name":"CritasWang","username":"CritasWang","email":"critas@outlook.com","commits":1,"url":"https://github.com/CritasWang"}]},"readingTime":{"minutes":1.79,"words":538},"filePathRelative":"UserGuide/V1.1.x/Syntax-Conventions/Session-And-TsFile-API.md","localizedDate":"July 10, 2023","autoDesc":true}');export{i as comp,c as data};
