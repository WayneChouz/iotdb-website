import{_ as s,r as n,o as r,c as l,b as e,d as t,a as o,e as a}from"./app-_bV9ooEj.js";const c={},d=e("h1",{id:"howto-submit-code",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#howto-submit-code"},[e("span",null,"Howto Submit Code")])],-1),u=e("h2",{id:"contribution",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contribution"},[e("span",null,"Contribution")])],-1),p=e("p",null,"IoTDB invites developers to participate in the construction of open source projects",-1),h={href:"https://issues.apache.org/jira/projects/IOTDB/issues",target:"_blank",rel:"noopener noreferrer"},m=e("p",null,"After submitting the pr, after passing the Travis-CI test and Sonar code quality inspection, at least one Committer agrees and the code does not conflict, you can merge",-1),g=e("h2",{id:"pr-guide",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pr-guide"},[e("span",null,"PR guide")])],-1),b={href:"https://help.github.com/articles/about-pull-requests/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/apache/iotdb",target:"_blank",rel:"noopener noreferrer"},f=e("h3",{id:"fork-repository",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fork-repository"},[e("span",null,"Fork repository")])],-1),x={href:"https://github.com/apache/iotdb",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,"Fork",-1),y=a(`<figure><img src="https://user-images.githubusercontent.com/37333508/79351839-bd288900-7f6b-11ea-8d12-feb18c35adad.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="setup-local-repository" tabindex="-1"><a class="header-anchor" href="#setup-local-repository"><span>Setup local repository</span></a></h3><ul><li>Clone the source code to local machine:</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>git clone https://github.com/&lt;your_github_name&gt;/iotdb.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Note: substitute &lt;your_github_name&gt; with your github username.</strong></p><p>After the clone is done, the origin remote will point to the default branch of the cloned repository.</p><ul><li>add apache/iotdb as upstream remote:</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>cd  iotdb
git remote add upstream https://github.com/apache/iotdb.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Check the local repository’s remotes</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>git remote -v
origin https://github.com/&lt;your_github_name&gt;/iotdb.git (fetch)
origin    https://github.com/&lt;your_github_name&gt;/iotdb.git(push)
upstream  https://github.com/apache/iotdb.git (fetch)
upstream  https://github.com/apache/iotdb.git (push)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Create a new branch to start working：(e.g. fix)</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>git checkout -b fix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You can make code changes after creation.</p><ul><li>Push the changes to a remote repository：(e.g. fix)</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>git commit -a -m &quot;&lt;you_commit_message&gt;&quot;
git push origin fix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,15),k={href:"https://www.atlassian.com/git/tutorials/setting-up-a-repository",target:"_blank",rel:"noopener noreferrer"},w=a('<h3 id="submission-considerations" tabindex="-1"><a class="header-anchor" href="#submission-considerations"><span>Submission Considerations</span></a></h3><p>When submitting code on git, you should pay attention to:</p><ul><li><p>Keep the repository clean:</p><ul><li><p>Do not submit binary files, so that the size of the repository only increases due to changes in the code.</p></li><li><p>Do not submit generated code.</p></li></ul></li><li><p>The log should have meaning:</p><ul><li><p>Title is jira numbered: [IOTDB-jira number]</p></li><li><p>Title is the issue number of GitHub: [ISSUE-issue number]</p><ul><li>Write #XXXX in the content for association.</li></ul></li></ul></li></ul><h3 id="create-pr" tabindex="-1"><a class="header-anchor" href="#create-pr"><span>Create PR</span></a></h3>',4),C=e("code",null,"New pull request",-1),T=e("code",null,"Create pull request",-1),S={href:"https://issues.apache.org/jira/projects/IOTDB/issues",target:"_blank",rel:"noopener noreferrer"},j=e("figure",null,[e("img",{src:"https://user-images.githubusercontent.com/37333508/79414865-5f815480-7fde-11ea-800c-47c7dbad7648.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),D={href:"https://help.github.com/categories/collaborating-with-issues-and-pull-requests/",target:"_blank",rel:"noopener noreferrer"},I=a(`<h3 id="resolve-conflicts" tabindex="-1"><a class="header-anchor" href="#resolve-conflicts"><span>Resolve conflicts</span></a></h3><p>When a same piece of file is edited by multiple person simultaneously, conflicts can occur. It can be resolved as follow:</p><p>1：Switch to the master branch</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>git checkout master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2：Pull the upstream’s master branch</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>git pull upstream master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3：Switch back to the branch we are working on(e.g. fix)</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>git checkout fix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>4：Rebase the working branch onto the master branch</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>git rebase -i master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A list of commits will be listed on your text editor. Normally we can just save and exit. Git will now apply the commits one by one onto the master branch until it encounters a conflict. When this happens, the rebase process is paused. We need to resolve the conflicts, then execute</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>git add .
git rebase --continue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Repeat this process until all commits are successfully applied. And finally run</p><p>5：to push the resolved branch to remote origin</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>git push -f origin fix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15),R={href:"http://servicecomb.apache.org/developers/submit-codes/",target:"_blank",rel:"noopener noreferrer"};function H(B,P){const i=n("ExternalLinkIcon");return r(),l("div",null,[d,u,p,e("p",null,[t("You can check "),e("a",h,[t("issues"),o(i)]),t(" and participate in the resolution, or make other improvements.")]),m,g,e("p",null,[t("You can easily submit "),e("a",b,[t("Pull Request (PR)"),o(i)]),t(" on Github, the following will use this website project "),e("a",v,[t("apache/iotdb"),o(i)]),t(" as an example (if it is another project, please replace the project name iotdb)")]),f,e("p",null,[t("Visit the apache/iotdb project’s "),e("a",x,[t("github page"),o(i)]),t(", click "),_,t(" button on the right left cornor.")]),y,e("p",null,[t("For more on git usages, please visit"),e("a",k,[t("Git tutorial"),o(i)]),t(".")]),w,e("p",null,[t("Goto your github page, find the apache/servicecomb-website project, swich to the branch you just pushed, click on "),C,t(" and then "),T,t(", see the image below:If you solve the "),e("a",S,[t("issues"),o(i)]),t(", you need to add [IOTDB-xxx] at the beginning，see the image below:")]),j,e("p",null,[t("Congrautulations, now you have succesfully submitted a PR. For more on PR, please read "),e("a",D,[t("collaborating-with-issues-and-pull-requests"),o(i)])]),I,e("p",null,[t("The code of conduct is derived from"),e("a",R,[t("Apache ServiceComb"),o(i)])])])}const N=s(c,[["render",H],["__file","HowToCommit.html.vue"]]),W=JSON.parse('{"path":"/Development/HowToCommit.html","title":"Howto Submit Code","lang":"en-US","frontmatter":{"description":"Howto Submit Code Contribution IoTDB invites developers to participate in the construction of open source projects You can check issues and participate in the resolution, or mak...","head":[["meta",{"property":"og:url","content":"https://iotdb.apache.org/Development/HowToCommit.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"Howto Submit Code"}],["meta",{"property":"og:description","content":"Howto Submit Code Contribution IoTDB invites developers to participate in the construction of open source projects You can check issues and participate in the resolution, or mak..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://user-images.githubusercontent.com/37333508/79351839-bd288900-7f6b-11ea-8d12-feb18c35adad.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-07-10T03:11:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-10T03:11:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Howto Submit Code\\",\\"image\\":[\\"https://user-images.githubusercontent.com/37333508/79351839-bd288900-7f6b-11ea-8d12-feb18c35adad.png\\",\\"https://user-images.githubusercontent.com/37333508/79414865-5f815480-7fde-11ea-800c-47c7dbad7648.png\\"],\\"dateModified\\":\\"2023-07-10T03:11:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Contribution","slug":"contribution","link":"#contribution","children":[]},{"level":2,"title":"PR guide","slug":"pr-guide","link":"#pr-guide","children":[{"level":3,"title":"Fork repository","slug":"fork-repository","link":"#fork-repository","children":[]},{"level":3,"title":"Setup local repository","slug":"setup-local-repository","link":"#setup-local-repository","children":[]},{"level":3,"title":"Submission Considerations","slug":"submission-considerations","link":"#submission-considerations","children":[]},{"level":3,"title":"Create PR","slug":"create-pr","link":"#create-pr","children":[]},{"level":3,"title":"Resolve conflicts","slug":"resolve-conflicts","link":"#resolve-conflicts","children":[]}]}],"git":{"createdTime":1688958677000,"updatedTime":1688958677000,"contributors":[{"name":"CritasWang","email":"critas@outlook.com","commits":1}]},"readingTime":{"minutes":2.33,"words":700},"filePathRelative":"Development/HowToCommit.md","localizedDate":"July 10, 2023","autoDesc":true}');export{N as comp,W as data};
