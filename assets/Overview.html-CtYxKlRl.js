import{_ as i,c as t,b as o,d as n,e as l,a as e,f as p,r,o as d}from"./app-BYaFSWl1.js";const c={};function u(y,s){const a=r("RouteLink");return d(),t("div",null,[s[61]||(s[61]=o(`<h1 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h1><p>在 IoTDB 中，使用 <code>SELECT</code> 语句从一条或多条时间序列中查询数据。</p><h2 id="语法定义" tabindex="-1"><a class="header-anchor" href="#语法定义"><span>语法定义</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">SELECT</span><span style="color:#E06C75;"> [LAST]</span><span style="color:#ABB2BF;"> selectExpr </span><span style="color:#E06C75;">[, selectExpr]</span><span style="color:#ABB2BF;"> ...</span></span>
<span class="line"><span style="color:#E06C75;">    [INTO intoItem [, intoItem]</span><span style="color:#ABB2BF;"> ...]</span></span>
<span class="line"><span style="color:#C678DD;">    FROM</span><span style="color:#ABB2BF;"> prefixPath </span><span style="color:#E06C75;">[, prefixPath]</span><span style="color:#ABB2BF;"> ...</span></span>
<span class="line"><span style="color:#E06C75;">    [WHERE whereCondition]</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#C678DD;">GROUP BY</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        (</span><span style="color:#E06C75;">[startTime, endTime), interval [, slidingStep]</span><span style="color:#ABB2BF;">) |</span></span>
<span class="line"><span style="color:#C678DD;">        LEVEL</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> levelNum </span><span style="color:#E06C75;">[, levelNum]</span><span style="color:#ABB2BF;"> ... |</span></span>
<span class="line"><span style="color:#ABB2BF;">        TAGS(tagKey </span><span style="color:#E06C75;">[, tagKey]</span><span style="color:#ABB2BF;"> ... )</span></span>
<span class="line"><span style="color:#ABB2BF;">    }]</span></span>
<span class="line"><span style="color:#E06C75;">    [HAVING havingCondition]</span></span>
<span class="line"><span style="color:#E06C75;">    [ORDER BY sortKey {ASC | DESC}]</span></span>
<span class="line"><span style="color:#E06C75;">    [FILL ({PREVIOUS | LINEAR | constant})]</span></span>
<span class="line"><span style="color:#E06C75;">    [SLIMIT seriesLimit]</span><span style="color:#E06C75;"> [SOFFSET seriesOffset]</span></span>
<span class="line"><span style="color:#E06C75;">    [LIMIT rowLimit]</span><span style="color:#E06C75;"> [OFFSET rowOffset]</span></span>
<span class="line"><span style="color:#E06C75;">    [ALIGN BY {TIME | DEVICE}]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="语法说明" tabindex="-1"><a class="header-anchor" href="#语法说明"><span>语法说明</span></a></h2><h3 id="select-子句" tabindex="-1"><a class="header-anchor" href="#select-子句"><span><code>SELECT</code> 子句</span></a></h3>`,6)),n("ul",null,[s[10]||(s[10]=n("li",null,[n("code",null,"SELECT"),l(" 子句指定查询的输出，由若干个 "),n("code",null,"selectExpr"),l(" 组成。")],-1)),s[11]||(s[11]=n("li",null,[l("每个 "),n("code",null,"selectExpr"),l(" 定义查询结果中的一列或多列，它是一个由时间序列路径后缀、常量、函数和运算符组成的表达式。")],-1)),s[12]||(s[12]=n("li",null,[l("支持使用"),n("code",null,"AS"),l("为查询结果集中的列指定别名。")],-1)),n("li",null,[s[1]||(s[1]=l("在 ")),s[2]||(s[2]=n("code",null,"SELECT",-1)),s[3]||(s[3]=l(" 子句中使用 ")),s[4]||(s[4]=n("code",null,"LAST",-1)),s[5]||(s[5]=l(" 关键词可以指定查询为最新点查询，详细说明及示例见文档 ")),e(a,{to:"/zh/UserGuide/V1.0.x/Query-Data/Last-Query.html"},{default:p(()=>s[0]||(s[0]=[l("最新点查询")])),_:1}),s[6]||(s[6]=l(" 。"))]),n("li",null,[s[8]||(s[8]=l("详细说明及示例见文档 ")),e(a,{to:"/zh/UserGuide/V1.0.x/Query-Data/Select-Expression.html"},{default:p(()=>s[7]||(s[7]=[l("选择表达式")])),_:1}),s[9]||(s[9]=l(" 。"))])]),s[62]||(s[62]=n("h3",{id:"into-子句",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#into-子句"},[n("span",null,[n("code",null,"INTO"),l(" 子句")])])],-1)),n("ul",null,[s[16]||(s[16]=n("li",null,[n("code",null,"SELECT INTO"),l(" 用于将查询结果写入一系列指定的时间序列中。"),n("code",null,"INTO"),l(" 子句指定了查询结果写入的目标时间序列。")],-1)),n("li",null,[s[14]||(s[14]=l("详细说明及示例见文档 ")),e(a,{to:"/zh/UserGuide/V1.0.x/Query-Data/Select-Into.html"},{default:p(()=>s[13]||(s[13]=[l("SELECT INTO（查询写回）")])),_:1}),s[15]||(s[15]=l(" 。"))])]),s[63]||(s[63]=o('<h3 id="from-子句" tabindex="-1"><a class="header-anchor" href="#from-子句"><span><code>FROM</code> 子句</span></a></h3><ul><li><code>FROM</code> 子句包含要查询的一个或多个时间序列的路径前缀，支持使用通配符。</li><li>在执行查询时，会将 <code>FROM</code> 子句中的路径前缀和 <code>SELECT</code> 子句中的后缀进行拼接得到完整的查询目标序列。</li></ul><h3 id="where-子句" tabindex="-1"><a class="header-anchor" href="#where-子句"><span><code>WHERE</code> 子句</span></a></h3>',3)),n("ul",null,[s[20]||(s[20]=n("li",null,[n("code",null,"WHERE"),l(" 子句指定了对数据行的筛选条件，由一个 "),n("code",null,"whereCondition"),l(" 组成。")],-1)),s[21]||(s[21]=n("li",null,[n("code",null,"whereCondition"),l(" 是一个逻辑表达式，对于要选择的每一行，其计算结果为真。如果没有 "),n("code",null,"WHERE"),l(" 子句，将选择所有行。")],-1)),s[22]||(s[22]=n("li",null,[l("在 "),n("code",null,"whereCondition"),l(" 中，可以使用除聚合函数之外的任何 IOTDB 支持的函数和运算符。")],-1)),n("li",null,[s[18]||(s[18]=l("详细说明及示例见文档 ")),e(a,{to:"/zh/UserGuide/V1.0.x/Query-Data/Where-Condition.html"},{default:p(()=>s[17]||(s[17]=[l("查询过滤条件")])),_:1}),s[19]||(s[19]=l(" 。"))])]),s[64]||(s[64]=n("h3",{id:"group-by-子句",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#group-by-子句"},[n("span",null,[n("code",null,"GROUP BY"),l(" 子句")])])],-1)),n("ul",null,[s[26]||(s[26]=n("li",null,[n("code",null,"GROUP BY"),l(" 子句指定对序列进行分段或分组聚合的方式。")],-1)),s[27]||(s[27]=n("li",null,[l("分段聚合是指按照时间维度，针对同时间序列中不同数据点之间的时间关系，对数据在行的方向进行分段，每个段得到一个聚合值。目前仅支持"),n("strong",null,"按时间区间分段"),l("，未来将支持更多分段方式。")],-1)),s[28]||(s[28]=n("li",null,[l("分组聚合是指针对不同时间序列，在时间序列的潜在业务属性上分组，每个组包含若干条时间序列，每个组得到一个聚合值。支持"),n("strong",null,"按路径层级分组"),l("和"),n("strong",null,"按序列标签分组"),l("两种分组方式。")],-1)),s[29]||(s[29]=n("li",null,"分段聚合和分组聚合可以混合使用。",-1)),n("li",null,[s[24]||(s[24]=l("详细说明及示例见文档 ")),e(a,{to:"/zh/UserGuide/V1.0.x/Query-Data/Group-By.html"},{default:p(()=>s[23]||(s[23]=[l("分段分组聚合")])),_:1}),s[25]||(s[25]=l(" 。"))])]),s[65]||(s[65]=n("h3",{id:"having-子句",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#having-子句"},[n("span",null,[n("code",null,"HAVING"),l(" 子句")])])],-1)),n("ul",null,[s[33]||(s[33]=o("<li><code>HAVING</code> 子句指定了对聚合结果的筛选条件，由一个 <code>havingCondition</code> 组成。</li><li><code>havingCondition</code> 是一个逻辑表达式，对于要选择的聚合结果，其计算结果为真。如果没有 <code>HAVING</code> 子句，将选择所有聚合结果。</li><li><code>HAVING</code> 要和聚合函数以及 <code>GROUP BY</code> 子句一起使用。</li>",3)),n("li",null,[s[31]||(s[31]=l("详细说明及示例见文档 ")),e(a,{to:"/zh/UserGuide/V1.0.x/Query-Data/Having-Condition.html"},{default:p(()=>s[30]||(s[30]=[l("聚合结果过滤")])),_:1}),s[32]||(s[32]=l(" 。"))])]),s[66]||(s[66]=o('<h3 id="order-by-子句" tabindex="-1"><a class="header-anchor" href="#order-by-子句"><span><code>ORDER BY</code> 子句</span></a></h3><ul><li><code>ORDER BY</code> 子句用于指定结果集的排序方式。</li><li>按时间对齐模式下：默认按照时间戳大小升序排列，可以通过 <code>ORDER BY TIME DESC</code> 指定结果集按照时间戳大小降序排列。</li><li>按设备对齐模式下：先按照设备排列，每个设备内部按照时间戳大小升序排列，暂不支持使用 <code>ORDER BY</code> 子句。</li></ul><h3 id="fill-子句" tabindex="-1"><a class="header-anchor" href="#fill-子句"><span><code>FILL</code> 子句</span></a></h3>',3)),n("ul",null,[s[37]||(s[37]=n("li",null,[n("code",null,"FILL"),l(" 子句用于指定数据缺失情况下的填充模式，允许用户按照特定的方法对任何查询的结果集填充空值。")],-1)),n("li",null,[s[35]||(s[35]=l("详细说明及示例见文档 ")),e(a,{to:"/zh/UserGuide/V1.0.x/Query-Data/Fill.html"},{default:p(()=>s[34]||(s[34]=[l("结果集补空值")])),_:1}),s[36]||(s[36]=l(" 。"))])]),s[67]||(s[67]=n("h3",{id:"slimit-和-soffset-子句",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#slimit-和-soffset-子句"},[n("span",null,[n("code",null,"SLIMIT"),l(" 和 "),n("code",null,"SOFFSET"),l(" 子句")])])],-1)),n("ul",null,[s[41]||(s[41]=n("li",null,[n("code",null,"SLIMIT"),l(" 指定查询结果的列数，"),n("code",null,"SOFFSET"),l(" 指定查询结果显示的起始列位置。"),n("code",null,"SLIMIT"),l(" 和 "),n("code",null,"SOFFSET"),l(" 仅用于控制值列，对时间列和设备列无效。")],-1)),n("li",null,[s[39]||(s[39]=l("关于查询结果分页，详细说明及示例见文档 ")),e(a,{to:"/zh/UserGuide/V1.0.x/Query-Data/Pagination.html"},{default:p(()=>s[38]||(s[38]=[l("结果集分页")])),_:1}),s[40]||(s[40]=l(" 。"))])]),s[68]||(s[68]=n("h3",{id:"limit-和-offset-子句",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#limit-和-offset-子句"},[n("span",null,[n("code",null,"LIMIT"),l(" 和 "),n("code",null,"OFFSET"),l(" 子句")])])],-1)),n("ul",null,[s[45]||(s[45]=n("li",null,[n("code",null,"LIMIT"),l(" 指定查询结果的行数，"),n("code",null,"OFFSET"),l(" 指定查询结果显示的起始行位置。")],-1)),n("li",null,[s[43]||(s[43]=l("关于查询结果分页，详细说明及示例见文档 ")),e(a,{to:"/zh/UserGuide/V1.0.x/Query-Data/Pagination.html"},{default:p(()=>s[42]||(s[42]=[l("结果集分页")])),_:1}),s[44]||(s[44]=l(" 。"))])]),s[69]||(s[69]=n("h3",{id:"align-by-子句",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#align-by-子句"},[n("span",null,[n("code",null,"ALIGN BY"),l(" 子句")])])],-1)),n("ul",null,[s[49]||(s[49]=n("li",null,[l("查询结果集默认"),n("strong",null,"按时间对齐"),l("，包含一列时间列和若干个值列，每一行数据各列的时间戳相同。")],-1)),s[50]||(s[50]=n("li",null,[l("除按时间对齐之外，还支持"),n("strong",null,"按设备对齐"),l("，查询结果集包含一列时间列、一列设备列和若干个值列。")],-1)),n("li",null,[s[47]||(s[47]=l("详细说明及示例见文档 ")),e(a,{to:"/zh/UserGuide/V1.0.x/Query-Data/Align-By.html"},{default:p(()=>s[46]||(s[46]=[l("查询对齐模式")])),_:1}),s[48]||(s[48]=l(" 。"))])]),s[70]||(s[70]=o(`<h2 id="sql-示例" tabindex="-1"><a class="header-anchor" href="#sql-示例"><span>SQL 示例</span></a></h2><h3 id="示例1-根据一个时间区间选择一列数据" tabindex="-1"><a class="header-anchor" href="#示例1-根据一个时间区间选择一列数据"><span>示例1：根据一个时间区间选择一列数据</span></a></h3><p>SQL 语句为：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> temperature </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#C678DD;"> where</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 2017</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">-01T00:</span><span style="color:#D19A66;">08</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其含义为：</p><p>被选择的设备为 ln 集团 wf01 子站 wt01 设备；被选择的时间序列为温度传感器（temperature）；该语句要求选择出该设备在 “2017-11-01T00:08:00.000” 时间点以前的所有温度传感器的值。</p><p>该 SQL 语句的执行结果如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf01.wt01.temperature|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>|2017-11-01T00:00:00.000+08:00|                        25.96|</span></span>
<span class="line"><span>|2017-11-01T00:01:00.000+08:00|                        24.36|</span></span>
<span class="line"><span>|2017-11-01T00:02:00.000+08:00|                        20.09|</span></span>
<span class="line"><span>|2017-11-01T00:03:00.000+08:00|                        20.18|</span></span>
<span class="line"><span>|2017-11-01T00:04:00.000+08:00|                        21.13|</span></span>
<span class="line"><span>|2017-11-01T00:05:00.000+08:00|                        22.72|</span></span>
<span class="line"><span>|2017-11-01T00:06:00.000+08:00|                        20.71|</span></span>
<span class="line"><span>|2017-11-01T00:07:00.000+08:00|                        21.45|</span></span>
<span class="line"><span>+-----------------------------+-----------------------------+</span></span>
<span class="line"><span>Total line number = 8</span></span>
<span class="line"><span>It costs 0.026s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例2-根据一个时间区间选择多列数据" tabindex="-1"><a class="header-anchor" href="#示例2-根据一个时间区间选择多列数据"><span>示例2：根据一个时间区间选择多列数据</span></a></h3><p>SQL 语句为：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#C678DD;"> status</span><span style="color:#ABB2BF;">, temperature </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#C678DD;"> where</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 2017</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">-01T00:</span><span style="color:#D19A66;">05</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#C678DD;"> and</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 2017</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">-01T00:</span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其含义为：</p><p>被选择的设备为 ln 集团 wf01 子站 wt01 设备；被选择的时间序列为供电状态（status）和温度传感器（temperature）；该语句要求选择出 “2017-11-01T00:05:00.000” 至 “2017-11-01T00:12:00.000” 之间的所选时间序列的值。</p><p>该 SQL 语句的执行结果如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------------+-----------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|</span></span>
<span class="line"><span>+-----------------------------+------------------------+-----------------------------+</span></span>
<span class="line"><span>|2017-11-01T00:06:00.000+08:00|                   false|                        20.71|</span></span>
<span class="line"><span>|2017-11-01T00:07:00.000+08:00|                   false|                        21.45|</span></span>
<span class="line"><span>|2017-11-01T00:08:00.000+08:00|                   false|                        22.58|</span></span>
<span class="line"><span>|2017-11-01T00:09:00.000+08:00|                   false|                        20.98|</span></span>
<span class="line"><span>|2017-11-01T00:10:00.000+08:00|                    true|                        25.52|</span></span>
<span class="line"><span>|2017-11-01T00:11:00.000+08:00|                   false|                        22.91|</span></span>
<span class="line"><span>+-----------------------------+------------------------+-----------------------------+</span></span>
<span class="line"><span>Total line number = 6</span></span>
<span class="line"><span>It costs 0.018s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例3-按照多个时间区间选择同一设备的多列数据" tabindex="-1"><a class="header-anchor" href="#示例3-按照多个时间区间选择同一设备的多列数据"><span>示例3：按照多个时间区间选择同一设备的多列数据</span></a></h3><p>IoTDB 支持在一次查询中指定多个时间区间条件，用户可以根据需求随意组合时间区间条件。例如，</p><p>SQL 语句为：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#C678DD;"> status</span><span style="color:#ABB2BF;">, temperature </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#C678DD;"> where</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">time</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 2017</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">-01T00:</span><span style="color:#D19A66;">05</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#C678DD;"> and</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 2017</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">-01T00:</span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">or</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">time</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#D19A66;"> 2017</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">-01T16:</span><span style="color:#D19A66;">35</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#C678DD;"> and</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 2017</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">-01T16:</span><span style="color:#D19A66;">37</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其含义为：</p><p>被选择的设备为 ln 集团 wf01 子站 wt01 设备；被选择的时间序列为“供电状态（status）”和“温度传感器（temperature）”；该语句指定了两个不同的时间区间，分别为“2017-11-01T00:05:00.000 至 2017-11-01T00:12:00.000”和“2017-11-01T16:35:00.000 至 2017-11-01T16:37:00.000”；该语句要求选择出满足任一时间区间的被选时间序列的值。</p><p>该 SQL 语句的执行结果如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------------+-----------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf01.wt01.status|root.ln.wf01.wt01.temperature|</span></span>
<span class="line"><span>+-----------------------------+------------------------+-----------------------------+</span></span>
<span class="line"><span>|2017-11-01T00:06:00.000+08:00|                   false|                        20.71|</span></span>
<span class="line"><span>|2017-11-01T00:07:00.000+08:00|                   false|                        21.45|</span></span>
<span class="line"><span>|2017-11-01T00:08:00.000+08:00|                   false|                        22.58|</span></span>
<span class="line"><span>|2017-11-01T00:09:00.000+08:00|                   false|                        20.98|</span></span>
<span class="line"><span>|2017-11-01T00:10:00.000+08:00|                    true|                        25.52|</span></span>
<span class="line"><span>|2017-11-01T00:11:00.000+08:00|                   false|                        22.91|</span></span>
<span class="line"><span>|2017-11-01T16:35:00.000+08:00|                    true|                        23.44|</span></span>
<span class="line"><span>|2017-11-01T16:36:00.000+08:00|                   false|                        21.98|</span></span>
<span class="line"><span>|2017-11-01T16:37:00.000+08:00|                   false|                        21.93|</span></span>
<span class="line"><span>+-----------------------------+------------------------+-----------------------------+</span></span>
<span class="line"><span>Total line number = 9</span></span>
<span class="line"><span>It costs 0.018s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例4-按照多个时间区间选择不同设备的多列数据" tabindex="-1"><a class="header-anchor" href="#示例4-按照多个时间区间选择不同设备的多列数据"><span>示例4：按照多个时间区间选择不同设备的多列数据</span></a></h3><p>该系统支持在一次查询中选择任意列的数据，也就是说，被选择的列可以来源于不同的设备。例如，SQL 语句为：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#D19A66;"> wf01</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt01</span><span style="color:#ABB2BF;">.</span><span style="color:#C678DD;">status</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">wf02</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">wt02</span><span style="color:#ABB2BF;">.hardware </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#C678DD;"> where</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">time</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 2017</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">-01T00:</span><span style="color:#D19A66;">05</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#C678DD;"> and</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#D19A66;"> 2017</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">-01T00:</span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">or</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">time</span><span style="color:#56B6C2;"> &gt;=</span><span style="color:#D19A66;"> 2017</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">-01T16:</span><span style="color:#D19A66;">35</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#C678DD;"> and</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &lt;=</span><span style="color:#D19A66;"> 2017</span><span style="color:#ABB2BF;">-</span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">-01T16:</span><span style="color:#D19A66;">37</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">00</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">000</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其含义为：</p><p>被选择的时间序列为 “ln 集团 wf01 子站 wt01 设备的供电状态” 以及 “ln 集团 wf02 子站 wt02 设备的硬件版本”；该语句指定了两个时间区间，分别为 “2017-11-01T00:05:00.000 至 2017-11-01T00:12:00.000” 和 “2017-11-01T16:35:00.000 至 2017-11-01T16:37:00.000”；该语句要求选择出满足任意时间区间的被选时间序列的值。</p><p>该 SQL 语句的执行结果如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+------------------------+--------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf01.wt01.status|root.ln.wf02.wt02.hardware|</span></span>
<span class="line"><span>+-----------------------------+------------------------+--------------------------+</span></span>
<span class="line"><span>|2017-11-01T00:06:00.000+08:00|                   false|                        v1|</span></span>
<span class="line"><span>|2017-11-01T00:07:00.000+08:00|                   false|                        v1|</span></span>
<span class="line"><span>|2017-11-01T00:08:00.000+08:00|                   false|                        v1|</span></span>
<span class="line"><span>|2017-11-01T00:09:00.000+08:00|                   false|                        v1|</span></span>
<span class="line"><span>|2017-11-01T00:10:00.000+08:00|                    true|                        v2|</span></span>
<span class="line"><span>|2017-11-01T00:11:00.000+08:00|                   false|                        v1|</span></span>
<span class="line"><span>|2017-11-01T16:35:00.000+08:00|                    true|                        v2|</span></span>
<span class="line"><span>|2017-11-01T16:36:00.000+08:00|                   false|                        v1|</span></span>
<span class="line"><span>|2017-11-01T16:37:00.000+08:00|                   false|                        v1|</span></span>
<span class="line"><span>+-----------------------------+------------------------+--------------------------+</span></span>
<span class="line"><span>Total line number = 9</span></span>
<span class="line"><span>It costs 0.014s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例5-根据时间降序返回结果集" tabindex="-1"><a class="header-anchor" href="#示例5-根据时间降序返回结果集"><span>示例5：根据时间降序返回结果集</span></a></h3><p>IoTDB 支持 <code>order by time</code> 语句，用于对结果按照时间进行降序展示。例如，SQL 语句为：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">select</span><span style="color:#ABB2BF;"> * </span><span style="color:#C678DD;">from</span><span style="color:#D19A66;"> root</span><span style="color:#ABB2BF;">.</span><span style="color:#D19A66;">ln</span><span style="color:#ABB2BF;">.** </span><span style="color:#C678DD;">where</span><span style="color:#C678DD;"> time</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#D19A66;"> 1</span><span style="color:#C678DD;"> order by</span><span style="color:#C678DD;"> time</span><span style="color:#C678DD;"> desc</span><span style="color:#C678DD;"> limit</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>语句执行的结果为：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>+-----------------------------+--------------------------+------------------------+-----------------------------+------------------------+</span></span>
<span class="line"><span>|                         Time|root.ln.wf02.wt02.hardware|root.ln.wf02.wt02.status|root.ln.wf01.wt01.temperature|root.ln.wf01.wt01.status|</span></span>
<span class="line"><span>+-----------------------------+--------------------------+------------------------+-----------------------------+------------------------+</span></span>
<span class="line"><span>|2017-11-07T23:59:00.000+08:00|                        v1|                   false|                        21.07|                   false|</span></span>
<span class="line"><span>|2017-11-07T23:58:00.000+08:00|                        v1|                   false|                        22.93|                   false|</span></span>
<span class="line"><span>|2017-11-07T23:57:00.000+08:00|                        v2|                    true|                        24.39|                    true|</span></span>
<span class="line"><span>|2017-11-07T23:56:00.000+08:00|                        v2|                    true|                        24.44|                    true|</span></span>
<span class="line"><span>|2017-11-07T23:55:00.000+08:00|                        v2|                    true|                         25.9|                    true|</span></span>
<span class="line"><span>|2017-11-07T23:54:00.000+08:00|                        v1|                   false|                        22.52|                   false|</span></span>
<span class="line"><span>|2017-11-07T23:53:00.000+08:00|                        v2|                    true|                        24.58|                    true|</span></span>
<span class="line"><span>|2017-11-07T23:52:00.000+08:00|                        v1|                   false|                        20.18|                   false|</span></span>
<span class="line"><span>|2017-11-07T23:51:00.000+08:00|                        v1|                   false|                        22.24|                   false|</span></span>
<span class="line"><span>|2017-11-07T23:50:00.000+08:00|                        v2|                    true|                         23.7|                    true|</span></span>
<span class="line"><span>+-----------------------------+--------------------------+------------------------+-----------------------------+------------------------+</span></span>
<span class="line"><span>Total line number = 10</span></span>
<span class="line"><span>It costs 0.016s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式"><span>使用方式</span></a></h2><p>数据查询语句支持在 SQL 命令行终端、JDBC、JAVA / C++ / Python / Go 等编程语言 API、RESTful API 中使用。</p>`,37)),n("ul",null,[n("li",null,[n("p",null,[s[52]||(s[52]=l("在 SQL 命令行终端中执行查询语句：启动 SQL 命令行终端，直接输入查询语句执行即可，详见 ")),e(a,{to:"/zh/UserGuide/V1.0.x/QuickStart/Command-Line-Interface.html"},{default:p(()=>s[51]||(s[51]=[l("SQL 命令行终端")])),_:1}),s[53]||(s[53]=l("。"))])]),n("li",null,[n("p",null,[s[55]||(s[55]=l("在 JDBC 中执行查询语句，详见 ")),e(a,{to:"/zh/UserGuide/V1.0.x/API/Programming-JDBC.html"},{default:p(()=>s[54]||(s[54]=[l("JDBC")])),_:1}),s[56]||(s[56]=l(" 。"))])]),s[60]||(s[60]=o('<li><p>在 JAVA / C++ / Python / Go 等编程语言 API 中执行查询语句，详见应用编程接口一章相应文档。接口原型如下：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#282c34;color:#abb2bf;"><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">SessionDataSet</span><span style="color:#61AFEF;"> executeQueryStatement</span><span style="color:#E06C75;">(</span><span style="color:#E5C07B;">String</span><span style="color:#E06C75;"> sql)</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li>',1)),n("li",null,[n("p",null,[s[58]||(s[58]=l("在 RESTful API 中使用，详见 ")),e(a,{to:"/zh/UserGuide/V1.0.x/API/RestService.html"},{default:p(()=>s[57]||(s[57]=[l("HTTP API")])),_:1}),s[59]||(s[59]=l(" 。"))])])])])}const B=i(c,[["render",u],["__file","Overview.html.vue"]]),m=JSON.parse('{"path":"/zh/UserGuide/V1.0.x/Query-Data/Overview.html","title":"概述","lang":"zh-CN","frontmatter":{"description":"概述 在 IoTDB 中，使用 SELECT 语句从一条或多条时间序列中查询数据。 语法定义 语法说明 SELECT 子句 SELECT 子句指定查询的输出，由若干个 selectExpr 组成。 每个 selectExpr 定义查询结果中的一列或多列，它是一个由时间序列路径后缀、常量、函数和运算符组成的表达式。 支持使用AS为查询结果集中的列指定别名...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/V1.0.x/Query-Data/Overview.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/V1.0.x/Query-Data/Overview.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"概述"}],["meta",{"property":"og:description","content":"概述 在 IoTDB 中，使用 SELECT 语句从一条或多条时间序列中查询数据。 语法定义 语法说明 SELECT 子句 SELECT 子句指定查询的输出，由若干个 selectExpr 组成。 每个 selectExpr 定义查询结果中的一列或多列，它是一个由时间序列路径后缀、常量、函数和运算符组成的表达式。 支持使用AS为查询结果集中的列指定别名..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-07-10T03:11:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-10T03:11:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"概述\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-10T03:11:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"语法定义","slug":"语法定义","link":"#语法定义","children":[]},{"level":2,"title":"语法说明","slug":"语法说明","link":"#语法说明","children":[{"level":3,"title":"SELECT 子句","slug":"select-子句","link":"#select-子句","children":[]},{"level":3,"title":"INTO 子句","slug":"into-子句","link":"#into-子句","children":[]},{"level":3,"title":"FROM 子句","slug":"from-子句","link":"#from-子句","children":[]},{"level":3,"title":"WHERE 子句","slug":"where-子句","link":"#where-子句","children":[]},{"level":3,"title":"GROUP BY 子句","slug":"group-by-子句","link":"#group-by-子句","children":[]},{"level":3,"title":"HAVING 子句","slug":"having-子句","link":"#having-子句","children":[]},{"level":3,"title":"ORDER BY 子句","slug":"order-by-子句","link":"#order-by-子句","children":[]},{"level":3,"title":"FILL 子句","slug":"fill-子句","link":"#fill-子句","children":[]},{"level":3,"title":"SLIMIT 和 SOFFSET 子句","slug":"slimit-和-soffset-子句","link":"#slimit-和-soffset-子句","children":[]},{"level":3,"title":"LIMIT 和 OFFSET 子句","slug":"limit-和-offset-子句","link":"#limit-和-offset-子句","children":[]},{"level":3,"title":"ALIGN BY 子句","slug":"align-by-子句","link":"#align-by-子句","children":[]}]},{"level":2,"title":"SQL 示例","slug":"sql-示例","link":"#sql-示例","children":[{"level":3,"title":"示例1：根据一个时间区间选择一列数据","slug":"示例1-根据一个时间区间选择一列数据","link":"#示例1-根据一个时间区间选择一列数据","children":[]},{"level":3,"title":"示例2：根据一个时间区间选择多列数据","slug":"示例2-根据一个时间区间选择多列数据","link":"#示例2-根据一个时间区间选择多列数据","children":[]},{"level":3,"title":"示例3：按照多个时间区间选择同一设备的多列数据","slug":"示例3-按照多个时间区间选择同一设备的多列数据","link":"#示例3-按照多个时间区间选择同一设备的多列数据","children":[]},{"level":3,"title":"示例4：按照多个时间区间选择不同设备的多列数据","slug":"示例4-按照多个时间区间选择不同设备的多列数据","link":"#示例4-按照多个时间区间选择不同设备的多列数据","children":[]},{"level":3,"title":"示例5：根据时间降序返回结果集","slug":"示例5-根据时间降序返回结果集","link":"#示例5-根据时间降序返回结果集","children":[]}]},{"level":2,"title":"使用方式","slug":"使用方式","link":"#使用方式","children":[]}],"git":{"createdTime":1688958677000,"updatedTime":1688958677000,"contributors":[{"name":"CritasWang","username":"CritasWang","email":"critas@outlook.com","commits":1,"url":"https://github.com/CritasWang"}]},"readingTime":{"minutes":9.01,"words":2702},"filePathRelative":"zh/UserGuide/V1.0.x/Query-Data/Overview.md","localizedDate":"2023年7月10日","autoDesc":true}');export{B as comp,m as data};
